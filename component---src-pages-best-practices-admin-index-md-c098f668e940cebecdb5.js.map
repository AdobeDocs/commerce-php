{"version":3,"file":"component---src-pages-best-practices-admin-index-md-c098f668e940cebecdb5.js","mappings":"qRAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,SACH,UACL,kBAAK,kUACL,kBAAK,sMACL,SAACV,EAAD,CAAaW,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjD,kBAAK,4QACL,kBAAK,wEAAsE,cAAGG,WAAW,IACrF,KAAQ,yEACL,yBAA6B,aAAW,cAAGA,WAAW,IACzD,KAAQ,qEACL,qBAAyB,KAGnC,CAEDL,EAAWM,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/best-practices/admin/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"admin\"\n    }}>{`Admin`}</h1>\n    <p>{`This section of the Best Practices Guide discusses the Admin, the UI panel used by administrators. It is where system and storefront parameters can be modified and configured. Third-party extensions installed by the system admin or merchant are also found in this area, along with any of their configuration settings.`}</p>\n    <p>{`This is an important section to read, because what extension developers choose to do (or not do) when coding to integrate their extensions has a big impact on the look and feel of the Admin UI.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Remember that most merchants have multiple extensions installed, and most of these extensions are exposed through the Admin. In order to prevent a cluttered Admin, please follow the guidelines, and communicate with Adobe and the community when you have questions.`}</p>\n    <p>{`For additional information on design topics for the Admin, read the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/admin-developer/pattern-library/\"\n      }}>{`Admin Pattern Library`}</a>{` and the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/admin-developer/style-guide/\"\n      }}>{`Admin Style Guide`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}