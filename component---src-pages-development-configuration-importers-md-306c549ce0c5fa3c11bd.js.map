{"version":3,"file":"component---src-pages-development-configuration-importers-md-306c549ce0c5fa3c11bd.js","mappings":"oRAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,2BACH,4BACL,kBAAK,0LAC0C,cAAGC,WAAW,IACzD,KAAQ,4GACL,uBAA2B,MAClC,kBAAK,wIAAsI,uBAAYA,WAAW,KAAM,cAA2B,sDACnM,kBAAK,YAAU,cAAGA,WAAW,IACzB,KAAQ,2IACP,uBAAYA,WAAW,KAAM,6BAA0C,YAAgB,wDAC5F,kBAAK,4DACL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,8CAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,6CAClD,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,8CAEpD,eACE,GAAM,sBACL,uBAAYA,WAAW,MAAO,uBACjC,kBAAK,0CAAwC,cAAGA,WAAW,IACvD,KAAQ,2HACP,uBAAYA,WAAW,KAAM,iEAAiF,uCACnH,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,uBAAYA,WAAW,KAAM,uBAAoC,oBAAkB,uBAAYA,WAAW,KAAM,SAAsB,qCAAmC,uBAAYA,WAAW,KAAM,cAA2B,MACpP,cAAGA,WAAW,MAAO,0FAEvB,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,uBAAYA,WAAW,KAAM,mCAAgD,8HAChG,cAAGA,WAAW,MAAO,QAAM,uBAAYA,WAAW,KAAM,SAAsB,4CAA0C,uBAAYA,WAAW,KAAM,UAAuB,MAC5K,cAAGA,WAAW,MAAO,oFACrB,cAAGA,WAAW,MAAO,2CAAyC,uBAAYA,WAAW,KAAM,uCAC3F,cAAGA,WAAW,MAAO,uBAAqB,uBAAYA,WAAW,KAAM,MAAmB,wDAAsD,uBAAYA,WAAW,KAAM,OAAoB,iCAGrM,eACE,GAAM,+BACH,gCACL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,cAAY,uBAAYA,WAAW,KAAM,YAAyB,2BAAyB,cAAGA,WAAW,IAC1H,KAAQ,2HACP,uBAAYA,WAAW,KAAM,iEAAiF,OAErH,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,4CAA0C,cAAGA,WAAW,IACzE,KAAQ,0CACP,uBAAYA,WAAW,KAAM,WAA2B,MAC7D,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,gBACV,qbAaX,kBAAK,oEAAkE,uBAAYA,WAAW,KAAM,2CAAwD,aAAW,uBAAYA,WAAW,KAAM,QAAqB,cAAY,uBAAYA,WAAW,KAAM,cAA2B,MAC7R,kBAAK,QAAM,uBAAYA,WAAW,KAAM,QAAqB,iKAA+J,uBAAYA,WAAW,KAAM,QAAqB,mBAC9Q,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,2DACL,eACE,GAAM,oBACH,qBACL,oBACE,eAAIC,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,qCACL,4CACP,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,yHACL,0BACP,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,sHACL,uBAIZ,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/configuration/importers.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"configuration-importers\"\n    }}>{`Configuration importers`}</h1>\n    <p>{`A configuration importer provides consistent configurations across multiple systems (such as development, staging, and production).\nThis is useful for deployment strategies such as `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/deployment/overview.html\"\n      }}>{`pipeline deployment`}</a>{`.`}</p>\n    <p>{`Adobe Commerce and Magento Open Source use configuration importers to import configuration data from the shared configuration file, `}<inlineCode parentName=\"p\">{`config.php`}</inlineCode>{`, to the appropriate storage, such as a database.`}</p>\n    <p>{`Use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/configuration-management/import-configuration.html\"\n      }}><inlineCode parentName=\"a\">{`magento app:config:import`}</inlineCode>{` command`}</a>{` to import the configuration from the command line.`}</p>\n    <p>{`Currently, the application has the following importers:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Magento\\\\Config\\\\Model\\\\Config\\\\Importer`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Magento\\\\Store\\\\Model\\\\Config\\\\Importer`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Magento\\\\Theme\\\\Model\\\\Config\\\\Importer`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"importerinterface\"\n    }}><inlineCode parentName=\"h2\">{`ImporterInterface`}</inlineCode></h2>\n    <p>{`All importers implement the interface `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/App/DeploymentConfig/ImporterInterface.php\"\n      }}><inlineCode parentName=\"a\">{`Magento\\\\Framework\\\\App\\\\DeploymentConfig\\\\ImporterInterface`}</inlineCode></a>{` and define the following methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`import(array $data)`}</inlineCode>{` - The argument `}<inlineCode parentName=\"p\">{`$data`}</inlineCode>{` is the configuration array from `}<inlineCode parentName=\"p\">{`config.php`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`This method should return the array of messages generated during the import process.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`getWarningMessages(array $data)`}</inlineCode>{` - Generates and returns the array of warning messages that contain information about what will be changed in the system.`}</p>\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`$data`}</inlineCode>{` argument is the same as for the method `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`If this method returns an empty array, the import proceeds without interaction.`}</p>\n        <p parentName=\"li\">{`You can also provide a message such as `}<inlineCode parentName=\"p\">{`Do you want to continue [yes/no]?`}</inlineCode></p>\n        <p parentName=\"li\">{`If the user enters `}<inlineCode parentName=\"p\">{`no`}</inlineCode>{`, import is canceled; otherwise, if the user enters `}<inlineCode parentName=\"p\">{`yes`}</inlineCode>{`, the import is processed.`}</p>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"implement-your-own-importer\"\n    }}>{`Implement your own importer`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create an `}<inlineCode parentName=\"p\">{`Importer`}</inlineCode>{` class that implements `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/App/DeploymentConfig/ImporterInterface.php\"\n          }}><inlineCode parentName=\"a\">{`Magento\\\\Framework\\\\App\\\\DeploymentConfig\\\\ImporterInterface`}</inlineCode></a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Register your importer in your module's `}<a parentName=\"p\" {...{\n            \"href\": \"../components/dependency-injection.md\"\n          }}><inlineCode parentName=\"a\">{`di.xml`}</inlineCode></a>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-xml\"\n          }}>{`<type name=\"Magento\\\\Deploy\\\\Model\\\\DeploymentConfig\\\\ImporterPool\">\n    <arguments>\n        <argument name=\"importers\" xsi:type=\"array\">\n            <item name=\"i18n\" xsi:type=\"array\">\n                <item name=\"class\" xsi:type=\"string\">Vendor\\\\Module\\\\Model\\\\Config\\\\Importer</item>\n                <item name=\"sortOrder\" xsi:type=\"number\">110</item>\n            </item>\n        </argument>\n    </arguments>\n</type>\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`The sample code in the preceding example registers the importer `}<inlineCode parentName=\"p\">{`Vendor\\\\Module\\\\Model\\\\Config\\\\Importer`}</inlineCode>{` for the `}<inlineCode parentName=\"p\">{`i18n`}</inlineCode>{` array in `}<inlineCode parentName=\"p\">{`config.php`}</inlineCode>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`i18n`}</inlineCode>{` array has a queue order of 110, which means this importer runs after importers that have value of sort order less than 110 has and if values in the section `}<inlineCode parentName=\"p\">{`i18n`}</inlineCode>{` were changed.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`An array cannot be imported by more than one importer.`}</p>\n    <h2 {...{\n      \"id\": \"more-information\"\n    }}>{`More information`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"sensitive-environment-settings.md\"\n        }}>{`Sensitive and system-specific settings`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/files/config-reference-configphp.html\"\n        }}>{`config.php reference`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/files/config-reference-envphp.html\"\n        }}>{`env.php reference`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}