"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[2751],{243:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return r},default:function(){return u}});var a=t(58168),o=t(80045),s=(t(88763),t(15680)),c=t(83407);const i=["components"],r={},l=(d="InlineAlert",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.mdx)("div",e)});var d;const p={_frontmatter:r},h=c.A;function u(e){let{components:n}=e,t=(0,o.A)(e,i);return(0,s.mdx)(h,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.mdx)("p",null,"The PageCache module provides functionality of caching full pages content in Magento application. An administrator may switch between built-in caching and Varnish caching. Built-in caching is default and ready to use without the need of any external tools.\nRequests and responses are managed by PageCache plugin. It loads data from cache and returns a response. If data is not present in cache, it passes the request to Magento and waits for the response. Response is then saved in cache.\nBlocks can be set as private blocks by setting the property '_isScopePrivate' to true. These blocks contain personalized information and are not cached in the server. These blocks are being rendered using AJAX call after the page is loaded. Contents are cached in browser instead.\nBlocks can also be set as non-cacheable by setting the 'cacheable' attribute in layout XML files. For example ",(0,s.mdx)("inlineCode",{parentName:"p"},'<block class="Block\\Class" name="blockname" cacheable="false" />'),". Pages containing such blocks are not cached."),(0,s.mdx)(l,{slots:"text",mdxType:"InlineAlert"}),"The version of this module is 100.4.7.")}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-module-reference-module-page-cache-md-358f5f624fb7f87d7213.js.map