{"version":3,"file":"component---src-pages-development-components-api-concepts-md-3562030ec50cc842d19a.js","mappings":"oRAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,8BACH,+BACL,kBAAK,oCACL,eACE,GAAM,wBACH,0BACL,kBAAK,MAAI,eAAIC,WAAW,KAAM,oBAAyB,qMACvD,kBAAK,uDAAqD,uBAAYA,WAAW,KAAM,QAAqB,iBAC5G,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,0FAAwF,uBAAYC,WAAW,KAAM,QAAqB,4KAA0K,cAAGA,WAAW,IACnU,KAAQ,6GACL,0BAA8B,MACrC,eACE,GAAM,0CACH,2CACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,uSAiBP,eACE,GAAM,kBACH,oBACL,kBAAK,yIACL,eACE,GAAM,8CACH,+CACL,kBAAK,QAAM,uBAAYA,WAAW,KAAM,uBAAoC,aAC5E,kBAAK,QAAM,uBAAYA,WAAW,KAAM,6DAA0E,eAClH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,wxCAqDP,kBAAK,mDAAiD,uBAAYA,WAAW,KAAM,UAAuB,QAAM,uBAAYA,WAAW,KAAM,oBAC7I,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,2TAMP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,sDAAmE,0CAAwC,uBAAYA,WAAW,KAAM,kCAA+C,OAAK,uBAAYA,WAAW,KAAM,QAAqB,MAAI,uBAAYA,WAAW,KAAM,OAAoB,MAAI,uBAAYA,WAAW,KAAM,UAAuB,MAAI,uBAAYA,WAAW,KAAM,cAA2B,MAC/b,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,8kCAoDP,eACE,GAAM,aACH,cACL,kBAAK,sDACL,oBACE,eAAIA,WAAW,MAAO,wBACtB,eAAIA,WAAW,MAAO,kCACtB,eAAIA,WAAW,MAAO,WACtB,eAAIA,WAAW,MAAO,eACtB,eAAIA,WAAW,MAAO,wBAExB,kBAAK,qUAGR,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/components/api-concepts.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"public-interfaces-and-apis\"\n    }}>{`Public interfaces and APIs`}</h1>\n    <p>{`Learn about interaces and APIs.`}</p>\n    <h2 {...{\n      \"id\": \"what-is-an-interface\"\n    }}>{`What is an interface?`}</h2>\n    <p>{`A `}<em parentName=\"p\">{`public interface`}</em>{` is a set of code that third-party developers can call, implement, or build as a plug-in. Adobe guarantees that this code will not change in subsequent releases without a major version change.`}</p>\n    <p>{`Public interfaces for a module are marked with the `}<inlineCode parentName=\"p\">{`@api`}</inlineCode>{` annotation.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Third-party developers should use only these interfaces, that is, interfaces with the `}<inlineCode parentName=\"p\">{`@api`}</inlineCode>{` annotation. You can use other interfaces but those may be modified or removed in subsequent Adobe Commerce and Magento Open Source releases. For more information, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/contributor/guides/code-contributions/backward-compatibility-policy/\"\n      }}>{`Backward compatibility`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"example-of-public-interface-annotation\"\n    }}>{`Example of public interface annotation`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n/**\n * Copyright &copy; Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nnamespace Magento\\\\CatalogRule\\\\Api;\n\n/**\n * Interface CatalogRuleRepositoryInterface\n * @api\n * @since 100.1.0\n */\ninterface CatalogRuleRepositoryInterface\n{\n...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"what-is-an-api\"\n    }}>{`What is an API?`}</h2>\n    <p>{`An application programming interface (API) is a set of interfaces and their implementations that a module provides to other modules.`}</p>\n    <h3 {...{\n      \"id\": \"example-of-an-api-interface-implementation\"\n    }}>{`Example of an API interface implementation`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Magento_CatalogRule`}</inlineCode>{` module.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Magento\\\\CatalogRule\\\\Api\\\\CatalogRuleRepositoryInterface`}</inlineCode>{` interface`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n/**\n * Copyright &copy; Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nnamespace Magento\\\\CatalogRule\\\\Api;\n\nuse Magento\\\\CatalogRule\\\\Api\\\\Data\\\\RuleInterface;\nuse Magento\\\\Framework\\\\Exception\\\\CouldNotDeleteException;\nuse Magento\\\\Framework\\\\Exception\\\\CouldNotSaveException;\nuse Magento\\\\Framework\\\\Exception\\\\NoSuchEntityException;\n\n/**\n * Interface CatalogRuleRepositoryInterface\n * @api\n * @since 100.1.0\n */\ninterface CatalogRuleRepositoryInterface\n{\n    /**\n     * @param RuleInterface $rule\n     * @return RuleInterface\n     * @throws CouldNotSaveException\n     * @since 100.1.0\n     */\n    public function save(RuleInterface $rule): RuleInterface;\n\n    /**\n     * @param int $ruleId\n     * @return RuleInterface\n     * @throws NoSuchEntityException\n     * @since 100.1.0\n     */\n    public function get(int $ruleId): RuleInterface;\n\n    /**\n     * @param RuleInterface $rule\n     * @return bool\n     * @throws CouldNotDeleteException\n     * @since 100.1.0\n     */\n    public function delete(RuleInterface $rule): bool;\n\n    /**\n     * @param int $ruleId\n     * @return bool\n     * @throws CouldNotDeleteException\n     * @since 100.1.0\n     */\n    public function deleteById(int $ruleId): bool;\n}\n`}</code></pre>\n    <p>{`An interface implementation is declared in the `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` as `}<inlineCode parentName=\"p\">{`<preference />`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n...\n    <preference for=\"Magento\\\\CatalogRule\\\\Api\\\\CatalogRuleRepositoryInterface\" type=\"Magento\\\\CatalogRule\\\\Model\\\\CatalogRuleRepository\"/>\n...\n</config>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Magento\\\\CatalogRule\\\\Model\\\\CatalogRuleRepository`}</inlineCode>{` implements the default methods of the`}<inlineCode parentName=\"p\">{`CatalogRuleRepositoryInterface`}</inlineCode>{`:  `}<inlineCode parentName=\"p\">{`save`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`delete`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`deleteById`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n/**\n * Copyright &copy; Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nnamespace Magento\\\\CatalogRule\\\\Model;\n\nuse Magento\\\\CatalogRule\\\\Api\\\\Data;\nuse Magento\\\\Framework\\\\Exception\\\\CouldNotDeleteException;\nuse Magento\\\\Framework\\\\Exception\\\\CouldNotSaveException;\nuse Magento\\\\Framework\\\\Exception\\\\NoSuchEntityException;\nuse Magento\\\\Framework\\\\Exception\\\\ValidatorException;\nuse Magento\\\\CatalogRule\\\\Api\\\\CatalogRuleRepositoryInterface;\n\nclass CatalogRuleRepository implements CatalogRuleRepositoryInterface\n{\n    ...\n\n    /**\n     * @inheritdoc\n     */\n    public function save(Data\\\\RuleInterface $rule): Data\\\\RuleInterface\n    {\n        ...\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public function get(int $ruleId): Data\\\\RuleInterface\n    {\n        ...\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public function delete(Data\\\\RuleInterface $rule): bool\n    {\n        ...\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public function deleteById(int $ruleId): bool\n    {\n        ...\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"api-types\"\n    }}>{`API types`}</h3>\n    <p>{`The following items are considered types of APIs:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Directory structure`}</li>\n      <li parentName=\"ul\">{`Configuration files structure`}</li>\n      <li parentName=\"ul\">{`Events`}</li>\n      <li parentName=\"ul\">{`Client API`}</li>\n      <li parentName=\"ul\">{`Provider API (SPI)`}</li>\n    </ul>\n    <p>{`Directory structure and configuration file structure are types of APIs because extension developers use them. Developers write configurations, and place their static files in specified folders; so if the configuration file structure or directory structure changes in subsequent releases, modules and extensions may break.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}