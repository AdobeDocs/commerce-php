"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[70674],{1849:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return p}});var o=n(87462),i=n(45987),a=(n(35776),n(3905)),d=n(91515);const m=["components"],l={},r={_frontmatter:l},s=d.Z;function p(e){let{components:t}=e,n=(0,i.Z)(e,m);return(0,a.mdx)(s,(0,o.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"customize-the-list-of-shipping-methods"},"Customize the list of shipping methods"),(0,a.mdx)("p",null,"This topic describes how to customize list of shipping methods displayed on the checkout page."),(0,a.mdx)("p",null,"Let's consider a case where you need to add a collapsible text field with description for each shipping method in this list. To achieve this, you need to take the following steps:"),(0,a.mdx)("ol",null,(0,a.mdx)("li",{parentName:"ol"},(0,a.mdx)("a",{parentName:"li",href:"#step-1-create-new-template-for-shipping-method-item"},"Create a new template for the shipping method item"),"."),(0,a.mdx)("li",{parentName:"ol"},(0,a.mdx)("a",{parentName:"li",href:"#step-2-create-new-template-for-shipping-methods-list"},"Create a new template for the shipping method list"),"."),(0,a.mdx)("li",{parentName:"ol"},(0,a.mdx)("a",{parentName:"li",href:"#step-3-override-shipping-step-configuration"},"Override the shipping step configuration"),".")),(0,a.mdx)("h2",{id:"step-1-create-new-template-for-shipping-method-item"},"Step 1: Create new template for shipping method item"),(0,a.mdx)("p",null,"In your custom module directory, create a new file: ",(0,a.mdx)("inlineCode",{parentName:"p"},"<your_module_dir>/view/frontend/web/template/custom-method-item-template.html"),". In this file, add the following code."),(0,a.mdx)("p",null,"It is copied from the ",(0,a.mdx)("inlineCode",{parentName:"p"},"<Magento_Checkout_module_dir>/view/frontend/web/template/shipping-address/shipping-method-item.html")," template, with the following modifications:"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"A ",(0,a.mdx)("inlineCode",{parentName:"li"},"<tr>")," element added to contain the shipping method description"),(0,a.mdx)("li",{parentName:"ul"},"A column with trigger elements that provide the collapse/expand functionality added"),(0,a.mdx)("li",{parentName:"ul"},"The entire sample wrapped in ",(0,a.mdx)("inlineCode",{parentName:"li"},"<tbody>")," to provide the general collapsible context for rows")),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-html"},'\x3c!-- Initialize collapsible binding --\x3e\n<tbody collapsible="as: \'$collapsible_\' + method.method_code">\n    <tr class="row">\n        <td class="col col-method">\n            <input type="radio"\n                   class="radio"\n                   click="element.selectShippingMethod"\n                   ifnot="method.error_message"\n                   ko-checked="element.isSelected"\n                   ko-value="method.carrier_code + \'_\' + method.method_code"\n                   attr="\'aria-labelledby\': \'label_method_\' + method.method_code + \'_\' + method.carrier_code + \' \' + \'label_carrier_\' + method.method_code + \'_\' + method.carrier_code,\n                        \'checked\': element.rates().length == 1 || element.isSelected" />\n        </td>\n        <td class="col col-price">\n            <each args="element.getRegion(\'price\')" render="" />\n        </td>\n        <td class="col col-method"\n            attr="\'id\': \'label_method_\' + method.method_code + \'_\' + method.carrier_code"\n            text="method.method_title" />\n        <td class="col col-carrier"\n            attr="\'id\': \'label_carrier_\' + method.method_code + \'_\' + method.carrier_code"\n            text="method.carrier_title" />\n        \x3c!-- Column with collapsible trigger  --\x3e\n        <td class="col">\n            <a toggleCollapsible="\'$collapsible_\' + method.method_code">\n                <span data-bind="i18n: \'Info\'"></span>\n            </a>\n        </td>\n    </tr>\n    \x3c!-- Row for shipping method description --\x3e\n    <tr class="row" visible="$context[\'$collapsible_\' + method.method_code].opened">\n        <td class="col" colspan="5" i18n="\'Some description.\'"/>\n    </tr>\n    <tr class="row row-error"\n        if="method.error_message">\n        <td class="col col-error" colspan="5">\n            <div role="alert" class="message error">\n                <div text="method.error_message"></div>\n            </div>\n            <span class="no-display">\n                <input type="radio"\n                       attr="\'value\' : method.method_code, \'id\': \'s_method_\' + method.method_code" />\n            </span>\n        </td>\n    </tr>\n</tbody>\n')),(0,a.mdx)("h2",{id:"step-2-create-new-template-for-shipping-methods-list"},"Step 2: Create new template for shipping methods list"),(0,a.mdx)("p",null,"In your custom module directory, create a new file: ",(0,a.mdx)("inlineCode",{parentName:"p"},"<your_module_dir>/view/frontend/web/template/custom-method-list-template.html"),". In this file, add the following code. It uses the code from the ",(0,a.mdx)("inlineCode",{parentName:"p"},"app/code/Magento/Checkout/view/frontend/web/template/shipping-address/shipping-method-list.html")," template, with the following modifications:"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"A column for triggers added in ",(0,a.mdx)("inlineCode",{parentName:"li"},"<thead>")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"tbody")," moved to the item template for collapsible context")),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-html"},'<div id="checkout-shipping-method-load">\n    <table class="table-checkout-shipping-method" markdown="1"> <thead>\n        <tr class="row" markdown="1">\n            <th class="col col-method" translate="\'Select Method\'" />\n            <th class="col col-price" translate="\'Price\'" />\n            <th class="col col-method" translate="\'Method Title\'" />\n            <th class="col col-carrier" translate="\'Carrier Title\'" />\n            \x3c!-- Column for triggers --\x3e\n            <th class="col" />\n        </tr>\n        </thead> \x3c!-- tbody was moved inside item template --\x3e \x3c!-- ko foreach: { data: rates(), as: \'method\'} --\x3e \x3c!--ko template: { name: element.shippingMethodItemTemplate} --\x3e\x3c!-- /ko --\x3e \x3c!-- /ko --\x3e </table>\n</div>\n')),(0,a.mdx)("h2",{id:"step-3-override-shipping-step-configuration"},"Step 3: Override shipping step configuration"),(0,a.mdx)("p",null,"In your custom module directory, create a new file: ",(0,a.mdx)("inlineCode",{parentName:"p"},"<your_module_dir>/view/frontend/layout/checkout_index_index.xml"),". In this file, add the following code."),(0,a.mdx)("p",null,"It overrides the ",(0,a.mdx)("inlineCode",{parentName:"p"},"shippingMethodListTemplate")," and ",(0,a.mdx)("inlineCode",{parentName:"p"},"shippingMethodItemTemplate")," properties of ",(0,a.mdx)("inlineCode",{parentName:"p"},"<Magento_Checkout_module_dir>/view/frontend/web/js/view/shipping.js"),":"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-html"},'<page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">\n    <body>\n        <referenceBlock name="checkout.root">\n            <arguments>\n                <argument name="jsLayout" xsi:type="array">\n                    <item name="components" xsi:type="array">\n                        <item name="checkout" xsi:type="array">\n                            <item name="children" xsi:type="array">\n                                <item name="steps" xsi:type="array">\n                                    <item name="children" xsi:type="array">\n                                        <item name="shipping-step" xsi:type="array">\n                                            <item name="children" xsi:type="array">\n                                                <item name="shippingAddress" xsi:type="array">\n                                                    <item name="config" xsi:type="array">\n                                                        <item name="shippingMethodItemTemplate" xsi:type="string">Vendor_Checkout/custom-method-item-template</item>\n                                                        <item name="shippingMethodListTemplate" xsi:type="string">Vendor_Checkout/custom-method-list-template</item>\n                                                    </item>\n                                                </item>\n                                            </item>\n                                        </item>\n                                    </item>\n                                </item>\n                            </item>\n                        </item>\n                    </item>\n                </argument>\n            </arguments>\n        </referenceBlock>\n    </body>\n</page>\n')))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-tutorials-frontend-custom-checkout-add-shipping-methods-md-ba22a97673c4491a2992.js.map