{"version":3,"file":"component---src-pages-developer-build-dependency-injection-file-md-913da7ea49f4ed83145a.js","mappings":"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","sources":["webpack://commerce-php/./src/pages/developer/build/dependency-injection-file.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` file configures which `}<a parentName=\"p\" {...{\n        \"href\": \"../components/dependency-injection.md\"\n      }}>{`dependencies`}</a>{` are injected by the `}<a parentName=\"p\" {...{\n        \"href\": \"../components/object-manager/index.md\"\n      }}>{`object manager`}</a>{`. You can also specify `}<a parentName=\"p\" {...{\n        \"href\": \"#sensitive-and-system-specific-configuration-settings\"\n      }}>{`sensitive configuration settings`}</a>{` using `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"areas-and-application-entry-points\"\n    }}>{`Areas and application entry points`}</h2>\n    <p>{`Each `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/module\"\n      }}>{`module`}</a>{` can have a global and area-specific `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` file.\nThe application reads all the `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` configuration files declared in the system and merges them all together by appending all nodes.`}</p>\n    <p>{`As a general rule, the area specific `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` files should configure dependencies for the presentation layer, and your module's global `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` file should configure the remaining dependencies.`}</p>\n    <p>{`The application loads the configuration in the following stages:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Initial (`}<inlineCode parentName=\"li\">{`app/etc/di.xml`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`Global (`}<inlineCode parentName=\"li\">{`<moduleDir>/etc/di.xml`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`Area-specific (`}<inlineCode parentName=\"li\">{`<moduleDir>/etc/<area>/di.xml`}</inlineCode>{`)`}</li>\n    </ol>\n    <p>{`The areas are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`adminhtml`}</li>\n      <li parentName=\"ul\">{`frontend`}</li>\n      <li parentName=\"ul\">{`graphql`}</li>\n      <li parentName=\"ul\">{`webapi_rest`}</li>\n      <li parentName=\"ul\">{`webapi_soap`}</li>\n      <li parentName=\"ul\">{`crontab`}</li>\n    </ul>\n    <p>{`During `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/config-guide/bootstrap/magento-bootstrap.html\"\n      }}>{`bootstrapping`}</a>{`, each application entry point loads the appropriate `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` files for the requested `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/architecture/archi_perspectives/components/modules/mod_and_areas.html\"\n      }}>{`area`}</a>{`.`}</p>\n    <p><strong parentName=\"p\">{`Examples:`}</strong></p>\n    <p>{`In `}<inlineCode parentName=\"p\">{`index.php`}</inlineCode>{`, the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/App/Http.php\"\n      }}><inlineCode parentName=\"a\">{`\\\\Magento\\\\Framework\\\\App\\\\Http`}</inlineCode></a>{` class loads the area based on the front-name provided in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/url\"\n      }}>{`URL`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$areaCode = $this->_areaList->getCodeByFrontName($this->_request->getFrontName());\n$this->_state->setAreaCode($areaCode);\n$this->_objectManager->configure($this->_configLoader->load($areaCode));\n`}</code></pre>\n    <p>{`In `}<inlineCode parentName=\"p\">{`static.php`}</inlineCode>{`, the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/App/StaticResource.php\"\n      }}><inlineCode parentName=\"a\">{`\\\\Magento\\\\Framework\\\\App\\\\StaticResource`}</inlineCode></a>{` class also loads the area based on the URL in the request.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$path = $this->request->get('resource');\n$params = $this->parsePath($path);\n$this->state->setAreaCode($params['area']);\n$this->objectManager->configure($this->configLoader->load($params['area']));\n`}</code></pre>\n    <p>{`In `}<inlineCode parentName=\"p\">{`cron.php`}</inlineCode>{`, the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/App/Cron.php\"\n      }}><inlineCode parentName=\"a\">{`\\\\Magento\\\\Framework\\\\App\\\\Cron`}</inlineCode></a>{` class always loads the `}<inlineCode parentName=\"p\">{`crontab`}</inlineCode>{` area.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$this->_state->setAreaCode(Area::AREA_CRONTAB);\n$configLoader = $this->objectManager->get(\\\\Magento\\\\Framework\\\\ObjectManager\\\\ConfigLoaderInterface::class);\n$this->objectManager->configure($configLoader->load(Area::AREA_CRONTAB));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"type-configuration\"\n    }}>{`Type configuration`}</h2>\n    <p>{`Type configurations describe an object's lifestyle and how to instantiate it.`}</p>\n    <p>{`You can configure the type in your `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` configuration node in the following ways:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n    <virtualType name=\"moduleConfig\" type=\"Magento\\\\Core\\\\Model\\\\Config\">\n        <arguments>\n            <argument name=\"type\" xsi:type=\"string\">system</argument>\n        </arguments>\n    </virtualType>\n    <type name=\"Magento\\\\Core\\\\Model\\\\App\">\n        <arguments>\n            <argument name=\"config\" xsi:type=\"object\">moduleConfig</argument>\n        </arguments>\n    </type>\n</config>\n`}</code></pre>\n    <p>{`The preceding example declares the following types:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`moduleConfig`}</inlineCode>{`: A virtual type that extends the type `}<inlineCode parentName=\"li\">{`Magento\\\\Core\\\\Model\\\\Config`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Magento\\\\Core\\\\Model\\\\App`}</inlineCode>{`: All instances of this type receive an instance of `}<inlineCode parentName=\"li\">{`moduleConfig`}</inlineCode>{` as a dependency.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"virtual-types\"\n    }}>{`Virtual types`}</h3>\n    <p>{`A `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/virtual-type\"\n      }}>{`virtual type`}</a>{` allows you to change the arguments of a specific injectable dependency and change the behavior of a particular class.\nThis allows you to use a customized class without affecting other classes that have a dependency on the original.`}</p>\n    <p>{`The example creates a virtual type for `}<inlineCode parentName=\"p\">{`Magento\\\\Core\\\\Model\\\\Config`}</inlineCode>{` and specifies `}<inlineCode parentName=\"p\">{`system`}</inlineCode>{` as the constructor argument for `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"constructor-arguments\"\n    }}>{`Constructor arguments`}</h2>\n    <p>{`You can configure the class constructor arguments in your `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` in the argument node.\nThe object manager injects these arguments into the class during creation.\nThe name of the argument configured in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/xml\"\n      }}>{`XML`}</a>{` file must correspond to the name of the parameter in the constructor in the configured class.`}</p>\n    <p>{`The following example creates instances of `}<inlineCode parentName=\"p\">{`Magento\\\\Core\\\\Model\\\\Session`}</inlineCode>{` with the class constructor argument `}<inlineCode parentName=\"p\">{`$sessionName`}</inlineCode>{` set to a value of `}<inlineCode parentName=\"p\">{`adminhtml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n    <type name=\"Magento\\\\Core\\\\Model\\\\Session\">\n        <arguments>\n            <argument name=\"sessionName\" xsi:type=\"string\">adminhtml</argument>\n        </arguments>\n    </type>\n</config>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"argument-types\"\n    }}>{`Argument types`}</h3>\n    <p><inlineCode parentName=\"p\">{`object`}</inlineCode></p>\n    <p>{`Node Formats:`}</p>\n    <p>{`: `}<inlineCode parentName=\"p\">{`<argument xsi:type=\"object\">{typeName}</argument>`}</inlineCode>{`\n: `}<inlineCode parentName=\"p\">{`<argument xsi:type=\"object\" shared=\"{shared}\">{typeName}</argument>`}</inlineCode></p>\n    <p>{`Creates an instance of `}<inlineCode parentName=\"p\">{`typeName`}</inlineCode>{` type and passes it in as an argument.\nYou can pass any class name, interface name, or virtual type as `}<inlineCode parentName=\"p\">{`typeName`}</inlineCode>{`.`}</p>\n    <p>{`Setting the `}<inlineCode parentName=\"p\">{`shared`}</inlineCode>{` property defines the lifestyle of a created instance.\nSee `}<a parentName=\"p\" {...{\n        \"href\": \"#object-lifestyle-configuration\"\n      }}>{`object lifestyle configuration`}</a>{`.`}</p>\n    <hr></hr>\n    <p><inlineCode parentName=\"p\">{`string`}</inlineCode></p>\n    <p>{`Node Formats:`}</p>\n    <p>{`: `}<inlineCode parentName=\"p\">{`<argument xsi:type=\"string\">{strValue}</argument>`}</inlineCode>{`\n: `}<inlineCode parentName=\"p\">{`<argument xsi:type=\"string\" translate=\"true\">{strValue}</argument>`}</inlineCode></p>\n    <p>{`The application interprets any value for this argument node as a string.`}</p>\n    <hr></hr>\n    <p><inlineCode parentName=\"p\">{`boolean`}</inlineCode></p>\n    <p>{`Node Format:`}</p>\n    <p>{`: `}<inlineCode parentName=\"p\">{`<argument xsi:type=\"boolean\">{boolValue}</argument>`}</inlineCode></p>\n    <p>{`The application converts any value for this argument node into a boolean value.\nSee table below:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Input Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Data`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean Value`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"true\"*`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"false\"*`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"1\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`String`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`\"0\"`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Integer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`true`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Integer`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`0`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <small>*These String literals are case-sensitive</small>\n    <hr></hr>\n    <p><inlineCode parentName=\"p\">{`number`}</inlineCode></p>\n    <p>{`Node Format:`}</p>\n    <p>{`: `}<inlineCode parentName=\"p\">{`<argument xsi:type=\"number\">{numericValue}</argument>`}</inlineCode></p>\n    <p>{`Acceptable values for this type include: integers, floats, or `}<a parentName=\"p\" {...{\n        \"href\": \"http://us3.php.net/is_numeric\"\n      }}>{`numeric strings`}</a>{`.`}</p>\n    <hr></hr>\n    <p><inlineCode parentName=\"p\">{`init_parameter`}</inlineCode></p>\n    <p>{`Node Format:`}</p>\n    <p>{`: `}<inlineCode parentName=\"p\">{`<argument xsi:type=\"init_parameter\">{Constant::NAME}</argument>`}</inlineCode></p>\n    <p>{`This is the global application initialization argument represented by `}<inlineCode parentName=\"p\">{`Constant::NAME`}</inlineCode>{`.`}</p>\n    <hr></hr>\n    <p><inlineCode parentName=\"p\">{`const`}</inlineCode></p>\n    <p>{`Node Format:`}</p>\n    <p>{`: `}<inlineCode parentName=\"p\">{`<argument xsi:type=\"const\">{Constant::NAME}</argument>`}</inlineCode></p>\n    <p>{`This is the constant value represented by `}<inlineCode parentName=\"p\">{`Constant::NAME`}</inlineCode>{`.`}</p>\n    <hr></hr>\n    <p><inlineCode parentName=\"p\">{`null`}</inlineCode></p>\n    <p>{`Node Format:`}</p>\n    <p>{`: `}<inlineCode parentName=\"p\">{`<argument xsi:type=\"null\"/>`}</inlineCode></p>\n    <p>{`This indicates a null value.`}</p>\n    <hr></hr>\n    <p><inlineCode parentName=\"p\">{`array`}</inlineCode></p>\n    <p>{`Node Format:`}</p>\n    <p>{`: The node format is as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<argument xsi:type=\"array\">\n  <item name=\"someKey\" xsi:type=\"<type>\">someVal</item>\n</argument>\n`}</code></pre>\n    <p>{`  The application builds an array with elements corresponding to the items and passes it as the argument.\nThe array can contain an infinite number of items, and each array item can be of any object type including an array itself.`}</p>\n    <p>{`  When the application merges the configuration files for a given scope, array arguments with the same name get merged into a new array.`}</p>\n    <p>{`  When the application loads a new configuration at a later time, either by a more specific scope or through code, then any array definitions in the new configuration will replace the loaded config instead of merging.`}</p>\n    <hr></hr>\n    <p><strong parentName=\"p\">{`Argument Examples:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n    <type name=\"Magento\\\\Example\\\\Type\">\n        <arguments>\n            <!-- Pass simple string -->\n            <argument name=\"stringParam\" xsi:type=\"string\">someStringValue</argument>\n            <!-- Pass instance of Magento\\\\Some\\\\Type -->\n            <argument name=\"instanceParam\" xsi:type=\"object\">Magento\\\\Some\\\\Type</argument>\n            <!-- Pass true -->\n            <argument name=\"boolParam\" xsi:type=\"boolean\">1</argument>\n            <!-- Pass 1 -->\n            <argument name=\"intParam\" xsi:type=\"number\">1</argument>\n            <!-- Pass application init argument, named by constant value -->\n            <argument name=\"globalInitParam\" xsi:type=\"init_parameter\">Magento\\\\Some\\\\Class::SOME_CONSTANT</argument>\n            <!-- Pass constant value -->\n            <argument name=\"constantParam\" xsi:type=\"const\">Magento\\\\Some\\\\Class::SOME_CONSTANT</argument>\n            <!-- Pass null value -->\n            <argument name=\"optionalParam\" xsi:type=\"null\"/>\n            <!-- Pass array -->\n            <argument name=\"arrayParam\" xsi:type=\"array\">\n                <!-- First element is value of constant -->\n                <item name=\"firstElem\" xsi:type=\"const\">Magento\\\\Some\\\\Class::SOME_CONSTANT</item>\n                <!-- Second element is null -->\n                <item name=\"secondElem\" xsi:type=\"null\"/>\n                <!-- Third element is a subarray -->\n                <item name=\"thirdElem\" xsi:type=\"array\">\n                    <!-- Subarray contains scalar value -->\n                    <item name=\"scalarValue\" xsi:type=\"string\">ScalarValue</item>\n                    <!-- and application init argument -->\n                    <item name=\"globalArgument \" xsi:type=\"init_parameter\">Magento\\\\Some\\\\Class::SOME_CONSTANT</item>\n                </item>\n            </argument>\n        </arguments>\n    </type>\n</config>\n`}</code></pre>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`Arguments on different stages`}</strong></p>\n    <br />\nConfiguration arguments are merged when they are declared on the same stage (Initial, Global, or Area-Specifc). If you declare new arguments on a higher stage, like Area-Specific, the arguments declared on the higher stage will replace the existing ones.\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p><strong parentName=\"p\">{`Merging and Arguments`}</strong></p>\n    <br />\nDuring merging, arguments replace other arguments with the same name if their type is different.\nIf the argument type is the same, then the newer argument replaces the old one.\n    <h3 {...{\n      \"id\": \"abstraction-implementation-mappings\"\n    }}>{`Abstraction-implementation mappings`}</h3>\n    <p>{`The object manager uses abstraction-implementation mappings when the constructor signature of a class requests an object by its interface.\nThe object manager uses these mappings to determine what the default implementation is for that class for a particular scope.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`preference`}</inlineCode>{` node specifies the default implementation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<!--  File: app/etc/di.xml -->\n<config>\n    <preference for=\"Magento\\\\Framework\\\\UrlInterface\" type=\"Magento\\\\Framework\\\\Url\" />\n</config>\n`}</code></pre>\n    <p>{`This mapping is in `}<inlineCode parentName=\"p\">{`app/etc/di.xml`}</inlineCode>{`, so the object manager injects the `}<inlineCode parentName=\"p\">{`Magento\\\\Framework\\\\Url`}</inlineCode>{` implementation class wherever there is a request for the `}<inlineCode parentName=\"p\">{`Magento\\\\Framework\\\\UrlInterface`}</inlineCode>{` in the global scope.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<!-- File: app/code/Magento/Backend/etc/adminhtml/di.xml -->\n<config>\n    <preference for=\"Magento\\\\Framework\\\\UrlInterface\" type=\"Magento\\\\Backend\\\\Model\\\\UrlInterface\" />\n</config>\n`}</code></pre>\n    <p>{`This mapping is in `}<inlineCode parentName=\"p\">{`app/code/Magento/Backend/etc/adminhtml/di.xml`}</inlineCode>{`, so the object manager injects the `}<inlineCode parentName=\"p\">{`Magento\\\\Backend\\\\Model\\\\UrlInterface`}</inlineCode>{` implementation class wherever there is a request for the `}<inlineCode parentName=\"p\">{`Magento\\\\Framework\\\\UrlInterface`}</inlineCode>{` in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/admin\"\n      }}>{`admin`}</a>{` area.`}</p>\n    <h3 {...{\n      \"id\": \"override-a-method-using-preference-nodes\"\n    }}>{`Override a method using 'preference' nodes`}</h3>\n    <p>{`If you want to override a public or protected method from a core class, utilize the `}<inlineCode parentName=\"p\">{`preference`}</inlineCode>{` node from `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` to achieve it.\nHere is an example of overriding a method from a core file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<!-- app/code/ExampleCorp/OverrideExample/etc/di.xml -->\n<config  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n    <preference for=\"Magento\\\\Checkout\\\\Block\\\\Onepage\\\\Success\" type=\"ExampleCorp\\\\OverrideExample\\\\Block\\\\Onepage\\\\Success\" />\n</config>\n`}</code></pre>\n    <p>{`The example below overrides the `}<inlineCode parentName=\"p\">{`isVisible`}</inlineCode>{` method from the `}<inlineCode parentName=\"p\">{`Magento\\\\Checkout\\\\Block\\\\Onepage\\\\Success`}</inlineCode>{` block class.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n/**\n * Copyright © Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nnamespace ExampleCorp\\\\OverrideExample\\\\Block\\\\Onepage;\n\nuse Magento\\\\Checkout\\\\Block\\\\Onepage\\\\Success as MagentoSuccess;\nuse Magento\\\\Framework\\\\View\\\\Element\\\\Template\\\\Context;\nuse Magento\\\\Checkout\\\\Model\\\\Session;\nuse Magento\\\\Sales\\\\Model\\\\Order\\\\Config;\nuse Magento\\\\Framework\\\\App\\\\Http\\\\Context as HttpContext;\n\nclass Success extends MagentoSuccess\n{\n    /**\n     * Constructor Modification\n     *\n     * @param Context $context\n     * @param Session $checkoutSession\n     * @param Config $orderConfig\n     * @param HttpContext $httpContext\n     * @param array $data\n     */\n    public function __construct(\n        Context $context,\n        Session $checkoutSession,\n        Config $orderConfig,\n        HttpContext $httpContext,\n        array $data = []\n    ) {\n        parent::__construct(\n            $context,\n            $checkoutSession,\n            $orderConfig,\n            $httpContext,\n            $data\n        );\n    }\n\n    /**\n     * Is order visible\n     *\n     * @param Order $order\n     * @return bool\n     */\n    protected function isVisible(Order $order)\n    {\n        # Write your custom logic here.\n        return !in_array(\n            $order->getStatus(),\n            $this->_orderConfig->getInvisibleOnFrontStatuses()\n        );\n    }\n}\n`}</code></pre>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Overriding entire methods is not recommended approach and is noted here as a method of last resort. This approach may cause conflicts in the system and reduces system upgradability. Other extensibility options such as `}<inlineCode parentName=\"p\">{`event observers`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`plugins`}</inlineCode>{` are preferable, when possible.`}</p>\n    <h3 {...{\n      \"id\": \"parameter-configuration-inheritance\"\n    }}>{`Parameter configuration inheritance`}</h3>\n    <p>{`Parameters configured for a class type pass on its configuration to its descendant classes.\nAny descendant can override the parameters configured for its supertype; that is, the parent class or interface:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n    <type name=\"Magento\\\\Framework\\\\View\\\\Element\\\\Context\">\n        <arguments>\n            <argument name=\"urlBuilder\" xsi:type=\"object\">Magento\\\\Framework\\\\Url</argument>\n        </arguments>\n    </type>\n    <type name=\"Magento\\\\Backend\\\\Block\\\\Context\">\n        <arguments>\n            <argument name=\"urlBuilder\" xsi:type=\"object\">Magento\\\\Backend\\\\Model\\\\Url</argument>\n        </arguments>\n    </type>\n</config>\n`}</code></pre>\n    <p>{`In the preceding example, `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Backend/Block/Context.php\"\n      }}><inlineCode parentName=\"a\">{`Magento\\\\Backend\\\\Block\\\\Context`}</inlineCode></a>{` is a descendant of `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/View/Element/Context.php\"\n      }}><inlineCode parentName=\"a\">{`Magento\\\\Framework\\\\View\\\\Element\\\\Context`}</inlineCode></a>{`.`}</p>\n    <p>{`The first entry configures all instances of `}<inlineCode parentName=\"p\">{`Magento\\\\Framework\\\\View\\\\Element\\\\Context`}</inlineCode>{` as well as its children to pass in `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/Url.php\"\n      }}><inlineCode parentName=\"a\">{`Magento\\\\Framework\\\\Url`}</inlineCode></a>{` as `}<inlineCode parentName=\"p\">{`$urlBuilder`}</inlineCode>{` in their constructors.`}</p>\n    <p>{`The second entry overrides this and configures all instances of `}<inlineCode parentName=\"p\">{`Magento\\\\Backend\\\\Block\\\\Context`}</inlineCode>{` to use `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Backend/Model/Url.php\"\n      }}><inlineCode parentName=\"a\">{`Magento\\\\Backend\\\\Model\\\\Url`}</inlineCode></a>{` as the `}<inlineCode parentName=\"p\">{`$urlBuilder`}</inlineCode>{` instead.`}</p>\n    <h2 {...{\n      \"id\": \"object-lifestyle-configuration\"\n    }}>{`Object lifestyle configuration`}</h2>\n    <p>{`The lifestyle of an object determines the number of instances that can exist of that object.`}</p>\n    <p>{`You can configure dependencies in Adobe Commerce and Magento Open Source to have the following lifestyles:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Singleton`}</strong>{`(default) - One instance of this class exists. The object manager creates it at the first request. Requesting the class again returns the same instance. Disposing or ending the container registered to it releases the instance.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Transient`}</strong>{` - The object manager creates a new instance of the class for every request.`}</li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`shared`}</inlineCode>{` property determines the lifestyle of both `}<inlineCode parentName=\"p\">{`argument`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` configurations.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n    <type name=\"Magento\\\\Filesystem\" shared=\"false\">\n        <arguments>\n            <argument name=\"adapter\" xsi:type=\"object\" shared=\"false\">Magento\\\\Filesystem\\\\Adapter\\\\Local</argument>\n        </arguments>\n    </type>\n</config>\n`}</code></pre>\n    <p>{`In this example `}<inlineCode parentName=\"p\">{`Magento\\\\Filesystem`}</inlineCode>{` is not shared, so all clients will retrieve separate instances of `}<inlineCode parentName=\"p\">{`Magento\\\\Filesystem`}</inlineCode>{`.\nAlso, every instance of `}<inlineCode parentName=\"p\">{`Magento\\\\Filesystem`}</inlineCode>{` will get separate instance of `}<inlineCode parentName=\"p\">{`$adapter`}</inlineCode>{`, because it is non-shared too.`}</p>\n    <h2 {...{\n      \"id\": \"sensitive-and-system-specific-configuration-settings\"\n    }}>{`Sensitive and system-specific configuration settings`}</h2>\n    <p>{`For multi-system deployments, such as the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/config-guide/deployment/pipeline/\"\n      }}>{`pipeline deployment model`}</a>{`, you can specify the following types of configuration settings:`}</p>\n    <p>{`| shared          | Settings that are shared between systems using `}<inlineCode parentName=\"p\">{`app/etc/config.php`}</inlineCode>{` |\n| sensitive       | Settings that are restricted or confidential                        |\n| system-specific | Settings that are unique to a particular system or environment      |`}</p>\n    <p>{`The following code sample is a template for specifying values as sensitive or system-specific:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<type name=\"Magento\\\\Config\\\\Model\\\\Config\\\\TypePool\">\n   <arguments>\n      <argument name=\"VALUE_TYPE\" xsi:type=\"array\">\n         <item name=\"CONFIG_PATH\" xsi:type=\"string\">ARGUMENT_VALUE</item>\n      </argument>\n   </arguments>\n</type>\n`}</code></pre>\n    <p>{`| `}<inlineCode parentName=\"p\">{`VALUE_TYPE`}</inlineCode>{`     | Specifies the type of value: either `}<inlineCode parentName=\"p\">{`sensitive`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`environment`}</inlineCode>{`.                                                                                              |\n| `}<inlineCode parentName=\"p\">{`CONFIG_PATH`}</inlineCode>{`    | A unique, `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{`-delimited string that identifies this configuration setting.                                                                                     |\n| `}<inlineCode parentName=\"p\">{`ARGUMENT_VALUE`}</inlineCode>{` | A value of `}<inlineCode parentName=\"p\">{`1`}</inlineCode>{` indicates the `}<inlineCode parentName=\"p\">{`CONFIG_PATH`}</inlineCode>{` value is sensitive or system-specific. The default `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` value indicates it is neither sensitive nor system specific. |`}</p>\n    <p>{`Do not share sensitive or system-specific settings stored in `}<inlineCode parentName=\"p\">{`app/etc/env.php`}</inlineCode>{` between development and production systems.`}</p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"../configuration/sensitive-environment-settings.md\"\n      }}>{`sensitive and environment settings`}</a>{` for more information and examples.`}</p>\n    <h3 {...{\n      \"id\": \"information-related-to-pipeline-deployment\"\n    }}>{`Information related to pipeline deployment`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../configuration/sensitive-environment-settings.md\"\n        }}>{`Guidelines for specifying system-specific and sensitive configuration values`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://devdocs.magento.com/guides/v2.4/config-guide/prod/config-reference-sens.html\"\n        }}>{`Sensitive and system-specific configuration paths reference`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://devdocs.magento.com/guides/v2.4/config-guide/prod/config-reference-b2b.html\"\n        }}>{`Adobe Commerce B2B Extension configuration paths reference`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"get-dependency-injection-configuration-information-for-a-class\"\n    }}>{`Get dependency injection configuration information for a class`}</h2>\n    <p>{`Use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/reference/cli/magento.html#devdiinfo\"\n      }}>{`dev:di:info`}</a>{` command to retrieve information about dependency injection configuration for a class. The following example retrieves the dependency injection configuration information for the `}<inlineCode parentName=\"p\">{`Magento\\\\Quote\\\\Model\\\\Quote\\\\Item\\\\ToOrderItem`}</inlineCode>{` class:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento dev:di:info \"Magento\\\\Quote\\\\Model\\\\Quote\\\\Item\\\\ToOrderItem\"\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-terminal\"\n      }}>{`DI configuration for the class Magento\\\\Quote\\\\Model\\\\Quote\\\\Item\\\\ToOrderItem in the GLOBAL area\n\nPreference: Magento\\\\Quote\\\\Model\\\\Quote\\\\Item\\\\ToOrderItem\n\nConstructor Parameters:\n+-------------------+--------------------------------------------------+------------------+\n| Name              | Requested Type                                   | Configured Value |\n+-------------------+--------------------------------------------------+------------------+\n| orderItemFactory  | Magento\\\\Sales\\\\Api\\\\Data\\\\OrderItemInterfaceFactory |                  |\n| objectCopyService | Magento\\\\Framework\\\\DataObject\\\\Copy                |                  |\n| dataObjectHelper  | Magento\\\\Framework\\\\Api\\\\DataObjectHelper           |                  |\n+-------------------+--------------------------------------------------+------------------+\n\n\nPlugins:\n+-----------------------------------------------------+---------+--------+\n| Plugin                                              | Method  | Type   |\n+-----------------------------------------------------+---------+--------+\n| Magento\\\\Catalog\\\\Model\\\\Plugin\\\\QuoteItemProductOption | convert | before |\n| Magento\\\\GiftMessage\\\\Model\\\\Plugin\\\\QuoteItem          | convert | after  |\n| Magento\\\\Bundle\\\\Model\\\\Plugin\\\\QuoteItem               | convert | after  |\n+-----------------------------------------------------+---------+--------+\n\n\nPlugins for the Preference:\n+-----------------------------------------------------+---------+--------+\n| Plugin                                              | Method  | Type   |\n+-----------------------------------------------------+---------+--------+\n| Magento\\\\Catalog\\\\Model\\\\Plugin\\\\QuoteItemProductOption | convert | before |\n| Magento\\\\GiftMessage\\\\Model\\\\Plugin\\\\QuoteItem          | convert | after  |\n| Magento\\\\Bundle\\\\Model\\\\Plugin\\\\QuoteItem               | convert | after  |\n+-----------------------------------------------------+---------+--------+\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Related topics:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../components/object-manager/index.md\"\n        }}>{`ObjectManager`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../components/dependency-injection.md\"\n        }}>{`Dependency injection`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../configuration/sensitive-environment-settings.md\"\n        }}>{`Sensitive and environment settings`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}