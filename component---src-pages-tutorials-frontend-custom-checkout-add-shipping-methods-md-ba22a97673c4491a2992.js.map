{"version":3,"file":"component---src-pages-tutorials-frontend-custom-checkout-add-shipping-methods-md-ba22a97673c4491a2992.js","mappings":"mRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,0CACH,2CACL,kBAAK,mGACL,kBAAK,wLACL,oBACE,eAAIC,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wDACL,sDAA0D,MACjE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,yDACL,sDAA0D,MACjE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,gDACL,4CAAgD,OAEzD,eACE,GAAM,uDACH,yDACL,kBAAK,wDAAsD,uBAAYA,WAAW,KAAM,iFAA8F,4CACtL,kBAAK,0BAAwB,uBAAYA,WAAW,KAAM,uGAAoH,iDAC9K,oBACE,eAAIA,WAAW,MAAO,MAAI,uBAAYA,WAAW,MAAO,QAAqB,8DAC7E,eAAIA,WAAW,MAAO,wFACtB,eAAIA,WAAW,MAAO,iCAA+B,uBAAYA,WAAW,MAAO,WAAwB,0DAE7G,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,yrEA+CP,eACE,GAAM,wDACH,0DACL,kBAAK,wDAAsD,uBAAYA,WAAW,KAAM,iFAA8F,sEAAoE,uBAAYA,WAAW,KAAM,mGAAgH,iDACvY,oBACE,eAAIA,WAAW,MAAO,mCAAiC,uBAAYA,WAAW,MAAO,aACrF,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,SAAsB,yDAE1E,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,yxBAaP,eACE,GAAM,+CACH,iDACL,kBAAK,wDAAsD,uBAAYA,WAAW,KAAM,mEAAgF,4CACxK,kBAAK,qBAAmB,uBAAYA,WAAW,KAAM,8BAA2C,SAAO,uBAAYA,WAAW,KAAM,8BAA2C,mBAAiB,uBAAYA,WAAW,KAAM,uEAAoF,MACjT,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,wzDAiCV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/tutorials/frontend/custom-checkout/add-shipping-methods.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"customize-the-list-of-shipping-methods\"\n    }}>{`Customize the list of shipping methods`}</h1>\n    <p>{`This topic describes how to customize list of shipping methods displayed on the checkout page.`}</p>\n    <p>{`Let's consider a case where you need to add a collapsible text field with description for each shipping method in this list. To achieve this, you need to take the following steps:`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-1-create-new-template-for-shipping-method-item\"\n        }}>{`Create a new template for the shipping method item`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-2-create-new-template-for-shipping-methods-list\"\n        }}>{`Create a new template for the shipping method list`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-3-override-shipping-step-configuration\"\n        }}>{`Override the shipping step configuration`}</a>{`.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"step-1-create-new-template-for-shipping-method-item\"\n    }}>{`Step 1: Create new template for shipping method item`}</h2>\n    <p>{`In your custom module directory, create a new file: `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/web/template/custom-method-item-template.html`}</inlineCode>{`. In this file, add the following code.`}</p>\n    <p>{`It is copied from the `}<inlineCode parentName=\"p\">{`<Magento_Checkout_module_dir>/view/frontend/web/template/shipping-address/shipping-method-item.html`}</inlineCode>{` template, with the following modifications:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A `}<inlineCode parentName=\"li\">{`<tr>`}</inlineCode>{` element added to contain the shipping method description`}</li>\n      <li parentName=\"ul\">{`A column with trigger elements that provide the collapse/expand functionality added`}</li>\n      <li parentName=\"ul\">{`The entire sample wrapped in `}<inlineCode parentName=\"li\">{`<tbody>`}</inlineCode>{` to provide the general collapsible context for rows`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- Initialize collapsible binding -->\n<tbody collapsible=\"as: '$collapsible_' + method.method_code\">\n    <tr class=\"row\">\n        <td class=\"col col-method\">\n            <input type=\"radio\"\n                   class=\"radio\"\n                   click=\"element.selectShippingMethod\"\n                   ifnot=\"method.error_message\"\n                   ko-checked=\"element.isSelected\"\n                   ko-value=\"method.carrier_code + '_' + method.method_code\"\n                   attr=\"'aria-labelledby': 'label_method_' + method.method_code + '_' + method.carrier_code + ' ' + 'label_carrier_' + method.method_code + '_' + method.carrier_code,\n                        'checked': element.rates().length == 1 || element.isSelected\" />\n        </td>\n        <td class=\"col col-price\">\n            <each args=\"element.getRegion('price')\" render=\"\" />\n        </td>\n        <td class=\"col col-method\"\n            attr=\"'id': 'label_method_' + method.method_code + '_' + method.carrier_code\"\n            text=\"method.method_title\" />\n        <td class=\"col col-carrier\"\n            attr=\"'id': 'label_carrier_' + method.method_code + '_' + method.carrier_code\"\n            text=\"method.carrier_title\" />\n        <!-- Column with collapsible trigger  -->\n        <td class=\"col\">\n            <a toggleCollapsible=\"'$collapsible_' + method.method_code\">\n                <span data-bind=\"i18n: 'Info'\"></span>\n            </a>\n        </td>\n    </tr>\n    <!-- Row for shipping method description -->\n    <tr class=\"row\" visible=\"$context['$collapsible_' + method.method_code].opened\">\n        <td class=\"col\" colspan=\"5\" i18n=\"'Some description.'\"/>\n    </tr>\n    <tr class=\"row row-error\"\n        if=\"method.error_message\">\n        <td class=\"col col-error\" colspan=\"5\">\n            <div role=\"alert\" class=\"message error\">\n                <div text=\"method.error_message\"></div>\n            </div>\n            <span class=\"no-display\">\n                <input type=\"radio\"\n                       attr=\"'value' : method.method_code, 'id': 's_method_' + method.method_code\" />\n            </span>\n        </td>\n    </tr>\n</tbody>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-2-create-new-template-for-shipping-methods-list\"\n    }}>{`Step 2: Create new template for shipping methods list`}</h2>\n    <p>{`In your custom module directory, create a new file: `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/web/template/custom-method-list-template.html`}</inlineCode>{`. In this file, add the following code. It uses the code from the `}<inlineCode parentName=\"p\">{`app/code/Magento/Checkout/view/frontend/web/template/shipping-address/shipping-method-list.html`}</inlineCode>{` template, with the following modifications:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A column for triggers added in `}<inlineCode parentName=\"li\">{`<thead>`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tbody`}</inlineCode>{` moved to the item template for collapsible context`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div id=\"checkout-shipping-method-load\">\n    <table class=\"table-checkout-shipping-method\" markdown=\"1\"> <thead>\n        <tr class=\"row\" markdown=\"1\">\n            <th class=\"col col-method\" translate=\"'Select Method'\" />\n            <th class=\"col col-price\" translate=\"'Price'\" />\n            <th class=\"col col-method\" translate=\"'Method Title'\" />\n            <th class=\"col col-carrier\" translate=\"'Carrier Title'\" />\n            <!-- Column for triggers -->\n            <th class=\"col\" />\n        </tr>\n        </thead> <!-- tbody was moved inside item template --> <!-- ko foreach: { data: rates(), as: 'method'} --> <!--ko template: { name: element.shippingMethodItemTemplate} --><!-- /ko --> <!-- /ko --> </table>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-3-override-shipping-step-configuration\"\n    }}>{`Step 3: Override shipping step configuration`}</h2>\n    <p>{`In your custom module directory, create a new file: `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/layout/checkout_index_index.xml`}</inlineCode>{`. In this file, add the following code.`}</p>\n    <p>{`It overrides the `}<inlineCode parentName=\"p\">{`shippingMethodListTemplate`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`shippingMethodItemTemplate`}</inlineCode>{` properties of `}<inlineCode parentName=\"p\">{`<Magento_Checkout_module_dir>/view/frontend/web/js/view/shipping.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n    <body>\n        <referenceBlock name=\"checkout.root\">\n            <arguments>\n                <argument name=\"jsLayout\" xsi:type=\"array\">\n                    <item name=\"components\" xsi:type=\"array\">\n                        <item name=\"checkout\" xsi:type=\"array\">\n                            <item name=\"children\" xsi:type=\"array\">\n                                <item name=\"steps\" xsi:type=\"array\">\n                                    <item name=\"children\" xsi:type=\"array\">\n                                        <item name=\"shipping-step\" xsi:type=\"array\">\n                                            <item name=\"children\" xsi:type=\"array\">\n                                                <item name=\"shippingAddress\" xsi:type=\"array\">\n                                                    <item name=\"config\" xsi:type=\"array\">\n                                                        <item name=\"shippingMethodItemTemplate\" xsi:type=\"string\">Vendor_Checkout/custom-method-item-template</item>\n                                                        <item name=\"shippingMethodListTemplate\" xsi:type=\"string\">Vendor_Checkout/custom-method-list-template</item>\n                                                    </item>\n                                                </item>\n                                            </item>\n                                        </item>\n                                    </item>\n                                </item>\n                            </item>\n                        </item>\n                    </item>\n                </argument>\n            </arguments>\n        </referenceBlock>\n    </body>\n</page>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}