"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[7471],{60018:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return l},default:function(){return p}});var t=n(87462),m=n(63366),r=(n(15007),n(64983)),d=n(91515),o=["components"],l={},i={_frontmatter:l},h=d.Z;function p(e){var a=e.components,n=(0,m.Z)(e,o);return(0,r.mdx)(h,(0,t.Z)({},i,n,{components:a,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"math-random"},"Math random"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/Math/Random.php"},(0,r.mdx)("inlineCode",{parentName:"a"},"Magento\\Framework\\Math\\Random"))," library provides the ability to generate random values and hashes."),(0,r.mdx)("h2",{id:"usage"},"Usage"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Method"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"getRandomString")),(0,r.mdx)("td",{parentName:"tr",align:null},"Generates a random string with a given string length and an optional character pool. Without the optional character pool, it uses both cases of the English alphabet and all digits.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"getRandomNumber")),(0,r.mdx)("td",{parentName:"tr",align:null},"Generates a random number with an optional range. The range defaults to 0 as minimum and the result of the PHP function ",(0,r.mdx)("inlineCode",{parentName:"td"},"mt_getrandmax")," as the maximum.")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"getUniqueHash")),(0,r.mdx)("td",{parentName:"tr",align:null},"Generates a unique hash string with an optional prefix.")))),(0,r.mdx)("h2",{id:"examples"},"Examples"),(0,r.mdx)("p",null,"In the examples below, the ",(0,r.mdx)("inlineCode",{parentName:"p"},"$this->mathRandom")," property is an instantiated object of the ",(0,r.mdx)("inlineCode",{parentName:"p"},"Magento\\Framework\\Math\\Random")," class."),(0,r.mdx)("h3",{id:"generate-a-random-string"},"Generate a random string"),(0,r.mdx)("p",null,"This example shows how to generate a random string of length 99, with the default character pool."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-php"},"$this->mathRandom->getRandomString(99);\n")),(0,r.mdx)("h3",{id:"generate-a-random-number"},"Generate a random number"),(0,r.mdx)("p",null,"This example shows how to generate a random number between 0 and 9999."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-php"},"$this->mathRandom->getRandomNumber(0, 9999);\n")),(0,r.mdx)("h3",{id:"generate-a-random-number-1"},"Generate a random number"),(0,r.mdx)("p",null,"This example shows how to generate a unique hash string with a prefix."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-php"},'$this->mathRandom->getUniqueHash("my_hash_prefix");\n')))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-developer-framework-math-random-md-e5a6a7cb492a69714fb8.js.map