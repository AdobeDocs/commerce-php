{"version":3,"file":"component---src-pages-developer-cache-page-private-content-md-6b9522a006da265d935f.js","mappings":"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","sources":["webpack://commerce-php/./src/pages/developer/cache/page/private-content.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Docs from '/src/pages/_includes/page-cache-checklist.md';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"private-content\"\n    }}>{`Private content`}</h1>\n    <p>{`Since private content is specific to individual users, it is reasonable to handle it on the client√•.`}</p>\n    <p>{`Use our `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Customer/view/frontend/web/js/customer-data.js\"\n      }}>{`customer-data`}</a>{` JS library to store private data in local storage, invalidate private data using customizable rules, and synchronize data with the backend.`}</p>\n    <p>{`This example displays a product comparison on a cacheable page.`}</p>\n    <h2 {...{\n      \"id\": \"create-a-section-source\"\n    }}>{`Create a section source`}</h2>\n    <p>{`The section source class is responsible for retrieving data for the section. As a best practice, we recommend that you put your code within the `}<inlineCode parentName=\"p\">{`Vendor/ModuleName/CustomerData`}</inlineCode>{` namespace. Your classes must implement the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Customer/CustomerData/SectionSourceInterface.php\"\n      }}><inlineCode parentName=\"a\">{`Magento\\\\Customer\\\\CustomerData\\\\SectionSourceInterface`}</inlineCode></a>{` interface.`}</p>\n    <p>{`The public method `}<inlineCode parentName=\"p\">{`getSectionData`}</inlineCode>{` must return an array with data for a private block.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Catalog/CustomerData/CompareProducts.php#L61-L70\"\n      }}>{`Example`}</a></p>\n    <p>{`Add the following to your component's `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/dependency-injection\"\n      }}>{`dependency injection`}</a>{` configuration (`}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<type name=\"Magento\\\\Customer\\\\CustomerData\\\\SectionPoolInterface\">\n    <arguments>\n        <argument name=\"sectionSourceMap\" xsi:type=\"array\">\n            <item name=\"custom-name\" xsi:type=\"string\">Vendor\\\\ModuleName\\\\CustomerData\\\\ClassName</item>\n        </argument>\n    </arguments>\n</type>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-a-block-and-template\"\n    }}>{`Create a block and template`}</h2>\n    <p>{`To render private content, create a block and a template to display user-agnostic data; this data is replaced with user-specific data by the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/ui-component\"\n      }}>{`UI component`}</a>{`.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Do not use the `}<inlineCode parentName=\"p\">{`$_isScopePrivate`}</inlineCode>{` property in your blocks. This property is obsolete and will not work properly.`}</p>\n    <p>{`Replace private data in blocks with placeholders (using `}<a parentName=\"p\" {...{\n        \"href\": \"http://knockoutjs.com/documentation/introduction.html\"\n      }}>{`Knockout`}</a>{` syntax). The init scope on the root element is `}<inlineCode parentName=\"p\">{`data-bind=\"scope: 'compareProducts'\"`}</inlineCode>{`, where you define the scope name (`}<inlineCode parentName=\"p\">{`compareProducts`}</inlineCode>{` in this example) in your `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/layout\"\n      }}>{`layout`}</a>{`.`}</p>\n    <p>{`Initialize the component as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<script type=\"text/x-magento-init\">\n    {\"<css-selector>\": {\"Magento_Ui/js/core/app\": <?php echo $block->getJsLayout();?>}}\n</script>\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Catalog/view/frontend/templates/product/compare/sidebar.phtml#L50-L52\"\n      }}>{`Example`}</a></p>\n    <h2 {...{\n      \"id\": \"configure-a-ui-component\"\n    }}>{`Configure a UI component`}</h2>\n    <p>{`The UI component renders block data on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/storefront\"\n      }}>{`storefront`}</a>{`. To initialize the UI component, you must trigger the parent initialization method by calling the `}<inlineCode parentName=\"p\">{`_super()`}</inlineCode>{` method and defining a property to store customer data. The `}<inlineCode parentName=\"p\">{`customerData.get()`}</inlineCode>{` method returns a `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/ui-component\"\n      }}>{`Knockout's observable`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`initialize: function () {\n    this._super();\n    this.compareProducts = customerData.get('compare-products');\n}\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Catalog/view/frontend/web/js/view/compare-products.js#L32-L33\"\n      }}>{`Example`}</a></p>\n    <p>{`All properties are available in the template where the UI component initialized.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Catalog/view/frontend/layout/default.xml#L55-L61\"\n      }}>{`Example of defining a UI component in a layout`}</a></p>\n    <h2 {...{\n      \"id\": \"invalidate-private-content\"\n    }}>{`Invalidate private content`}</h2>\n    <p>{`Specify actions that trigger cache invalidation for private content blocks in a `}<inlineCode parentName=\"p\">{`sections.xml`}</inlineCode>{` configuration file in the `}<inlineCode parentName=\"p\">{`Vendor/ModuleName/etc/frontend`}</inlineCode>{` directory. The application invalidates the cache on a POST or PUT request.`}</p>\n    <p>{`Customer sections was designed to cache private data in browser storage. This means that any customer section will not be updated until proper action was made.`}</p>\n    <p>{`The are some exception cases:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Store and website switching, after any of these action customer section `}<inlineCode parentName=\"li\">{`cart`}</inlineCode>{` will be updated.`}</li>\n      <li parentName=\"ul\">{`Customer cart lifetime option `}<inlineCode parentName=\"li\">{`section_data_lifetime`}</inlineCode>{` which is 60 minutes by default. After scheduled time passes, section `}<inlineCode parentName=\"li\">{`cart`}</inlineCode>{` will be updated.`}</li>\n    </ul>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Product information will not be simultaneously updated in customer cart (product name, price, product enabled/disabled). Information will be updated after what comes first: `}<inlineCode parentName=\"p\">{`section_data_lifetime`}</inlineCode>{` time passed or an action that the update cart triggered.`}</p>\n    <p>{`The following example adds comments to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Catalog/etc/frontend/sections.xml\"\n      }}>{`app/code/Magento/Catalog/etc/frontend/sections.xml`}</a>{` so you can see what the code is doing.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<!--\n/**\n * Copyright ¬© 2016 Magento. All rights reserved.\n * See COPYING.txt for license details.\n */\n-->\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Customer:etc/sections.xsd\">\n    <!-- invalidates the \"compare-products\" section when a user\n    adds a product to the comparison, resulting in a \"catalog/product_compare/add\" POST request -->\n    <action name=\"catalog/product_compare/add\">\n        <section name=\"compare-products\"/>\n    </action>\n    <!-- invalidates the section when a customer removes a product from the comparison -->\n    <action name=\"catalog/product_compare/remove\">\n        <section name=\"compare-products\"/>\n    </action>\n    <!-- invalidates the section when a customer clears all products from the comparison -->\n    <action name=\"catalog/product_compare/clear\">\n        <section name=\"compare-products\"/>\n    </action>\n</config>\n`}</code></pre>\n    <p>{`There are sections that allow you to declare an 'action' node without specifying a sections, for instance, when logging out:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Customer:etc/sections.xsd\">\n  <action name=\"customer/account/logout\"/>\n</config>\n`}</code></pre>\n    <p>{`This tells The application to invalidate all sections. But if you have declared sections for this action in another .xml file, it will override the initial sections and only newly added sections will be invalidated. If you need to reload all sections on some action, use `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{` as section name or use an empty action and ensure that they will not be overriden by any other rules:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Customer:etc/sections.xsd\">\n    <action name=\"customer/account/editPost\">\n        <section name=\"*\"/>\n    </action>\n</config>\n`}</code></pre>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Use only HTTP POST or PUT methods to change state (e.g., adding to a shopping cart, adding to a wishlist, etc.) and do not expect to see caching on these methods. Using GET or HEAD methods might trigger caching and prevent updates to private content. For more information about caching, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html\"\n      }}>{`RFC-2616 section 13`}</a>{`.`}</p>\n    <p>{`Other examples:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Checkout/etc/frontend/sections.xml\"\n        }}>{`Checkout`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Customer/etc/frontend/sections.xml\"\n        }}>{`Customer`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"version-private-content\"\n    }}>{`Version private content`}</h2>\n    <p>{`Private content, which is stored in the browser local storage, uses the `}<inlineCode parentName=\"p\">{`private_content_version`}</inlineCode>{` cookie to store the version.`}</p>\n    <p>{`Versioning works as follows:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The user performs some action, such as adding to a cart, that results in an POST or PUT request to the Adobe Commerce or Magento Open Source application.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The server generates the `}<inlineCode parentName=\"p\">{`private_content_version`}</inlineCode>{` cookie for this user and returns the response to the browser.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://glossary.magento.com/javascript\"\n          }}>{`JavaScript`}</a>{` interprets the presence of the `}<inlineCode parentName=\"p\">{`private_content_version`}</inlineCode>{` cookie to mean that private content is present on the page, so it sends an AJAX request to the application server to get the current private content.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`The server's reply is cached in the browser's local storage.`}</p>\n        <p parentName=\"li\">{`Subsequent requests with the same data version are retrieved from local storage.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Any future HTTP POST or PUT request changes the value of `}<inlineCode parentName=\"p\">{`private_content_version`}</inlineCode>{` and results in the updated content being cached by the browser.`}</p>\n      </li>\n    </ol>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The customer data invalidation mechanism no longer relies on the `}<inlineCode parentName=\"p\">{`private_content_version`}</inlineCode>{`.`}</p>\n\n    <Docs mdxType=\"Docs\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}