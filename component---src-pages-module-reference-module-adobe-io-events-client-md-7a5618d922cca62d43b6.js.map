{"version":3,"file":"component---src-pages-module-reference-module-adobe-io-events-client-md-7a5618d922cca62d43b6.js","mappings":"oRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,kBAAK,mEACL,eACE,GAAM,YACH,aACL,kBAAK,2JAEL,eACE,GAAM,SACH,UACL,kBAAK,gCACL,oBACE,eAAIC,WAAW,MAAO,wFACtB,eAAIA,WAAW,MAAO,wFAExB,eACE,GAAM,0CACH,2CACL,oBACE,eAAIA,WAAW,MAAO,2IACtB,eAAIA,WAAW,MAAO,0KACpB,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAO,iBAAe,uBAAYA,WAAW,MAAO,+BAA4C,SAAO,uBAAYA,WAAW,MAAO,qCAAkD,YACtM,eAAIA,WAAW,MAAO,8BAA4B,uBAAYA,WAAW,MAAO,8BAA2C,aAG/H,eAAIA,WAAW,MAAO,2DAExB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,yHAEP,eACE,MAAS,IAET,eAAIA,WAAW,MAAO,6DAA2D,uBAAYA,WAAW,MAAO,+BAA4C,YAE7J,eACE,GAAM,0BACH,2BACL,kBAAK,wEAAsE,uBAAYA,WAAW,KAAM,4BAAyC,MACjJ,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,mYAeP,kBAAK,qCAAmC,uBAAYA,WAAW,KAAM,4BAAyC,0CAAwC,uBAAYA,WAAW,KAAM,YAAyB,2BAC5M,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,+CAEP,eACE,GAAM,0BACH,2BACL,kBAAK,sFAAoF,uBAAYA,WAAW,KAAM,YAAyB,oCAC/I,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,uDAIV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/module-reference/module-adobe-io-events-client.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Welcome to the Magento Adobe IO Events integration repository!`}</p>\n    <h1 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h1>\n    <p>{`Adobe IO Events is a package that enables integration between Magento and Adobe IO Events to create custom Event\nProvider and custom Events Metadata.`}</p>\n    <h1 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h1>\n    <p>{`This is a two-step process:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`We will create an Event Provider, this is required once per Adobe Commerce instance`}</li>\n      <li parentName=\"ol\">{`We will update the Events Metadata, this should happen during the deployment phase`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"configure-adobe-commerce-for-io-events\"\n    }}>{`Configure Adobe Commerce for IO Events`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`In the Adobe Developer Console, download your Adobe IO Console workspace configuration and its associated Service Account private key.`}</li>\n      <li parentName=\"ol\">{`In the Commerce admin panel, navigate to Stores > Settings > Configuration > Adobe Services > Adobe I/O Events > General configuration and make the following changes:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Populate the `}<inlineCode parentName=\"li\">{`Service Account Private Key`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`Adobe I/O Workspace Configuration`}</inlineCode>{` fields`}</li>\n          <li parentName=\"ul\">{`Enter a unique ID  in the `}<inlineCode parentName=\"li\">{`Adobe Commerce Instance ID`}</inlineCode>{` field`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">{`Run the following command to create an event provider`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento events:create-event-provider --label \"<unique_provider_label>\" --description \"<provider description>\"\n`}</code></pre>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">{`Enter the Event Provider ID output by the command in the `}<inlineCode parentName=\"li\">{`Adobe I/O Event Provider ID`}</inlineCode>{` field`}</li>\n    </ol>\n    <h1 {...{\n      \"id\": \"update-events-metadata\"\n    }}>{`Update Events Metadata`}</h1>\n    <p>{`Events Metadata in the following format can optionally be stored in `}<inlineCode parentName=\"p\">{`app/etc/event-types.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"events\": [\n        {\n            \"event_code\": \"com.adobe.commerce.product.created\",\n            \"label\": \"Product created\",\n            \"description\": \"A product was created in your catalog\"\n        },\n        {\n            \"event_code\": \"my.custom.event.code\",\n            \"label\": \"Custom event\",\n            \"description\": \"custom event\"\n        }\n    ]\n}\n`}</code></pre>\n    <p>{`To update the metadata using the `}<inlineCode parentName=\"p\">{`app/etc/event-types.json`}</inlineCode>{` file, add the following step to your `}<inlineCode parentName=\"p\">{`ece-tool`}</inlineCode>{` or deployment script:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento events:sync-events-metadata\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"delete-events-metadata\"\n    }}>{`Delete Events Metadata`}</h1>\n    <p>{`You can alternatively delete the Events Metadata no longer required by adding the `}<inlineCode parentName=\"p\">{`--delete`}</inlineCode>{` option to the command as such:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento events:sync-events-metadata --delete\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}