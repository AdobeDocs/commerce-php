{"version":3,"file":"component---src-pages-best-practices-extensions-faq-md-fd2e5800ec9fece9a13d.js","mappings":"+QAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,cADR,eAGA,4HACA,eACE,GAAM,qDADR,uDAGA,oBACE,eAAIC,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,gEADQ,oBAApB,mFAGA,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,mBADQ,OAApB,8EAGA,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,sCADQ,QAApB,MAEuB,cAAGA,WAAW,KACjC,KAAQ,wDADW,OAFvB,UAI0B,cAAGA,WAAW,KACpC,KAAQ,+BADc,cAJ1B,0BAMiD,cAAGA,WAAW,KAC3D,KAAQ,6DADqC,wBANjD,MASA,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,sCADQ,gCAApB,kFAE2H,cAAGA,WAAW,KACrI,KAAQ,uEAD+G,yBAF3H,qBAIuD,cAAGA,WAAW,KACjE,KAAQ,2CAD2C,4CAJvD,gBAOA,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wDADQ,wBAApB,oBAEqD,cAAGA,WAAW,KAC/D,KAAQ,+CADyC,kBAFrD,8DAMF,eACE,GAAM,2FADR,6FAGA,kEAAmD,uBAAYA,WAAW,KAAvB,mEAAnD,MACA,gGAAiF,uBAAYA,WAAW,KAAvB,qDAAjF,gDACuC,cAAGA,WAAW,IACjD,KAAQ,uCAD2B,UADvC,yEAG4F,uBAAYA,WAAW,KAAvB,iDAH5F,MAIA,4DAA6C,cAAGA,WAAW,IACvD,KAAQ,qDADiC,wBAA7C,0FAGA,eACE,GAAM,oFADR,sFAGA,8BAAe,uBAAYA,WAAW,KAAvB,6CAAf,yCAA6I,cAAGA,WAAW,IACvJ,KAAQ,sCADiI,SAA7I,UAE4B,cAAGA,WAAW,IACtC,KAAQ,0CADgB,aAF5B,mBAOH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/best-practices/extensions/faq.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"coding-faq\"\n    }}>{`Coding FAQ`}</h1>\n    <p>{`This page is a compilation of frequently asked coding questions by the Magento Open Source Community.`}</p>\n    <h2 {...{\n      \"id\": \"what-do-i-need-to-know-to-work-with-the-framework\"\n    }}>{`What do I need to know to work with the framework?`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)\"\n        }}>{`SOLID principles`}</a>{` - The essential principles needed to create maintainable and extendable code.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://php.net/\"\n        }}>{`PHP`}</a>{` - This is the programming language used for developing application code.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/HTML\"\n        }}>{`HTML`}</a>{`, `}<a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Cascading_Style_Sheets\"\n        }}>{`CSS`}</a>{`, and `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.javascript.com/\"\n        }}>{`JavaScript`}</a>{` - Languages used for `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/commerce/frontend-core/guide/\"\n        }}>{`frontend development`}</a>{`.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../architecture/basics/index.md\"\n        }}>{`Architecture basics overview`}</a>{` - Developers should be familiar with the architectural concepts, such as the `}<a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\"\n        }}>{`Model-View-Controller`}</a>{` pattern and the `}<a parentName=\"li\" {...{\n          \"href\": \"http://martinfowler.com/bliki/CQRS.html\"\n        }}>{`Command Query Responsibility Segregation`}</a>{` principle.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../../development/components/dependency-injection.md\"\n        }}>{`Dependency Injection`}</a>{` - An important `}<a parentName=\"li\" {...{\n          \"href\": \"https://glossary.magento.com/design-pattern\"\n        }}>{`design pattern`}</a>{` used to handle dependencies across classes and modules.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"how-can-my-extension-distinguish-between-the-magento-open-source-and-the-adobe-commerce\"\n    }}>{`How can my extension distinguish between the Magento Open Source and the Adobe Commerce?`}</h2>\n    <p>{`The correct edition can be obtained through `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\App\\\\ProductMetadataInterface::getEdition`}</inlineCode>{`.`}</p>\n    <p>{`In Magento Open Source that interface maps to the concrete implementation `}<inlineCode parentName=\"p\">{`Magento\\\\Framework\\\\AppInterface\\\\ProductMetadata`}</inlineCode>{`.\nHowever, in Adobe Commerce, the Commerce `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/module\"\n      }}>{`module`}</a>{` will override that mapping and the interface will be implemented by `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Enterprise\\\\Model\\\\ProductMetadata`}</inlineCode>{`.`}</p>\n    <p>{`Just relying on the interface through `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/dependency-injection\"\n      }}>{`dependency injection`}</a>{` will get you the right class, and calling \"getEdition\" will return the right answer.`}</p>\n    <h2 {...{\n      \"id\": \"how-do-i-configure-my-module-so-that-it-appears-in-a-specific-place-on-the-admin\"\n    }}>{`How do I configure my module so that it appears in a specific place on the Admin?`}</h2>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`<Module Directory>/etc/adminhtml/menu.xml`}</inlineCode>{` file to configure from where on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/admin\"\n      }}>{`Admin`}</a>{` your `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/extension\"\n      }}>{`extension`}</a>{` is accessible.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}