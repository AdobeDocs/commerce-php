{"version":3,"file":"component---src-pages-development-framework-inventory-management-reservations-md-da2cd6b8757052175b90.js","mappings":"uMAUsBA,E,wEAFTC,EAAe,CAAC,EAOvBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,EACjB,GAGKG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,gBADR,iBAGA,iEAAkD,eAAIC,WAAW,KAAf,gBAAlD,8FACA,SAACV,EAAD,CAAaW,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,0BAAW,cAAGC,WAAW,IACrB,KAAQ,uGADD,sCAAX,YAE2D,eAAIA,WAAW,KAAf,oBAF3D,MAGA,eACE,GAAM,2BADR,4BAGA,qEAAsD,uBAAYA,WAAW,KAAvB,yBAAtD,SAAgI,uBAAYA,WAAW,KAAvB,4BAAhI,cACA,eACE,GAAM,kBADR,mBAGA,mBAAG,uBAAYA,WAAW,KAAvB,wBAAH,kFACA,eACE,GAAM,wBADR,yBAGA,gSAAiR,uBAAYA,WAAW,KAAvB,qBAAjR,yIAAud,uBAAYA,WAAW,KAAvB,iBAAvd,sCAAsjB,uBAAYA,WAAW,KAAvB,wBAAtjB,0BACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,kXAeL,qCAAsB,uBAAYA,WAAW,KAAvB,+BAAtB,mHACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,g8BA4BL,eACE,GAAM,qBADR,sBAGA,2DAA4C,uBAAYA,WAAW,KAAvB,YAA5C,wIAAwO,uBAAYA,WAAW,KAAvB,oBAAxO,uCAA2U,uBAAYA,WAAW,KAAvB,WAA3U,KAAmY,uBAAYA,WAAW,KAAvB,aAAnY,iBAAyc,uBAAYA,WAAW,KAAvB,oBAAzc,2BACA,+EAAgE,uBAAYA,WAAW,KAAvB,aAAhE,MACA,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MADX,cAGA,eAAIA,WAAW,KACb,MAAS,MADX,kBAKJ,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,mCACH,eAAIA,WAAW,KACb,MAAS,MADX,qEAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,+BACH,eAAIA,WAAW,KACb,MAAS,MADX,2CAIF,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAvB,8CACH,eAAIA,WAAW,KACb,MAAS,MADX,qHAMN,eACE,GAAM,mBADR,oBAGA,0XAGH,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/framework/inventory-management/reservations.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"reservations\"\n    }}>{`Reservations`}</h1>\n    <p>{`Adobe Commerce and Magento Open Source use `}<em parentName=\"p\">{`reservations`}</em>{` to calculate and keep track of the salable quantity of each product assigned to a stock.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-admin/inventory/basics/selection-reservations.html\"\n      }}>{`Source Algorithms and Reservations`}</a>{` in the `}<em parentName=\"p\">{`Admin User Guide`}</em>{`.`}</p>\n    <h2 {...{\n      \"id\": \"interfaces-and-services\"\n    }}>{`Interfaces and services`}</h2>\n    <p>{`All interfaces and services are defined in the `}<inlineCode parentName=\"p\">{`InventoryReservations`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`InventoryReservationsApi`}</inlineCode>{` modules.`}</p>\n    <h3 {...{\n      \"id\": \"data-interface\"\n    }}>{`Data interface`}</h3>\n    <p><inlineCode parentName=\"p\">{`ReservationInterface`}</inlineCode>{` defines the constants and getter methods required for managing reservations.`}</p>\n    <h3 {...{\n      \"id\": \"reservation-services\"\n    }}>{`Reservation services`}</h3>\n    <p>{`When an event such as an order placement, cancellation, refund, or shipment occurs, the Append Reservation Service creates a reservation for each SKU, indicating how many items to add to the salable quantity total. The service guarantees the client does not use the `}<inlineCode parentName=\"p\">{`ReservationAppend`}</inlineCode>{` service to update existing reservations. (Reservations are append-only entities.) For example, use the service to check whether the `}<inlineCode parentName=\"p\">{`ReservationId`}</inlineCode>{`, which is passed in the scope of `}<inlineCode parentName=\"p\">{`ReservationInterface`}</inlineCode>{`, has been nullified.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`interface AppendReservationsInterface\n{\n    /**\n     * Append reservations\n     *\n     * @param ReservationInterface[] $reservations\n     * @return void\n     * @throws \\\\Magento\\\\Framework\\\\Exception\\\\InputException\n     * @throws \\\\Magento\\\\Framework\\\\Exception\\\\CouldNotSaveException\n     */\n    public function execute(array $reservations): void;\n}\n`}</code></pre>\n    <p>{`Do NOT use the `}<inlineCode parentName=\"p\">{`AppendReservationsInterface`}</inlineCode>{` service directly in the business logic that creates a business event. Instead, use a more high-level service:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`namespace Magento\\\\InventorySalesApi\\\\Api;\n\n/**\n * This service is responsible for creating reservations upon a sale event.\n *\n * @api\n */\ninterface PlaceReservationsForSalesEventInterface\n{\n    /**\n     * @param \\\\Magento\\\\InventorySalesApi\\\\Api\\\\Data\\\\ItemToSellInterface[] $items\n     * @param \\\\Magento\\\\InventorySalesApi\\\\Api\\\\Data\\\\SalesChannelInterface $salesChannel\n     * @param \\\\Magento\\\\InventorySalesApi\\\\Api\\\\Data\\\\SalesEventInterface $salesEvent\n     * @return void\n     *\n     * @throws \\\\Magento\\\\Framework\\\\Exception\\\\LocalizedException\n     * @throws \\\\Magento\\\\Framework\\\\Exception\\\\InputException\n     * @throws \\\\Magento\\\\Framework\\\\Exception\\\\CouldNotSaveException\n     */\n    public function execute(\n        array $items,\n        \\\\Magento\\\\InventorySalesApi\\\\Api\\\\Data\\\\SalesChannelInterface $salesChannel,\n        \\\\Magento\\\\InventorySalesApi\\\\Api\\\\Data\\\\SalesEventInterface $salesEvent\n    ): void;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"checkout-services\"\n    }}>{`Checkout services`}</h3>\n    <p>{`In Inventory Management, a product's `}<inlineCode parentName=\"p\">{`Quantity`}</inlineCode>{` value is not static. The salable quantity is now retrieved as a result of a dedicated service call. This differs from the previous `}<inlineCode parentName=\"p\">{`CatalogInventory`}</inlineCode>{` implementation, which defined the `}<inlineCode parentName=\"p\">{`Product`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`StockItem`}</inlineCode>{` interface. (`}<inlineCode parentName=\"p\">{`CatalogInventory`}</inlineCode>{` has been deprecated.)`}</p>\n    <p>{`Use the following dynamic services introduced instead of `}<inlineCode parentName=\"p\">{`StockItem`}</inlineCode>{`:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Interface`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GetProductSalableQtyInterface`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Returns the salable product quantity for the specified stock ID`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IsProductSalableInterface`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Checks whether the product is salable`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`IsProductSalableForRequestedQtyInterface`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Checks whether there is enough salable quantity to fulfill an order or place the product into a shopping cart`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"web-api-support\"\n    }}>{`Web API support`}</h2>\n    <p>{`Adobe Commerce and Magento Open Source web APIs (REST and SOAP) impose restrictions for entity interfaces that are outside the scope of reservations. Most notably, Web APIs require getter and setter methods. Because reservations are append-only immutable entities, there are no reservation setter methods. Therefore, reservation Web APIs are not supported.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}