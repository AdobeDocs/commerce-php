{"version":3,"file":"component---src-pages-tutorials-create-custom-rest-api-md-ac76be9742fb7a232031.js","mappings":"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","sources":["webpack://commerce-php/./src/pages/tutorials/create-custom-rest-api.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"create-a-cusotm-rest-api\"\n    }}>{`Create a cusotm REST API`}</h1>\n    <p>{`Although {{site.data.var.ee}} and {{site.data.var.ce}} provide numerous REST endpoints, you might need to create your own to manage custom data within your extension. This tutorial describes how you can create such a custom REST `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/api\"\n      }}>{`API`}</a>{`.`}</p>\n    <p>{`In this tutorial, we will create two custom endpoints to read or modify the product information. `}<inlineCode parentName=\"p\">{`GET /V1/rest_dev/getProduct/{productId}`}</inlineCode>{` returns details about a specified product, and `}<inlineCode parentName=\"p\">{`PUT /V1/rest_dev/setDescription`}</inlineCode>{` modifies product description data.`}</p>\n    <h2 {...{\n      \"id\": \"step-1-create-a-custom-module\"\n    }}>{`Step 1. Create a custom module`}</h2>\n    <p>{`We will use `}<inlineCode parentName=\"p\">{`Dev_RestApi`}</inlineCode>{` as the namespace for this tutorial.`}</p>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`module.xml`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`registration.php`}</inlineCode>{` files to get started. `}<a parentName=\"p\" {...{\n        \"href\": \"../development/prepare/component-file-structure.md\"\n      }}>{`About component file structure`}</a>{` provides additional information.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`app/code/Dev/RestApi/etc/module.xml`}</inlineCode></strong>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:Module/etc/module.xsd\">\n    <module name=\"Dev_RestApi\">\n        <sequence>\n            <module name=\"Magento_Webapi\" />\n            <module name=\"Magento_Catalog\" />\n        </sequence>\n    </module>\n</config>\n`}</code></pre>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`app/code/Dev/RestApi/registration.php`}</inlineCode></strong>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\\\\Magento\\\\Framework\\\\Component\\\\ComponentRegistrar::register(\n    \\\\Magento\\\\Framework\\\\Component\\\\ComponentRegistrar::MODULE,\n    'Dev_RestApi',\n    __DIR__\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-2-create-custom-acl-entries\"\n    }}>{`Step 2. Create custom ACL entries`}</h2>\n    <p>{`We must create `}<a parentName=\"p\" {...{\n        \"href\": \"create-access-control-list-rule.md\"\n      }}>{`Access Control List (ACL) rules`}</a>{` for each endpoint. These rules give full control over who can access them.`}</p>\n    <p>{`Create the required ACL entries in `}<inlineCode parentName=\"p\">{`app/code/Dev/RestApi/etc/acl.xml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:framework:Acl/etc/acl.xsd\">\n    <acl>\n        <resources>\n            <resource id=\"Magento_Backend::admin\">\n                <resource id=\"Dev_RestApi::products\" title=\"Dev API - Products\"\n                          translate=\"title\" sortOrder=\"110\">\n                    <resource id=\"Dev_RestApi::products_get\" title=\"Get product\"\n                              translate=\"title\" sortOrder=\"10\" />\n                    <resource id=\"Dev_RestApi::products_set_description\" title=\"Set description\"\n                              translate=\"title\" sortOrder=\"20\" />\n                </resource>\n            </resource>\n        </resources>\n    </acl>\n</config>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-3-define-custom-endpoints\"\n    }}>{`Step 3. Define custom endpoints`}</h2>\n    <p>{`To define endpoints, we need to `}<a parentName=\"p\" {...{\n        \"href\": \"../development/components/web-api/services.md\"\n      }}>{`configure a web API`}</a>{` service as described in `}<inlineCode parentName=\"p\">{`app/code/Dev/RestApi/etc/webapi.xml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<routes xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Webapi:etc/webapi.xsd\">\n    <route url=\"/V1/rest_dev/getProduct/:id\" method=\"GET\">\n        <service class=\"Dev\\\\RestApi\\\\Api\\\\ProductRepositoryInterface\" method=\"getItem\" />\n        <resources>\n            <resource ref=\"Dev_RestApi::products_get\" />\n        </resources>\n    </route>\n    <route url=\"/V1/rest_dev/setDescription\" method=\"PUT\">\n        <service class=\"Dev\\\\RestApi\\\\Api\\\\ProductRepositoryInterface\" method=\"setDescription\" />\n        <resources>\n            <resource ref=\"Dev_RestApi::products_set_description\" />\n        </resources>\n    </route>\n</routes>\n`}</code></pre>\n    <p>{`Where:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`url`}</inlineCode>{` is the URL of the endpoint. The full address would be `}<inlineCode parentName=\"li\">{`<domain>/rest/<store_code>/<url>`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`method`}</inlineCode>{` defines the request method (GET, POST, PUT, DELETE).`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`service`}</inlineCode>{` describes the interface and the method to be called when the endpoint is reached.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`resource`}</inlineCode>{` sets the ACL resource that is required to access the endpoint. If you want to make it public (no authentication), use: `}<inlineCode parentName=\"li\">{`<resource ref=\"anonymous\" />`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"step-4-create-interfaces\"\n    }}>{`Step 4. Create interfaces`}</h2>\n    <p>{`In this example, we created the interfaces for the request in `}<inlineCode parentName=\"p\">{`app/code/Dev/RestApi/Api/RequestItemInterface.php`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nnamespace Dev\\\\RestApi\\\\Api;\ninterface RequestItemInterface\n{\n    const DATA_ID = 'id';\n    const DATA_DESCRIPTION = 'description';\n    /**\n     * @return int\n     */\n    public function getId();\n    /**\n     * @return string\n     */\n    public function getDescription();\n    /**\n     * @param int $id\n     * @return $this\n     */\n    public function setId(int $id);\n    /**\n     * @param string $description\n     * @return $this\n     */\n    public function setDescription(string $description);\n}\n`}</code></pre>\n    <p>{`The interfaces for the response is in `}<inlineCode parentName=\"p\">{`app/code/Dev/RestApi/Api/ResponseItemInterface.php`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nnamespace Dev\\\\RestApi\\\\Api;\ninterface ResponseItemInterface\n{\n    const DATA_ID = 'id';\n    const DATA_SKU = 'sku';\n    const DATA_NAME = 'name';\n    const DATA_DESCRIPTION = 'description';\n    /**\n     * @return int\n     */\n    public function getId();\n    /**\n     * @return string\n     */\n    public function getSku();\n    /**\n     * @return string\n     */\n    public function getName();\n    /**\n     * @return string|null\n     */\n    public function getDescription();\n    /**\n     * @param int $id\n     * @return $this\n     */\n    public function setId(int $id);\n    /**\n     * @param string $sku\n     * @return $this\n     */\n    public function setSku(string $sku);\n    /**\n     * @param string $name\n     * @return $this\n     */\n    public function setName(string $name);\n    /**\n     * @param string $description\n     * @return $this\n     */\n    public function setDescription(string $description);\n}\n`}</code></pre>\n    <p>{`We define the 'ProductRepositoryInterface' in `}<inlineCode parentName=\"p\">{`app/code/Dev/RestApi/Api/ProductRepositoryInterface.php`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nnamespace Dev\\\\RestApi\\\\Api;\ninterface ProductRepositoryInterface\n{\n    /**\n     * Return a filtered product.\n     *\n     * @param int $id\n     * @return \\\\Dev\\\\RestApi\\\\Api\\\\ResponseItemInterface\n     * @throws \\\\Magento\\\\Framework\\\\Exception\\\\NoSuchEntityException\n     */\n    public function getItem(int $id);\n    /**\n     * Set descriptions for the products.\n     *\n     * @param \\\\Dev\\\\RestApi\\\\Api\\\\RequestItemInterface[] $products\n     * @return void\n     */\n    public function setDescription(array $products);\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-5-create-models\"\n    }}>{`Step 5. Create models`}</h2>\n    <p>{`Models create classes that implement interfaces and process data.`}</p>\n    <p>{`In this example, we have created models to request, respond to, and process data. In each model, we have defined two methods: `}<inlineCode parentName=\"p\">{`getItem`}</inlineCode>{`, which provides product details of the given product ID, and `}<inlineCode parentName=\"p\">{`setDescription`}</inlineCode>{` which updates the description of the given product.`}</p>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`app/code/Dev/RestApi/Model/Api/RequestItem.php`}</inlineCode></strong>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nnamespace Dev\\\\RestApi\\\\Model\\\\Api;\nuse Dev\\\\RestApi\\\\Api\\\\RequestItemInterface;\nuse Magento\\\\Framework\\\\DataObject;\n/**\n * Class RequestItem\n */\nclass RequestItem extends DataObject implements RequestItemInterface\n{\n    public function getId() : int\n    {\n        return $this->_getData(self::DATA_ID);\n    }\n    public function getDescription() : string\n    {\n        return $this->_getData(self::DATA_DESCRIPTION);\n    }\n    /**\n     * @param int $id\n     * @return $this\n     */\n    public function setId(int $id) : mixed\n    {\n        return $this->setData(self::DATA_ID, $id);\n    }\n    /**\n     * @param string $description\n     * @return $this\n     */\n    public function setDescription(string $description) : mixed\n    {\n        return $this->setData(self::DATA_DESCRIPTION, $description);\n    }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`app/code/Dev/RestApi/Model/Api/ResponseItem.php`}</inlineCode></strong>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nnamespace Dev\\\\RestApi\\\\Model\\\\Api;\nuse Dev\\\\RestApi\\\\Api\\\\ResponseItemInterface;\nuse Magento\\\\Framework\\\\DataObject;\n/**\n * Class ResponseItem\n */\nclass ResponseItem extends DataObject implements ResponseItemInterface\n{\n    public function getId() : int\n    {\n        return $this->_getData(self::DATA_ID);\n    }\n    public function getSku() : string\n    {\n        return $this->_getData(self::DATA_SKU);\n    }\n    public function getName() : string\n    {\n        return $this->_getData(self::DATA_NAME);\n    }\n    public function getDescription() : string\n    {\n        return $this->_getData(self::DATA_DESCRIPTION);\n    }\n    /**\n     * @param int $id\n     * @return $this\n     */\n    public function setId(int $id) : mixed\n    {\n        return $this->setData(self::DATA_ID, $id);\n    }\n    /**\n     * @param string $sku\n     * @return $this\n     */\n    public function setSku(string $sku) : mixed\n    {\n        return $this->setData(self::DATA_SKU, $sku);\n    }\n    /**\n     * @param string $name\n     * @return $this\n     */\n    public function setName(string $name) : mixed\n    {\n        return $this->setData(self::DATA_NAME, $name);\n    }\n    /**\n     * @param string $description\n     * @return $this\n     */\n    public function setDescription(string $description) : mixed\n    {\n        return $this->setData(self::DATA_DESCRIPTION, $description);\n    }\n}\n`}</code></pre>\n    <p><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`app/code/Dev/RestApi/Model/Api/ProductRepository.php`}</inlineCode></strong>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nnamespace Dev\\\\RestApi\\\\Model\\\\Api;\nuse Dev\\\\RestApi\\\\Api\\\\ProductRepositoryInterface;\nuse Dev\\\\RestApi\\\\Api\\\\RequestItemInterfaceFactory;\nuse Dev\\\\RestApi\\\\Api\\\\ResponseItemInterfaceFactory;\nuse Magento\\\\Catalog\\\\Api\\\\Data\\\\ProductInterface;\nuse Magento\\\\Catalog\\\\Model\\\\ResourceModel\\\\Product\\\\Action;\nuse Magento\\\\Catalog\\\\Model\\\\ResourceModel\\\\Product\\\\CollectionFactory;\nuse Magento\\\\Framework\\\\Exception\\\\NoSuchEntityException;\nuse Magento\\\\Store\\\\Model\\\\StoreManagerInterface;\n/**\n * Class ProductRepository\n */\nclass ProductRepository implements ProductRepositoryInterface\n{\n    /**\n     * @var Action\n     */\n    private $productAction;\n    /**\n     * @var CollectionFactory\n     */\n    private $productCollectionFactory;\n    /**\n     * @var RequestItemInterfaceFactory\n     */\n    private $requestItemFactory;\n    /**\n     * @var ResponseItemInterfaceFactory\n     */\n    private $responseItemFactory;\n    /**\n     * @var StoreManagerInterface\n     */\n    private $storeManager;\n    /**\n     * @param Action $productAction\n     * @param CollectionFactory $productCollectionFactory\n     * @param RequestItemInterfaceFactory $requestItemFactory\n     * @param ResponseItemInterfaceFactory $responseItemFactory\n     * @param StoreManagerInterface $storeManager\n     */\n    public function __construct(\n        Action $productAction,\n        CollectionFactory $productCollectionFactory,\n        RequestItemInterfaceFactory $requestItemFactory,\n        ResponseItemInterfaceFactory $responseItemFactory,\n        StoreManagerInterface $storeManager\n    ) {\n        $this->productAction = $productAction;\n        $this->productCollectionFactory = $productCollectionFactory;\n        $this->requestItemFactory = $requestItemFactory;\n        $this->responseItemFactory = $responseItemFactory;\n        $this->storeManager = $storeManager;\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * @param int $id\n     * @return ResponseItemInterface\n     * @throws NoSuchEntityException\n     */\n    public function getItem(int $id) : mixed\n    {\n        $collection = $this->getProductCollection()\n            ->addAttributeToFilter('entity_id', ['eq' => $id]);\n        /** @var ProductInterface $product */\n        $product = $collection->getFirstItem();\n        if (!$product->getId()) {\n            throw new NoSuchEntityException(__('Product not found'));\n        }\n        return $this->getResponseItemFromProduct($product);\n    }\n    /**\n     * {@inheritDoc}\n     *\n     * @param RequestItemInterface[] $products\n     * @return void\n     */\n    public function setDescription(array $products) : void\n    {\n        foreach ($products as $product) {\n            $this->setDescriptionForProduct(\n                $product->getId(),\n                $product->getDescription()\n            );\n        }\n    }\n    /**\n     * @return Collection\n     */\n    private function getProductCollection() : mixed\n    {\n        /** @var Collection $collection */\n        $collection = $this->productCollectionFactory->create();\n        $collection\n            ->addAttributeToSelect(\n                [\n                    'entity_id',\n                    ProductInterface::SKU,\n                    ProductInterface::NAME,\n                    'description'\n                ],\n                'left'\n            );\n        return $collection;\n    }\n    /**\n     * @param ProductInterface $product\n     * @return ResponseItemInterface\n     */\n    private function getResponseItemFromProduct(ProductInterface $product) : mixed\n    {\n        /** @var ResponseItemInterface $responseItem */\n        $responseItem = $this->responseItemFactory->create();\n        $responseItem->setId($product->getId())\n            ->setSku($product->getSku())\n            ->setName($product->getName())\n            ->setDescription($product->getDescription());\n        return $responseItem;\n    }\n    /**\n     * Set the description for the product.\n     *\n     * @param int $id\n     * @param string $description\n     * @return void\n     */\n    private function setDescriptionForProduct(int $id, string $description) : void\n    {\n        $this->productAction->updateAttributes(\n            [$id],\n            ['description' => $description],\n            $this->storeManager->getStore()->getId()\n        );\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-6-test-your-custom-endpoint\"\n    }}>{`Step 6. Test your custom endpoint`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`You can use any REST client to send calls. `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.getpostman.com/\"\n        }}>{`Postman`}</a>{` is recommended.`}</li>\n      <li parentName=\"ul\">{`Obtain an admin authorization token. All calls in this tutorial require administrator privileges. See `}<a parentName=\"li\" {...{\n          \"href\": \"https://devdocs.magento.com/guides/v2.4/rest/tutorials/prerequisite-tasks/create-admin-token.html\"\n        }}>{`Generate the admin token`}</a>{` for more information.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"test-the-get-endpoint\"\n    }}>{`Test the GET endpoint`}</h3>\n    <p>{`The example uses sample data for `}<inlineCode parentName=\"p\">{`product_id: 1`}</inlineCode>{` and the endpoint `}<inlineCode parentName=\"p\">{`http://local.magentoee.com/rest/V1/rest_dev/getProduct/1`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Request:`}</strong></p>\n    <p><inlineCode parentName=\"p\">{`GET <domain>/rest/V1/<store_code>/rest_dev/getProduct/<product_id>`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Response:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": 1,\n    \"sku\": \"24-MB01\",\n    \"name\": \"Joust Duffle Bag\",\n    \"description\": \"<p>The sporty Joust Duffle Bag can't be beat - not in the gym, not on the luggage carousel, not anywhere. Big enough to haul a basketball or soccer ball and some sneakers with plenty of room to spare, it's ideal for athletes with places to go.<p>\\\\n<ul>\\\\n<li>Dual top handles.</li>\\\\n<li>Adjustable shoulder strap.</li>\\\\n<li>Full-length zipper.</li>\\\\n<li>L 29\\\\\" x W 13\\\\\" x H 11\\\\\".</li>\\\\n</ul>\"\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"test-the-put-endpoint\"\n    }}>{`Test the PUT endpoint`}</h3>\n    <p><strong parentName=\"p\">{`Request:`}</strong></p>\n    <p><inlineCode parentName=\"p\">{`PUT <domain>/rest/V1/<store_code>/rest_dev/setDescription`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Payload:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n   \"products\":[\n      {\n         \"id\":2,\n         \"description\":\"Test description\"\n      }\n   ]\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Response:`}</strong></p>\n    <p><inlineCode parentName=\"p\">{`[]`}</inlineCode></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}