{"version":3,"file":"component---src-pages-module-reference-module-deploy-md-857574cf40f4404e8c89.js","mappings":"oRAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,YACH,aACL,eACE,GAAM,qBACH,sBACL,kBAAK,kdAI8F,SAAU,gDAE7G,oBACE,eAAIC,WAAW,MAAO,gBACtB,eAAIA,WAAW,MAAO,kLAIxB,eACE,GAAM,cACH,eACL,eACE,GAAM,uBACH,wBACL,eACE,GAAM,WACH,YACL,kBAAK,sIACL,SAACX,EAAD,CAAaY,MAAM,OAAOF,QAAQ,gBA/B7B,yCAmCR,CAEDF,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/module-reference/module-deploy.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h1>\n    <h2 {...{\n      \"id\": \"purpose-of-module\"\n    }}>{`Purpose of module`}</h2>\n    <p>{`Deploy is a module that holds collection of services and command line tools to help with Magento application deployment.\nTo execute this command, please, run \"bin/magento setup:static-content:deploy\" from the Magento root directory.\nDeploy module contains 2 additional commands that allows switching between application modes (for instance from\ndevelopment to\nproduction) and show current application mode. To change the mode run \"bin/magento deploy:mode:set `}{`[mode]`}{`\".\nWhere mode can be one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`development`}</li>\n      <li parentName=\"ul\">{`production\nWhen switching to production mode, you can pass optional parameter skip-compilation to do not compile static files, CSS\nand do not run the compilation process.`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"deployment\"\n    }}>{`Deployment`}</h1>\n    <h2 {...{\n      \"id\": \"system-requirements\"\n    }}>{`System requirements`}</h2>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <p>{`The Magento_Deploy module is installed automatically (using the native Magento install mechanism) without any additional actions.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\nThe version of this module is 100.4.7.\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}