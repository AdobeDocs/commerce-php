{"version":3,"file":"component---src-pages-module-reference-module-configurable-product-md-596d0909f97f35d3ce6e.js","mappings":"mRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,sCACH,uCACL,kBAAK,+OAEL,kBAAK,wKAEL,eACE,GAAM,aACH,cACL,mBAAG,uBAAYC,WAAW,KAAM,wBAAqC,oFACrE,kBAAK,iFAA+E,cAAGA,WAAW,IAC9F,KAAQ,sHACL,yBAA6B,MACpC,eACE,GAAM,iBACH,kBACL,kBAAK,mJAAiJ,cAAGA,WAAW,IAChK,KAAQ,4EACL,oBAAwB,MAC/B,mBAAG,cAAGA,WAAW,IACb,KAAQ,+EACL,8CAAkD,0FACzD,eACE,GAAM,0BACH,2BACL,eACE,GAAM,oDACH,sDACL,kBAAK,4BAA0B,uBAAYA,WAAW,KAAM,2BAAwC,gJACpG,kBAAK,iBAAe,cAAGA,WAAW,IAC9B,KAAQ,qGACL,uBAA2B,2BAClC,kBAAK,2CAAyC,uBAAYA,WAAW,KAAM,2BAAwC,eACnH,uBACE,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,MACN,UACL,eAAIA,WAAW,KACb,MAAS,MACN,kBAGT,kBAAOA,WAAW,UAChB,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,aACjC,eAAIA,WAAW,KACb,MAAS,MACN,0IAEP,eAAIA,WAAW,UACb,eAAIA,WAAW,KACb,MAAS,OACR,uBAAYA,WAAW,MAAO,aACjC,eAAIA,WAAW,KACb,MAAS,MACN,wIAIX,kBAAK,WAAS,uBAAYA,WAAW,KAAM,2BAAwC,gDAA8C,uBAAYA,WAAW,KAAM,WAAwB,mBACtL,kBAAK,wGAAsG,uBAAYA,WAAW,KAAM,WAAwB,WAChK,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,kHAMV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/module-reference/module-configurable-product.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"magento_configurableproduct-module\"\n    }}>{`Magento_ConfigurableProduct module`}</h1>\n    <p>{`The Magento_ConfigurableProduct module introduces new product type in the Magento application called Configurable Product.\nThis module is designed to extend existing functionality of Magento_Catalog module by adding new product type.`}</p>\n    <p>{`Configurable Products let the customers select the variant they desire by choosing options.\nFor example, store owner sells t-shirts in two colors and three sizes.`}</p>\n    <h2 {...{\n      \"id\": \"structure\"\n    }}>{`Structure`}</h2>\n    <p><inlineCode parentName=\"p\">{`ConfigurableProduct/`}</inlineCode>{` - the directory that declares ConfigurableProduct metadata used by the module.`}</p>\n    <p>{`For information about a typical file structure of a module in Magento 2, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/extension-dev-guide/build/module-file-structure.html#module-file-structure\"\n      }}>{`Module file structure`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"extensibility\"\n    }}>{`Extensibility`}</h2>\n    <p>{`Extension developers can interact with the Magento_ConfigurableProduct module. For more information about the Magento extension mechanism, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/extension-dev-guide/plugins.html\"\n      }}>{`Magento plug-ins`}</a>{`.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/extension-dev-guide/depend-inj.html\"\n      }}>{`The Magento dependency injection mechanism`}</a>{` enables you to override the functionality of the Magento_ConfigurableProduct module.`}</p>\n    <h2 {...{\n      \"id\": \"additional-information\"\n    }}>{`Additional information`}</h2>\n    <h3 {...{\n      \"id\": \"configurable-variables-through-the-theme-viewxml\"\n    }}>{`Configurable variables through the theme view.xml`}</h3>\n    <p>{`Modify the value of the `}<inlineCode parentName=\"p\">{`gallery_switch_strategy`}</inlineCode>{` variable in the theme view.xml file to configure how gallery images should be updated when a user switches between product configurations.`}</p>\n    <p>{`Learn how to `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/frontend-dev-guide/themes/theme-images.html#view_xml_vars\"\n      }}>{`configure variables`}</a>{` in the view.xml file.`}</p>\n    <p>{`There are two available values for the `}<inlineCode parentName=\"p\">{`gallery_switch_strategy`}</inlineCode>{` variable:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`replace`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`In replace mode, images of the parent configurable product will be replaced by the simple product images upon a configuration change`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`prepend`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`In prepend mode, the simple product images will be added in front of the parent configurable product upon a configuration change`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`If the `}<inlineCode parentName=\"p\">{`gallery_switch_strategy`}</inlineCode>{` variable is not defined, the default value `}<inlineCode parentName=\"p\">{`replace`}</inlineCode>{` will be used.`}</p>\n    <p>{`For example, adding these lines of code to the theme view.xml file will set the gallery behavior to `}<inlineCode parentName=\"p\">{`replace`}</inlineCode>{` mode.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<vars module=\"Magento_ConfigurableProduct\">\n    <var name=\"gallery_switch_strategy\">replace</var>\n</vars>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}