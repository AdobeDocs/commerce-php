"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[97233],{67600:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return l},default:function(){return s}});var t=n(87462),r=n(63366),d=(n(15007),n(64983)),i=n(91515),m=["components"],l={},o={_frontmatter:l},p=i.Z;function s(e){var a=e.components,n=(0,r.Z)(e,m);return(0,d.mdx)(p,(0,t.Z)({},o,n,{components:a,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"array-manager"},"Array manager"),(0,d.mdx)("p",null,"The ",(0,d.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/Stdlib/ArrayManager.php"},(0,d.mdx)("inlineCode",{parentName:"a"},"Magento\\Framework\\Stdlib\\ArrayManager"))," library provides the ability to manage deeply nested associative arrays.\nThe library is primarily used to handle data from UI components within ",(0,d.mdx)("a",{parentName:"p",href:"https://devdocs.magento.com/guides/v2.4/ui_comp_guide/concepts/ui_comp_data_source.html"},"DataProviders")," and ",(0,d.mdx)("a",{parentName:"p",href:"https://devdocs.magento.com/guides/v2.4/ui_comp_guide/concepts/ui_comp_modifier_concept.html"},"Modifiers"),", which are actually part of a complicated process of parsing XML files in associative arrays."),(0,d.mdx)("h2",{id:"usage"},"Usage"),(0,d.mdx)("table",null,(0,d.mdx)("thead",{parentName:"table"},(0,d.mdx)("tr",{parentName:"thead"},(0,d.mdx)("th",{parentName:"tr",align:null},"Method"),(0,d.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,d.mdx)("tbody",{parentName:"table"},(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"exists")),(0,d.mdx)("td",{parentName:"tr",align:null},"Checks if the node exists in a given associative array")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"find")),(0,d.mdx)("td",{parentName:"tr",align:null},"Finds a node in a nested array and saves its index and parent node reference")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"findPaths")),(0,d.mdx)("td",{parentName:"tr",align:null},"Gets matching paths for elements with specified indexes.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"get")),(0,d.mdx)("td",{parentName:"tr",align:null},"Returns the value of the key (or node) at the end of the path. ",(0,d.mdx)("inlineCode",{parentName:"td"},"null")," is returned if the node could not be found.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"move")),(0,d.mdx)("td",{parentName:"tr",align:null},"Moves a value from one path to another")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"merge")),(0,d.mdx)("td",{parentName:"tr",align:null},"Merges a value with a node and returns the modified data.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"populate")),(0,d.mdx)("td",{parentName:"tr",align:null},"Populates a nested array, if possible and necessary.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"remove")),(0,d.mdx)("td",{parentName:"tr",align:null},"Removes a node and returns the modified array.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"replace")),(0,d.mdx)("td",{parentName:"tr",align:null},"Updates the existing nodes and returns the modified array")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"set")),(0,d.mdx)("td",{parentName:"tr",align:null},"Sets the value into a node and returns modified data.")),(0,d.mdx)("tr",{parentName:"tbody"},(0,d.mdx)("td",{parentName:"tr",align:null},(0,d.mdx)("inlineCode",{parentName:"td"},"slicePath")),(0,d.mdx)("td",{parentName:"tr",align:null},"Retrieves a slice of the specified path.")))),(0,d.mdx)("h3",{id:"example-1"},"Example 1"),(0,d.mdx)("p",null,"The following example shows how to add a custom field to the checkout billing address using the ",(0,d.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/1f9186c3b9a96c5e642fd5d3d31ac5c7e1877d2b/app/code/Magento/Checkout/Block/Checkout/LayoutProcessor.php#L143"},"LayoutProcessor implementation"),"."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-php"},"<?php\n/**\n * Process js Layout of block\n *\n * @param array $jsLayout\n *\n * @return array\n */\npublic function process($jsLayout)\n{\n    ...\n\n    if (isset($jsLayout['components']['checkout']['children']['steps']['children']['shipping-step']\n        ['children']['shippingAddress']['children']['shipping-address-fieldset']['children'])\n    ) {\n        $fields = $jsLayout['components']['checkout']['children']['steps']['children']['shipping-step']\n        ['children']['shippingAddress']['children']['shipping-address-fieldset']['children'];\n\n        ...\n    }\n\n    ...\n}\n")),(0,d.mdx)("p",null,"For a cleaner implementation of the previous example, use the ",(0,d.mdx)("inlineCode",{parentName:"p"},"Magento\\Framework\\Stdlib\\ArrayManager"),", library to eliminate duplicate checking and get the required array."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-php"},"<?php\n\nuse Magento\\Framework\\Stdlib\\ArrayManager;\n\n...\n    /**\n     * @var ArrayManager\n     */\n    private $arrayManager;\n\n    /**\n     * SomeClass constructor.\n     *\n     * @param ArrayManager $arrayManager\n     */\n    public function __construct(ArrayManager $arrayManager)\n    {\n        $this->arrayManager = $arrayManager;\n    }\n\n    /**\n     * Process js Layout of block\n     *\n     * @param array $jsLayout\n     *\n     * @return array\n     */\n    public function process($jsLayout): array\n    {\n        $path = 'components/checkout/children/steps/children/shipping-step/children/shippingAddress/children/shipping-address-fieldset/children';\n\n        if ($fields = $this->arrayManager->get($path, $jsLayout)) {\n            ...\n        }\n\n        ...\n    }\n\n...\n\n")),(0,d.mdx)("h3",{id:"example-2"},"Example 2"),(0,d.mdx)("p",null,"Suppose you have the following nested array:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-php"},"$data = [\n    'response' => [\n        'status' => 'OK',\n        'result' => [\n            'items' => [\n                0 => 'First item',\n                1 => 'Second item',\n                ...\n            ],\n            ...\n        ]\n    ]\n]\n")),(0,d.mdx)("p",null,"You can use the  ",(0,d.mdx)("inlineCode",{parentName:"p"},"Magento\\Framework\\Stdlib\\ArrayManager")," library to access items in the array:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-php"},"...\n\nif ($this->arrayManager->get('response/status', $data) === 'OK') {\n    $items = $this->arrayManager->get('response/result/items', $data) ?? [];\n\n    foreach ($items as $item) {\n        ...\n    }\n}\n\n...\n")),(0,d.mdx)("p",null,"You can use the  ",(0,d.mdx)("inlineCode",{parentName:"p"},"Magento\\Framework\\Stdlib\\ArrayManager")," library to populate an array from the given path:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-php"},"...\n\n$this->arrayManager->populate('response/result/items', $data)\n\n...\n")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-development-framework-array-manager-md-5bbe1e4deacefca956f6.js.map