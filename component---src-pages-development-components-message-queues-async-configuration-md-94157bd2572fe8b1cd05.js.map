{"version":3,"file":"component---src-pages-development-components-message-queues-async-configuration-md-94157bd2572fe8b1cd05.js","mappings":"kRAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,8BACH,+BACL,kBAAK,8FACL,oBACE,eAAIC,WAAW,MAAO,sBACtB,eAAIA,WAAW,MAAO,uBACtB,eAAIA,WAAW,MAAO,uBACtB,eAAIA,WAAW,MAAO,yBAExB,kBAAK,qCAAmC,cAAGA,WAAW,IAClD,KAAQ,oBACL,4BAAgC,MACvC,kBAAK,sOACL,oBACE,eAAIA,WAAW,MAAO,sBACtB,eAAIA,WAAW,MAAO,yBAExB,kBAAK,qBAAmB,uBAAYA,WAAW,KAAM,sBAAmC,SAAO,uBAAYA,WAAW,KAAM,sBAAmC,sBAAoB,uBAAYA,WAAW,KAAM,uBAAoC,aACpP,eACE,GAAM,oBACH,sBACL,kBAAK,6CAA2C,uBAAYA,WAAW,KAAM,qBAAkC,qBAAmB,cAAGA,WAAW,IAC5I,KAAQ,mBACL,gCACP,eACE,GAAM,sBACH,wBACL,kBAAK,QAAM,uBAAYA,WAAW,KAAM,uBAAoC,8BAA4B,uBAAYA,WAAW,KAAM,mFAAgG,6BAA2B,uBAAYA,WAAW,KAAM,iDAA8D,8BAA4B,uBAAYA,WAAW,KAAM,0EAAuF,sCAAoC,uBAAYA,WAAW,KAAM,UAAuB,WACnkB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,kYASP,kBAAK,4IAA0I,uBAAYA,WAAW,KAAM,uBAAoC,SAAO,uBAAYA,WAAW,KAAM,WAAwB,MAC5Q,mBAAG,uBAAYA,WAAW,KAAM,2FAAwG,WAAS,uBAAYA,WAAW,KAAM,4EAAyF,yHAAuH,uBAAYA,WAAW,KAAM,QAAqB,yBAAuB,uBAAYA,WAAW,KAAM,WAAwB,oCAC5f,eACE,GAAM,qBACH,uBACL,kBAAK,4GACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,qLAGP,eACE,GAAM,qBACH,uBACL,kBAAK,8FAA4F,uBAAYA,WAAW,KAAM,UAAuB,YAAU,uBAAYA,WAAW,KAAM,WAAwB,0CAAwC,uBAAYA,WAAW,KAAM,wBAAqC,0CAC9T,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,6JAIP,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,0FAAwF,uBAAYC,WAAW,KAAM,WAAwB,wPAC9B,cAAGA,WAAW,IAC9H,KAAQ,sBACL,qCAAyC,MAAI,uBAAYA,WAAW,KAAM,sBAAmC,MAAI,uBAAYA,WAAW,KAAM,uBAAoC,MAAI,uBAAYA,WAAW,KAAM,sBAAmC,KAGhQ,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/components/message-queues/async-configuration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"asynchronous-configuration\"\n    }}>{`Asynchronous configuration`}</h1>\n    <p>{`When using the message queue, four configuration files in your component must be updated:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`communication.xml`}</li>\n      <li parentName=\"ul\">{`queue_consumer.xml`}</li>\n      <li parentName=\"ul\">{`queue_topology.xml`}</li>\n      <li parentName=\"ul\">{`queue_publisher.xml`}</li>\n    </ul>\n    <p>{`More information can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"configuration.md\"\n      }}>{`Configure message queues`}</a>{`.`}</p>\n    <p>{`Asynchronous and Bulk APIs are built on top of the usual REST API and use the Message Queue Framework for processing messages. To ease development efforts, the Asynchronous API pre-generates the following configuration files:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`communication.xml`}</li>\n      <li parentName=\"ul\">{`queue_publisher.xml`}</li>\n    </ul>\n    <p>{`and provides the `}<inlineCode parentName=\"p\">{`queue_topology.xml`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`queue_consumer.xml`}</inlineCode>{` files within the `}<inlineCode parentName=\"p\">{`Magento/WebapiAsync`}</inlineCode>{` module.`}</p>\n    <h2 {...{\n      \"id\": \"communicationxml\"\n    }}>{`communication.xml`}</h2>\n    <p>{`Information about the auto-generation of `}<inlineCode parentName=\"p\">{`communication.xml`}</inlineCode>{` can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"async-topics.md\"\n      }}>{`Topics in Asynchronous API`}</a></p>\n    <h2 {...{\n      \"id\": \"queue_publisherxml\"\n    }}>{`queue_publisher.xml`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`queue_publisher.xml`}</inlineCode>{` file is generated by the `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\WebapiAsync\\\\Code\\\\Generator\\\\Config\\\\RemoteServiceReader\\\\Publisher`}</inlineCode>{` class, which implements `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\Config\\\\ReaderInterface`}</inlineCode>{` and is injected into the `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\MessageQueue\\\\Publisher\\\\Config\\\\CompositeReader`}</inlineCode>{` constructor argument in the main `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<type name=\"Magento\\\\Framework\\\\MessageQueue\\\\Publisher\\\\Config\\\\CompositeReader\">\n    <arguments>\n        <argument name=\"readers\" xsi:type=\"array\">\n            <item name=\"asyncServiceReader\" xsi:type=\"object\" sortOrder=\"0\">Magento\\\\WebapiAsync\\\\Code\\\\Generator\\\\Config\\\\RemoteServiceReader\\\\Publisher</item>\n            ...\n        </argument>\n    </arguments>\n</type>\n`}</code></pre>\n    <p>{`The sort order is set to 0 and allows developers to change some aspects of the generated configuration in configuration readers such as `}<inlineCode parentName=\"p\">{`queue_publisher.xml`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`env.php`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`\\\\Magento\\\\WebapiAsync\\\\Code\\\\Generator\\\\Config\\\\RemoteServiceReader\\\\Publisher::read()`}</inlineCode>{` calls `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\AsynchronousOperations\\\\Model\\\\ConfigInterface::getServices()`}</inlineCode>{` to get an array of all REST API routes which can be executed asynchronously. Then it defines the connection name as `}<inlineCode parentName=\"p\">{`amqp`}</inlineCode>{` and the exchange as `}<inlineCode parentName=\"p\">{`magento`}</inlineCode>{` for each generated topic name.`}</p>\n    <h2 {...{\n      \"id\": \"queue_consumerxml\"\n    }}>{`queue_consumer.xml`}</h2>\n    <p>{`The asynchronous/bulk API has one defined consumer which processes all asynchronous/bulk APIs messages.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<consumer name=\"async.operations.all\" queue=\"async.operations.all\" connection=\"amqp\"\n              consumerInstance=\"Magento\\\\AsynchronousOperations\\\\Model\\\\MassConsumer\"/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"queue_topologyxml\"\n    }}>{`queue_topology.xml`}</h3>\n    <p>{`The message queue topology configuration links all auto-generated topic names with prefix `}<inlineCode parentName=\"p\">{`async.`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`magento`}</inlineCode>{` exchange and defines the queue named `}<inlineCode parentName=\"p\">{`async.operations.all`}</inlineCode>{` as the destination for all messages.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<exchange name=\"magento\" connection=\"amqp\">\n    <binding id=\"async.operations.all\" topic=\"async.#\" destination=\"async.operations.all\"/>\n</exchange>\n`}</code></pre>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Message queues connection is defined dynamically based on deployment configuration in `}<inlineCode parentName=\"p\">{`env.php`}</inlineCode>{`. If AMQP is configured in deployment configuration of the queue, AMQP connection is used. Otherwise, db connection is used.\nAs a result, if AMQP is configured in deployment configuration of the queue, connection declaration can be omitted in `}<a parentName=\"p\" {...{\n        \"href\": \"./configuration.md\"\n      }}>{`message queue configuration files`}</a>{`: `}<inlineCode parentName=\"p\">{`queue_customer.xml`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`queue_publisher.xml`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`queue_topology.xml`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}