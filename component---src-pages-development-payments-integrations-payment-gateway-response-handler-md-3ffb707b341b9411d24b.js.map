{"version":3,"file":"component---src-pages-development-payments-integrations-payment-gateway-response-handler-md-3ffb707b341b9411d24b.js","mappings":"yRASaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAI5E,SAAC,UAAD,CAAMA,QAAQ,UACd,eACE,GAAM,oBADR,qBAGA,iJACA,qFACA,oBACE,eAAIC,WAAW,OACb,cAAGA,WAAW,MAAd,eAAkC,cAAGA,WAAW,IAC5C,KAAQ,6CADsB,mBAIpC,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,kEAEF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,oBAGJ,uFAAwE,cAAGA,WAAW,IAClF,KAAQ,gDAD4D,mBAAxE,+DAGA,eACE,GAAM,aADR,cAGA,gEAAiD,cAAGA,WAAW,IAC3D,KAAQ,gHACP,uBAAYA,WAAW,KAAvB,4DACL,eACE,GAAM,0BADR,2BAGA,mBAAG,uBAAYA,WAAW,KAAvB,uDAAH,wFACA,eACE,GAAM,WADR,YAGA,4DAA6C,cAAGA,WAAW,IACvD,KAAQ,sHACP,uBAAYA,WAAW,KAAvB,yEAFL,OAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,mmCA0CL,8MAGH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/payments-integrations/payment-gateway/response-handler.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Docs from '/src/pages/_includes/braintree-note.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Docs mdxType=\"Docs\" />\n    <h1 {...{\n      \"id\": \"response-handler\"\n    }}>{`Response Handler`}</h1>\n    <p>{`Response Handler is a component of the Adobe Commerce payment provider gateway, that processes payment provider responses.`}</p>\n    <p>{`Typically, the response requires one of the following actions:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Modify the `}<a parentName=\"p\" {...{\n            \"href\": \"https://glossary.magento.com/order-status\"\n          }}>{`order status`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Save information that was provided in a transaction response`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Send an email`}</p>\n      </li>\n    </ul>\n    <p>{`The response handler only modifies the order state, based on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/payment-gateway\"\n      }}>{`payment gateway`}</a>{` response. It does not perform any other required actions.`}</p>\n    <h2 {...{\n      \"id\": \"interface\"\n    }}>{`Interface`}</h2>\n    <p>{`Basic interface for a response handler is `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/tree/2.4/app/code/Magento/Payment/Gateway/Response/HandlerInterface.php\"\n      }}><inlineCode parentName=\"a\">{`Magento\\\\Payment\\\\Gateway\\\\Response\\\\HandlerInterface`}</inlineCode></a></p>\n    <h3 {...{\n      \"id\": \"useful-implementations\"\n    }}>{`Useful implementations`}</h3>\n    <p><inlineCode parentName=\"p\">{`\\\\Magento\\\\Payment\\\\Gateway\\\\Response\\\\HandlerChain`}</inlineCode>{` might be used as a basic container of response handlers, handling different parts.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <p>{`Example of a simple response handler (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/tree/2.3/app/code/Magento/Braintree/Gateway/Response/PayPalDetailsHandler.php\"\n      }}><inlineCode parentName=\"a\">{`app/code/Magento/Braintree/Gateway/Response/PayPalDetailsHandler.php`}</inlineCode></a>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`class PayPalDetailsHandler implements HandlerInterface\n{\n    const PAYMENT_ID = 'paymentId';\n\n    const PAYER_EMAIL = 'payerEmail';\n\n    /**\n     * @var SubjectReader\n     */\n    private $subjectReader;\n\n    /**\n     * Constructor\n     *\n     * @param SubjectReader $subjectReader\n     */\n    public function __construct(SubjectReader $subjectReader)\n    {\n        $this->subjectReader = $subjectReader;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public function handle(array $handlingSubject, array $response)\n    {\n        $paymentDO = $this->subjectReader->readPayment($handlingSubject);\n\n        /** @var \\\\Braintree\\\\Transaction $transaction */\n        $transaction = $this->subjectReader->readTransaction($response);\n\n        /** @var OrderPaymentInterface $payment */\n        $payment = $paymentDO->getPayment();\n\n        $payPal = $this->subjectReader->readPayPal($transaction);\n        $payment->setAdditionalInformation(self::PAYMENT_ID, $payPal[self::PAYMENT_ID]);\n        $payment->setAdditionalInformation(self::PAYER_EMAIL, $payPal[self::PAYER_EMAIL]);\n    }\n}\n`}</code></pre>\n    <p>{`(The code sample is from Magento Open Source v2.1. Although the payment provider gateway was added in v2.0, the particular default implementation using the gateway were added in v2.1).`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}