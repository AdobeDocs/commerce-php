{"version":3,"file":"component---src-pages-development-cache-page-public-content-md-0297f5956219ddd52882.js","mappings":"oMAWsBA,E,mFAFTC,EAAe,GAOtBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,kBADR,mBAGA,mNACA,eACE,GAAM,WADR,YAGA,0KAEA,2BAAY,uBAAYC,WAAW,KAAvB,OAAZ,SAAoE,uBAAYA,WAAW,KAAvB,QAApE,4BACA,eACE,GAAM,6BADR,8BAGA,4BAAa,uBAAYA,WAAW,KAAvB,qBAAb,+DACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,8HAIL,0HACA,SAACV,EAAD,CAAaW,QAAQ,UAAUC,MAAM,OAAOH,QAAQ,iBACpD,4BAAa,uBAAYC,WAAW,KAAvB,qBAAb,gBAA0F,uBAAYA,WAAW,KAAvB,eAA1F,sDACA,8JAEA,eACE,GAAM,2BADR,4BAGA,gIACA,4BACE,cAAGA,WAAW,cAAd,aAEF,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,q7BAqCL,eACE,GAAM,6BADR,8BAGA,6DAA8C,cAAGA,WAAW,IACxD,KAAQ,oCADkC,OAA9C,qGAEqH,eAAIA,WAAW,KAAf,UAFrH,6HAGA,oBACE,eAAIA,WAAW,MAAf,gCACA,eAAIA,WAAW,MAAf,oKAEF,qEAAsD,eAAIA,WAAW,KAAf,0BAAtD,oGACA,oBACE,eAAIA,WAAW,MAAf,mBACA,eAAIA,WAAW,MAAf,sBACA,eAAIA,WAAW,MAAf,mBACA,eAAIA,WAAW,MAAf,sBACA,eAAIA,WAAW,MAAf,4CAEF,sQACA,uFAAwE,uBAAYA,WAAW,KAAvB,2DAAxE,oEACA,gRACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,s9BAkCL,0BAAW,uBAAYA,WAAW,KAAvB,qBAAX,oKAA4O,uBAAYA,WAAW,KAAvB,kBAA5O,aACA,kEAAmD,cAAGA,WAAW,IAC7D,KAAQ,oGADuC,sCAAnD,MAGA,eACE,GAAM,0BACL,uBAAYA,WAAW,MAAvB,kBAFH,YAGA,8BAAe,uBAAYA,WAAW,KAAvB,kBAAf,uKAAgP,cAAGA,WAAW,IAC1P,KAAQ,oGADoO,sCAAhP,yBAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,yLASL,eACE,GAAM,6BADR,8BAGA,4GAA6F,uBAAYA,WAAW,KAAvB,qBAA7F,qGAA+P,cAAGA,WAAW,IACzQ,KAAQ,uCADmP,UAA/P,cAGA,wHACA,yCAA0B,cAAGA,WAAW,IACpC,KAAQ,uCADc,UAA1B,oBAEuC,cAAGA,WAAW,IACjD,KAAQ,iHACP,uBAAYA,WAAW,KAAvB,mDAJL,iBAKA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,gfA2BL,mEAAoD,uBAAYA,WAAW,KAAvB,kDAApD,iBACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,+bAuBL,kXACA,SAACV,EAAD,CAAaW,QAAQ,UAAUC,MAAM,OAAOH,QAAQ,iBACpD,wTAAyS,cAAGC,WAAW,IACnT,KAAQ,2DAD6R,yBAIzS,SAAC,UAAD,CAAMD,QAAQ,UAKlBF,EAAWM,gBAAiB","sources":["webpack://commerce-php/./src/pages/development/cache/page/public-content.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Docs from '/src/pages/_includes/page-cache-checklist.md';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"public-content\"\n    }}>{`Public content`}</h1>\n    <p>{`By default, all pages in Adobe Commerce and Magento Open Source are cacheable, but you can disable caching if necessary (e.g., payment method return page, debug page, or AJAX data source).`}</p>\n    <h2 {...{\n      \"id\": \"caching\"\n    }}>{`Caching`}</h2>\n    <p>{`If you need to refresh data every second consider using a cache.\nRequesting content from the cache is faster than generating it for every request.`}</p>\n    <p>{`Only `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`HEAD`}</inlineCode>{` methods are cacheable.`}</p>\n    <h3 {...{\n      \"id\": \"disable-or-enable-caching\"\n    }}>{`Disable or enable caching`}</h3>\n    <p>{`Add a `}<inlineCode parentName=\"p\">{`cacheable=\"false\"`}</inlineCode>{` attribute to any block in your layout to disable caching:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<block class=\"Magento\\\\Paypal\\\\Block\\\\Payflow\\\\Link\\\\Iframe\" template=\"payflowlink/redirect.phtml\" cacheable=\"false\"/>\n`}</code></pre>\n    <p>{`The application disables page caching if at least one non-cacheable block is present in the layout.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Using `}<inlineCode parentName=\"p\">{`cacheable=\"false\"`}</inlineCode>{` inside the `}<inlineCode parentName=\"p\">{`default.xml`}</inlineCode>{` file disables caching for all pages on the site.`}</p>\n    <p>{`You can also disable caching with HTTP headers.\nUse a controller to return an object that contains methods for manipulating the cache.`}</p>\n    <h3 {...{\n      \"id\": \"define-caching-behavior\"\n    }}>{`Define caching behavior`}</h3>\n    <p>{`You can use the Admin to define caching policies or you can define them programmatically in a controller:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Example`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n/**\n * Copyright © Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nuse Magento\\\\Framework\\\\App\\\\Action\\\\Action;\nuse Magento\\\\Framework\\\\App\\\\Action\\\\Context;\nuse Magento\\\\Framework\\\\View\\\\Result\\\\PageFactory;\n\nclass DynamicController extends Action\n{\n    protected $pageFactory;\n\n    public function __construct(\n        Context $context,\n        PageFactory $resultPageFactory\n    ) {\n        parent::__construct($context);\n        $this->pageFactory = $resultPageFactory;\n    }\n\n    /**\n     * This action render random number for each request\n     */\n    public function execute()\n    {\n        $page = $this->pageFactory->create();\n        //We are using HTTP headers to control various page caches (varnish, fastly, built-in php cache)\n        $page->setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, max-age=0', true);\n\n        return $page;\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"configure-page-variations\"\n    }}>{`Configure page variations`}</h2>\n    <p>{`Most caching servers and proxies use a `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/url\"\n      }}>{`URL`}</a>{` as a key for cache records. However, Adobe Commerce and Magento Open Source URLs are not unique `}<em parentName=\"p\">{`enough`}</em>{` to allow caching by URL only. Cookie and session data in the URL can also lead to undesirable side effects,  including:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Collisions in cache storage`}</li>\n      <li parentName=\"ul\">{`Unwanted information leaks (e.g., French language website partially visible on an English language website, prices for customer group visible in public, etc.)`}</li>\n    </ul>\n    <p>{`To make each cached URL totally unique, we use `}<em parentName=\"p\">{`HTTP context variables`}</em>{`. Context variables enable the application to serve different content on the same URL based on:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Customer group`}</li>\n      <li parentName=\"ul\">{`Selected language`}</li>\n      <li parentName=\"ul\">{`Selected store`}</li>\n      <li parentName=\"ul\">{`Selected currency`}</li>\n      <li parentName=\"ul\">{`Whether a customer is logged in or not`}</li>\n    </ul>\n    <p>{`Context variables should not be specific to individual users because variables are used in cache keys for public content. In other words, a context variable per user results in a separate copy of content cached on the server for each user.`}</p>\n    <p>{`The application generates a hash based on all context variables (`}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\App\\\\Http\\\\Context::getVaryString`}</inlineCode>{`). The hash and current URL are used as keys for cache storage.`}</p>\n    <p>{`For example, let's declare a context variable that shows a drinks catalog and advertisement to adult customers only. The following code snippet will create a copy of every page in Adobe Commerce and Magento Open Source for users under the age of 18.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n/**\n * Copyright © Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nuse Magento\\\\Customer\\\\Model\\\\Session;\nuse Magento\\\\Framework\\\\App\\\\Http\\\\Context;\n\n/**\n * Plugin on \\\\Magento\\\\Framework\\\\App\\\\Http\\\\Context\n */\nclass CustomerAgeContextPlugin\n{\n    public function __construct(\n        Session $customerSession\n    ) {\n        $this->customerSession = $customerSession;\n    }\n    /**\n     * \\\\Magento\\\\Framework\\\\App\\\\Http\\\\Context::getVaryString is used to retrieve unique identifier for selected context,\n     * so this is a best place to declare custom context variables\n     */\n    public function beforeGetVaryString(Context $subject)\n    {\n        $age = $this->customerSession->getCustomerData()->getCustomAttribute('age');\n        $defaultAgeContext = 0;\n        $ageContext = $age >= 18 ? 1 : $defaultAgeContext;\n        $subject->setValue('CONTEXT_AGE', $ageContext, $defaultAgeContext);\n    }\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`subject->setValue`}</inlineCode>{` argument specifies the value for newcomer context and is used to guarantee parity during cache key generation for newcomers and users who already received the `}<inlineCode parentName=\"p\">{`X-Magento-Vary`}</inlineCode>{` cookie.`}</p>\n    <p>{`For another example of a context class, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/App/Http/Context.php\"\n      }}>{`Magento/Framework/App/Http/Context`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"x-magento-vary-cookie\"\n    }}><inlineCode parentName=\"h3\">{`X-Magento-Vary`}</inlineCode>{` cookie`}</h3>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`X-Magento-Vary`}</inlineCode>{` cookie to transfer context on the HTTP layer. HTTP proxies can be configured to calculate a unique identifier for cache based on the cookie and URL. For example, `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/PageCache/etc/varnish4.vcl#L63-L68\"\n      }}>{`our sample Varnish 4 configuration`}</a>{` uses the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-conf\"\n      }}>{`sub vcl_hash {\n    if (req.http.cookie ~ \"X-Magento-Vary=\") {\n        hash_data(regsub(req.http.cookie, \"^.*?X-Magento-Vary=([^;]+);*.*$\", \"\\\\1\"));\n    }\n    ... more ...\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"invalidate-public-content\"\n    }}>{`Invalidate public content`}</h2>\n    <p>{`You can clear cached content immediately after a entity changes. The application uses `}<inlineCode parentName=\"p\">{`IdentityInterface`}</inlineCode>{` to link entities in the application with cached content and to know what cache to clear when an `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/entity\"\n      }}>{`entity`}</a>{` changes.`}</p>\n    <p>{`This section shows you how to tell the application what cache to clear when you change an entity.`}</p>\n    <p>{`First, your entity `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/module\"\n      }}>{`module`}</a>{` must implement `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/DataObject/IdentityInterface.php\"\n      }}><inlineCode parentName=\"a\">{`Magento/Framework/DataObject/IdentityInterface`}</inlineCode></a>{` as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n/**\n * Copyright © Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nuse Magento\\\\Framework\\\\DataObject\\\\IdentityInterface;\n\nclass Product implements IdentityInterface\n{\n     /**\n      * Product cache tag\n      */\n     const CACHE_TAG = 'catalog_product';\n    /**\n     * Get identities\n     *\n     * @return array\n     */\n    public function getIdentities()\n    {\n         return [self::CACHE_TAG . '_' . $this->getId()];\n    }\n}\n`}</code></pre>\n    <p>{`Second, the block object must also implement `}<inlineCode parentName=\"p\">{`Magento/Framework/DataObject/IdentityInterface`}</inlineCode>{` as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n/**\n * Copyright © Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nuse Magento\\\\Framework\\\\DataObject\\\\IdentityInterface;\n\nclass View extends AbstractProduct implements IdentityInterface\n{\n    /**\n     * Return identifiers for produced content\n     *\n     * @return array\n     */\n    public function getIdentities()\n    {\n        return $this->getProduct()->getIdentities();\n    }\n}\n`}</code></pre>\n    <p>{`Adobe Commerce and Magento Open Source use cache tags for link creation. The performance of cache storage has a direct dependency on the number of tags per cache record, so try to minimize the number of tags and use them only for entities that are used in production mode. In other words, don't use invalidation for actions related to store setup.`}</p>\n    <InlineAlert variant=\"warning\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`Use only HTTP POST or PUT methods to change state (e.g., adding to a shopping cart, adding to a wishlist, etc.) and don't expect to see caching on these methods. Using GET or HEAD methods might trigger caching and prevent updates to private content. For more information about caching, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html\"\n      }}>{`RFC-2616 section 13`}</a></p>\n\n    <Docs mdxType=\"Docs\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}