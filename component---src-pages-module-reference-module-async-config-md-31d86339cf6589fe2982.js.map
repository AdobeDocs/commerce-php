{"version":3,"file":"component---src-pages-module-reference-module-async-config-md-31d86339cf6589fe2982.js","mappings":"qRAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,eACH,gBACL,kBAAK,QAAM,eAAIC,WAAW,KAAM,eAAoB,4IACpD,kBAAK,wBACL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,KAAkB,QAAM,eAAIA,WAAW,MAAO,iBAAsB,4FACtH,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAO,KAAkB,oEAEtE,kBAAK,mCAAiC,uBAAYA,WAAW,KAAM,gBAA6B,qBAAmB,uBAAYA,WAAW,KAAM,WAAwB,wBACxK,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,yEAKP,kBAAK,8EACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,qDAEP,SAACX,EAAD,CAAaY,MAAM,OAAOF,QAAQ,gBAzB7B,yCA6BR,CAEDF,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/module-reference/module-async-config.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"asyncconfig\"\n    }}>{`AsyncConfig`}</h1>\n    <p>{`The `}<em parentName=\"p\">{`AsyncConfig`}</em>{` module enables admin config save asynchronously, which saves configuration in a queue, and processes it in a first-in-first-out basis.`}</p>\n    <p>{`AsyncConfig values:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`0`}</inlineCode>{` — (`}<em parentName=\"li\">{`Default value`}</em>{`) Disable the AsyncConfig module and use the standard synchronous configuration save.  `}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`1`}</inlineCode>{` — Enable the AsyncConfig module for asynchronous config save.`}</li>\n    </ul>\n    <p>{`To enable AsyncConfig, set the `}<inlineCode parentName=\"p\">{`config/async`}</inlineCode>{` variable in the `}<inlineCode parentName=\"p\">{`env.php`}</inlineCode>{` file. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n      'config' => [\n               'async' => 1\n       ]\n`}</code></pre>\n    <p>{`Alternatively, you can set the variable using the command-line interface:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento setup:config:set --config-async 1\n`}</code></pre>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\nThe version of this module is 100.4.0.\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}