{"version":3,"file":"component---src-pages-tutorials-custom-checkout-add-new-step-md-be2a93f6916cd7eb8b72.js","mappings":"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","sources":["webpack://commerce-php/./src/pages/tutorials/custom-checkout/add-new-step.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-a-new-checkout-step\"\n    }}>{`Add a new checkout step`}</h1>\n    <p>{`This topic describes how to create the `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/frontend\"\n      }}>{`frontend`}</a>{` part of the component, implementing a checkout step, and how to add it to the checkout flow.`}</p>\n    <p>{`The default `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/checkout\"\n      }}>{`Checkout`}</a>{` consists of two steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Shipping Information`}</li>\n      <li parentName=\"ul\">{`Review and Payments Information`}</li>\n    </ul>\n    <p>{`You can add a custom checkout step, it should be implemented as a `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/ui-component\"\n      }}>{`UI component`}</a>{`. For the sake of compatibility, upgradability and easy maintenance, do not edit the default application code, add your customizations in a separate `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/module\"\n      }}>{`module`}</a>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-1-create-the-view-part-of-the-checkout-step-component\"\n        }}>{`Create the view part of the checkout step component`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-2-add-your-step-to-the-checkout-page-layout\"\n        }}>{`Add your step to the Checkout page layout`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-3-create-mixins-for-payment-and-shipping-steps-optional\"\n        }}>{`Create mixins for payment and shipping steps (optional)`}</a>{`.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"step-1-create-the-view-part-of-the-checkout-step-component\"\n    }}>{`Step 1: Create the view part of the checkout step component`}</h2>\n    <p>{`To create the view part of the new checkout step:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Add a module directory (not covered in this topic). See `}<a parentName=\"li\" {...{\n          \"href\": \"../../development/build/index.md\"\n        }}>{`Build your module`}</a>{` for details). All custom files must be stored there. For your checkout customization to be applied correctly, your custom module should depend on the `}<inlineCode parentName=\"li\">{`Magento_Checkout`}</inlineCode>{` module. Do not use `}<inlineCode parentName=\"li\">{`Ui`}</inlineCode>{` for your custom module name, because `}<inlineCode parentName=\"li\">{`%Vendor%_Ui`}</inlineCode>{` notation, required when specifying paths, might cause issues.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#add-the-javascript-file-implementing-the-new-step\"\n        }}>{`Create the `}<inlineCode parentName=\"a\">{`.js`}</inlineCode>{` file implementing the view model`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#add-the-html-template\"\n        }}>{`Create a `}<inlineCode parentName=\"a\">{`.html`}</inlineCode>{` template for the component`}</a>{`.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"add-the-javascript-file-implementing-the-new-step\"\n    }}>{`Add the JavaScript file implementing the new step`}</h3>\n    <p>{`A new checkout step must be implemented as UI component. That is, its `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/javascript\"\n      }}>{`JavaScript`}</a>{` implementation must be a JavaScript module.`}</p>\n    <p>{`The file must be stored under the `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/web/js/view`}</inlineCode>{` directory.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p><inlineCode parentName=\"p\">{`<your_module_dir>`}</inlineCode>{` notation stands for the path to your module directory from the root directory. Usually it will be one of the following: `}<inlineCode parentName=\"p\">{`app/code/<YourVendor>/<YourModule>`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`vendor/<yourvendor>/module-<module>-<name>`}</inlineCode>{`. For more details see `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/frontend-dev-guide/conventions.html\"\n      }}>{`Conventional notations for paths to modules and themes`}</a></p>\n    <p>{`A sample `}<inlineCode parentName=\"p\">{`my-step-view.js`}</inlineCode>{` with comments follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`define([\n    'ko',\n    'uiComponent',\n    'underscore',\n    'Magento_Checkout/js/model/step-navigator'\n], function (ko, Component, _, stepNavigator) {\n    'use strict';\n\n    /**\n     * mystep - is the name of the component's .html template,\n     * <Vendor>_<Module>  - is the name of your module directory.\n     */\n    return Component.extend({\n        defaults: {\n            template: '<Vendor>_<Module>/mystep'\n        },\n\n        // add here your logic to display step,\n        isVisible: ko.observable(true),\n\n        /**\n         * @returns {*}\n         */\n        initialize: function () {\n            this._super();\n\n            // register your step\n            stepNavigator.registerStep(\n                // step code will be used as step content id in the component template\n                'step_code',\n                // step alias\n                null,\n                // step title value\n                'Step Title',\n                // observable property with logic when display step or hide step\n                this.isVisible,\n\n                _.bind(this.navigate, this),\n\n                /**\n                 * sort order value\n                 * 'sort order value' < 10: step displays before shipping step;\n                 * 10 < 'sort order value' < 20 : step displays between shipping and payment step\n                 * 'sort order value' > 20 : step displays after payment step\n                 */\n                15\n            );\n\n            return this;\n        },\n\n        /**\n         * The navigate() method is responsible for navigation between checkout steps\n         * during checkout. You can add custom logic, for example some conditions\n         * for switching to your custom step\n         * When the user navigates to the custom step via url anchor or back button we_must show step manually here\n         */\n        navigate: function () {\n            this.isVisible(true);\n        },\n\n        /**\n         * @returns void\n         */\n        navigateToNextStep: function () {\n            stepNavigator.next();\n        }\n    });\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"add-the-html-template\"\n    }}>{`Add the .html template`}</h3>\n    <p>{`In the module directory, add the `}<inlineCode parentName=\"p\">{`.html`}</inlineCode>{` template for the component. It must be located under the `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/web/template`}</inlineCode>{` directory.`}</p>\n    <p>{`A sample `}<inlineCode parentName=\"p\">{`mystep.html`}</inlineCode>{` follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!--The 'step_code' value from the .js file should be used-->\n<li id=\"step_code\" data-bind=\"fadeVisible: isVisible\">\n    <div class=\"step-title\" data-bind=\"i18n: 'Step Title'\" data-role=\"title\"></div>\n    <div id=\"checkout-step-title\"\n         class=\"step-content\"\n         data-role=\"content\">\n\n        <form data-bind=\"submit: navigateToNextStep\" novalidate=\"novalidate\">\n            <div class=\"actions-toolbar\">\n                <div class=\"primary\">\n                    <button data-role=\"opc-continue\" type=\"submit\" class=\"button action continue primary\">\n                        <span><!-- ko i18n: 'Next'--><!-- /ko --></span>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</li>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-2-add-your-step-to-the-checkout-page-layout\"\n    }}>{`Step 2: Add your step to the Checkout page layout`}</h2>\n    <p>{`For the new step to be displayed on the page, you need to declare it in the Checkout page layout, which is defined in `}<inlineCode parentName=\"p\">{`checkout_index_index.xml`}</inlineCode>{`.`}</p>\n    <p>{`So you need to add an `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/frontend-dev-guide/layouts/layout-extend.html\"\n      }}>{`extending`}</a>{` `}<inlineCode parentName=\"p\">{`checkout_index_index.xml`}</inlineCode>{` layout file in the following location: `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/layout/checkout_index_index.xml`}</inlineCode></p>\n    <p>{`A sample `}<inlineCode parentName=\"p\">{`checkout_index_index.xml`}</inlineCode>{` follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"1column\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n    <body>\n        <referenceBlock name=\"checkout.root\">\n            <arguments>\n                <argument name=\"jsLayout\" xsi:type=\"array\">\n                    <item name=\"components\" xsi:type=\"array\">\n                        <item name=\"checkout\" xsi:type=\"array\">\n                            <item name=\"children\" xsi:type=\"array\">\n                                <item name=\"steps\" xsi:type=\"array\">\n                                    <item name=\"children\" xsi:type=\"array\">\n                                        <!-- The new step you add -->\n                                        <item name=\"my-new-step\" xsi:type=\"array\">\n                                            <item name=\"component\" xsi:type=\"string\">%Vendor%_%Module%/js/view/my-step-view</item>\n                                            <!--To display step content before shipping step \"sortOrder\" value should be < 1-->\n                                            <!--To display step content between shipping step and payment step  1 < \"sortOrder\" < 2 -->\n                                            <!--To display step content after payment step \"sortOrder\" > 2 -->\n                                            <item name=\"sortOrder\" xsi:type=\"string\">2</item>\n                                            <item name=\"children\" xsi:type=\"array\">\n                                                <!--add here child component declaration for your step-->\n                                            </item>\n                                        </item>\n                                    </item>\n                                </item>\n                            </item>\n                        </item>\n                    </item>\n                </argument>\n            </arguments>\n        </referenceBlock>\n    </body>\n</page>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-3-create-mixins-for-payment-and-shipping-steps-optional\"\n    }}>{`Step 3: Create mixins for payment and shipping steps (optional)`}</h2>\n    <p>{`If your new step is the first step, you have to create mixins for the payment and shipping steps. Otherwise, two steps will be activated on the loading of the checkout.`}</p>\n    <p>{`Create a mixin as follows:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a `}<inlineCode parentName=\"p\">{`Vendor/Module/view/base/requirejs-config.js`}</inlineCode>{` file with these contents;`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`var config = {\n    'config': {\n        'mixins': {\n           'Magento_Checkout/js/view/shipping': {\n               'Vendor_Module/js/view/shipping-payment-mixin': true\n           },\n           'Magento_Checkout/js/view/payment': {\n               'Vendor_Module/js/view/shipping-payment-mixin': true\n           }\n       }\n    }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create the mixin. We'll use the same mixin for both payment and shipping:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`define([\n    'ko'\n], function (ko) {\n    'use strict';\n\n    var mixin = {\n\n        initialize: function () {\n            // set visible to be initially false to have your step show first\n            this.visible = ko.observable(false);\n            this._super();\n\n            return this;\n        }\n    };\n\n    return function (target) {\n        return target.extend(mixin);\n    };\n});\n`}</code></pre>\n      </li>\n    </ol>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`For your changes to be applied, you might need to `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/config-guide/cli/config-cli-subcommands-cache.html\"\n      }}>{`clean layout cache`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/frontend-dev-guide/cache_for_frontdevs.html#clean_static_cache\"\n      }}>{`static view file cache`}</a>{`. For more info on mixins, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://devdocs.magento.com/guides/v2.4/javascript-dev-guide/javascript/js_mixins.html\"\n      }}>{`JS Mixins`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}