{"version":3,"file":"component---src-pages-architecture-layers-persistence-md-5a1a195997c88e42b945.js","mappings":"+QAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,qBADR,sBAGA,oMAAqL,eAAIC,WAAW,KAAf,kBAArL,yHACA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,yIAEF,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAd,8LAGJ,yJAA0I,eAAIA,WAAW,KAAf,cAA1I,wIAAwT,uBAAYA,WAAW,KAAvB,SAAxT,aACA,yFACA,kNAAmM,mBAAQA,WAAW,KAAnB,gCAAnM,aACA,uHACA,0BAAW,uBAAYA,WAAW,KAAvB,YAAX,MAAqE,uBAAYA,WAAW,KAAvB,WAArE,SAAiI,uBAAYA,WAAW,KAAvB,SAAjI,yCACA,eACE,GAAM,0BADR,2BAGA,mYAIA,8CAA+B,cAAGA,WAAW,IACzC,KAAQ,qGADmB,2BAA/B,KAKH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/architecture/layers/persistence.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"persistence-layer\"\n    }}>{`Persistence layer`}</h1>\n    <p>{`The Adobe Commerce and Magento Open Source framework (Commerce framework) uses an active record pattern strategy for persistence. In this system, the model object contains a `}<em parentName=\"p\">{`resource model`}</em>{` that maps an object to one or more database rows. A resource model is responsible for performing functions such as:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Executing all CRUD (create, read, update, delete) requests. The resource model contains the SQL code for completing these requests.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Performing additional business logic. For example, a resource model could perform data validation, start processes before or after data is saved, or perform other database operations.`}</p>\n      </li>\n    </ul>\n    <p>{`If you expect to return multiple items from a database query, then you would implement a special type of resource model known as a `}<em parentName=\"p\">{`collection`}</em>{`. A collection is a class that loads multiple models into an array-like structure based on a set of rules. This is similar to a SQL `}<inlineCode parentName=\"p\">{`WHERE`}</inlineCode>{` clause.`}</p>\n    <p>{`A simple resource model defines and interacts with a single table.`}</p>\n    <p>{`However, some objects have a vast number of attributes, or they could have a set related objects that have varying numbers of attributes. In these cases, the objects are constructed using `}<strong parentName=\"p\">{`Entity-Attribute-Value (EAV)`}</strong>{` models.`}</p>\n    <p>{`Any model that uses an EAV resource has its attributes spread out over a number of MySQL tables.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Customer`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Catalog`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Order`}</inlineCode>{` resource models use EAV attributes.`}</p>\n    <h2 {...{\n      \"id\": \"xml-declarative-schema\"\n    }}>{`XML Declarative schema`}</h2>\n    <p>{`With Adobe Commerce and Magento Open Source 2.3, we introduced Declarative XML Schemas.\nThese are XML files that are used to specify the final state of the database.\nThese files replace PHP update scripts that were required when upgrading a module.\nThese files allow you to skip the progressive upgrade scripts and jump right to the final state of the database.`}</p>\n    <p>{`Read more about writing `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/commerce/php/development/components/declarative-schema/configuration/\"\n      }}>{`declarative XML schemas`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}