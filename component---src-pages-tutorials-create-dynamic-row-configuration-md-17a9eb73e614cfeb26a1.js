"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[47058],{5438:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return s},default:function(){return c}});var a=t(87462),o=t(63366),i=(t(15007),t(64983)),r=t(91515),l=["components"],s={},d={_frontmatter:s},m=r.Z;function c(e){var n=e.components,t=(0,o.Z)(e,l);return(0,i.mdx)(m,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"create-a-dynamic-row-system-configuration"},"Create a dynamic row system configuration"),(0,i.mdx)("p",null,"This tutorial shows you how to add a new dynamic rows system configuration in the ",(0,i.mdx)("a",{parentName:"p",href:"https://glossary.magento.com/magento-admin"},"Admin"),", by extending the ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4%7D/app/code/Magento/Config/Block/System/Config/Form/Field/FieldArray/AbstractFieldArray.php"},"Magento/Config/Block/System/Config/Form/Field/FieldArray/AbstractFieldArray")," class."),(0,i.mdx)("h2",{id:"step-1-add-a-new-system-field"},"Step 1: Add a new system field"),(0,i.mdx)("blockquote",null,(0,i.mdx)("p",{parentName:"blockquote"},(0,i.mdx)("inlineCode",{parentName:"p"},"etc/adminhtml/system.xml"))),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-xml"},'<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Config:etc/system_file.xsd">\n    <system>\n        <section id="general" type="text">\n            <group id="quantity_ranges" translate="label" type="text" sortOrder="10" showInDefault="1" showInWebsite="1" showInStore="1">\n                <label>Quantity Ranges</label>\n                <field id="ranges" translate="label" sortOrder="5" showInDefault="1" showInWebsite="1" showInStore="1">\n                    <label>Ranges</label>\n                    <frontend_model>Vendor\\Module\\Block\\Adminhtml\\Form\\Field\\Ranges</frontend_model>\n                    <backend_model>Magento\\Config\\Model\\Config\\Backend\\Serialized\\ArraySerialized</backend_model>\n                </field>\n            </group>\n        </section>\n    </system>\n</config>\n')),(0,i.mdx)("p",null,"This code adds a new system configuration in ",(0,i.mdx)("strong",{parentName:"p"},"STORES")," > Settings > ",(0,i.mdx)("strong",{parentName:"p"},"Configuration")," > GENERAL > ",(0,i.mdx)("strong",{parentName:"p"},"General")," > ",(0,i.mdx)("strong",{parentName:"p"},"Quantity Ranges"),"."),(0,i.mdx)("h2",{id:"step-2-create-the-block-class-to-describe-custom-field-columns"},"Step 2: Create the block class to describe custom field columns"),(0,i.mdx)("blockquote",null,(0,i.mdx)("p",{parentName:"blockquote"},(0,i.mdx)("inlineCode",{parentName:"p"},"File: app/code/Vendor/Module/Block/Adminhtml/Form/Field/Ranges.php"))),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-php"},"<?php\nnamespace Vendor\\Module\\Block\\Adminhtml\\Form\\Field;\n\nuse Magento\\Config\\Block\\System\\Config\\Form\\Field\\FieldArray\\AbstractFieldArray;\nuse Magento\\Framework\\DataObject;\nuse Magento\\Framework\\Exception\\LocalizedException;\nuse Vendor\\Module\\Block\\Adminhtml\\Form\\Field\\TaxColumn;\n\n/**\n * Class Ranges\n */\nclass Ranges extends AbstractFieldArray\n{\n    /**\n     * @var TaxColumn\n     */\n    private $taxRenderer;\n\n    /**\n     * Prepare rendering the new field by adding all the needed columns\n     */\n    protected function _prepareToRender()\n    {\n        $this->addColumn('from_qty', ['label' => __('From'), 'class' => 'required-entry']);\n        $this->addColumn('to_qty', ['label' => __('To'), 'class' => 'required-entry']);\n        $this->addColumn('price', ['label' => __('Price'), 'class' => 'required-entry']);\n        $this->addColumn('tax', [\n            'label' => __('Tax'),\n            'renderer' => $this->getTaxRenderer()\n        ]);\n        $this->_addAfter = false;\n        $this->_addButtonLabel = __('Add');\n    }\n\n    /**\n     * Prepare existing row data object\n     *\n     * @param DataObject $row\n     * @throws LocalizedException\n     */\n    protected function _prepareArrayRow(DataObject $row): void\n    {\n        $options = [];\n\n        $tax = $row->getTax();\n        if ($tax !== null) {\n            $options['option_' . $this->getTaxRenderer()->calcOptionHash($tax)] = 'selected=\"selected\"';\n        }\n\n        $row->setData('option_extra_attrs', $options);\n    }\n\n    /**\n     * @return TaxColumn\n     * @throws LocalizedException\n     */\n    private function getTaxRenderer()\n    {\n        if (!$this->taxRenderer) {\n            $this->taxRenderer = $this->getLayout()->createBlock(\n                TaxColumn::class,\n                '',\n                ['data' => ['is_render_to_js_template' => true]]\n            );\n        }\n        return $this->taxRenderer;\n    }\n}\n")),(0,i.mdx)("p",null,"This block prepares the desired columns for inclusion in the new configuration."),(0,i.mdx)("h2",{id:"step-3-create-the-block-class-to-describe-a-column-with-drop-down-input"},"Step 3: Create the block class to describe a column with drop-down input"),(0,i.mdx)("blockquote",null,(0,i.mdx)("p",{parentName:"blockquote"},(0,i.mdx)("inlineCode",{parentName:"p"},"File: app/code/Vendor/Module/Block/Adminhtml/Form/Field/TaxColumn.php"))),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-php"},"<?php\ndeclare(strict_types=1);\n\nnamespace Vendor\\Module\\Block\\Adminhtml\\Form\\Field;\n\nuse Magento\\Framework\\View\\Element\\Html\\Select;\n\nclass TaxColumn extends Select\n{\n    /**\n     * Set \"name\" for <select> element\n     *\n     * @param string $value\n     * @return $this\n     */\n    public function setInputName($value)\n    {\n        return $this->setName($value);\n    }\n\n    /**\n     * Set \"id\" for <select> element\n     *\n     * @param $value\n     * @return $this\n     */\n    public function setInputId($value)\n    {\n        return $this->setId($value);\n    }\n\n    /**\n     * Render block HTML\n     *\n     * @return string\n     */\n    public function _toHtml(): string\n    {\n        if (!$this->getOptions()) {\n            $this->setOptions($this->getSourceOptions());\n        }\n        return parent::_toHtml();\n    }\n\n    private function getSourceOptions(): array\n    {\n        return [\n            ['label' => 'Yes', 'value' => '1'],\n            ['label' => 'No', 'value' => '0'],\n        ];\n    }\n}\n")),(0,i.mdx)("p",null,"This block sets values for the drop-down option."),(0,i.mdx)("h2",{id:"step-4-set-default-values---optional"},"Step 4: Set default values - OPTIONAL"),(0,i.mdx)("p",null,"It is possible to set defaults for a dynamic row configuration, this is done by adding additional XML to the defaults block in the ",(0,i.mdx)("inlineCode",{parentName:"p"},"config.xml")," file for the module."),(0,i.mdx)("p",null,"Add a block to the ",(0,i.mdx)("inlineCode",{parentName:"p"},"<default>")," section of the ",(0,i.mdx)("inlineCode",{parentName:"p"},"config.xml")," file and do not include any values:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-xml"},"<general>\n    <quantity_ranges>\n        <ranges></ranges>\n    </quantity_ranges>\n</general>\n")),(0,i.mdx)("p",null,"For each complete line of configuration, create an XML block with a repeating node that has a different value to all the others and contains XML tags for each sub-option and value.\nFor example, you can use ",(0,i.mdx)("inlineCode",{parentName:"p"},"<item1>, <item2>"),"."),(0,i.mdx)("p",null,"The sub-options are the columns defined in the ",(0,i.mdx)("inlineCode",{parentName:"p"},"_prepareToRender()")," method as described in ",(0,i.mdx)("a",{parentName:"p",href:"#step-2-create-the-block-class-to-describe-custom-field-columns"},"Step 2"),"."),(0,i.mdx)("p",null,"In the following excerpt, a single row for ",(0,i.mdx)("inlineCode",{parentName:"p"},"item1")," contains 4 sub-options:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-xml"},"<item1>\n    <from_qty>5</from_qty>\n    <to_qty>6</to_qty>\n    <price>10.00</price>\n    <tax>1</tax>\n</item1>\n")),(0,i.mdx)("p",null,"Continue building the default block by adding 3 items to the ",(0,i.mdx)("inlineCode",{parentName:"p"},"ranges")," configuration option in the ",(0,i.mdx)("inlineCode",{parentName:"p"},"config.xml")," file:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-xml"},"<general>\n    <quantity_ranges>\n        <ranges>\n            <item1>\n                <from_qty>1</from_qty>\n                <to_qty>5</to_qty>\n                <price>10.00</price>\n                <tax>1</tax>\n            </item1>\n            <item2>\n                <from_qty>6</from_qty>\n                <to_qty>10</to_qty>\n                <price>20.00</price>\n                <tax>1</tax>\n            </item2>\n            <item3>\n                <from_qty>11</from_qty>\n                <to_qty>15</to_qty>\n                <price>30.00</price>\n                <tax>0</tax>\n            </item3>\n        </ranges>\n    </quantity_ranges>\n</general>\n")),(0,i.mdx)("p",null,"To verify the default values for the configuration are correct, do the following :"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Ensure that this configuration option has no entry in the database."),(0,i.mdx)("li",{parentName:"ul"},"Continue with Step 5")),(0,i.mdx)("h2",{id:"step-5-clean-cache"},"Step 5: Clean cache"),(0,i.mdx)("p",null,"Clean the cache with the following command:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-bash"},"bin/magento cache:clean\n")),(0,i.mdx)("p",null,"and clean the config with this command:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-bash"},"bin/magento cache:clean config\n")),(0,i.mdx)("h2",{id:"result"},"Result"),(0,i.mdx)("p",null,"The result is a new dynamic system row field in the Admin panel. If you have set optional default values, these should also appear."),(0,i.mdx)("p",null,(0,i.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"1280px"}},"\n      ",(0,i.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"37.5%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,i.mdx)("picture",{parentName:"span"},"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/commerce-php/static/0bb77db834c5b2c9cfae2e03bb318e97/cb523/dynamic-rows-config-result.webp 320w","/commerce-php/static/0bb77db834c5b2c9cfae2e03bb318e97/797b9/dynamic-rows-config-result.webp 640w","/commerce-php/static/0bb77db834c5b2c9cfae2e03bb318e97/4b075/dynamic-rows-config-result.webp 1280w","/commerce-php/static/0bb77db834c5b2c9cfae2e03bb318e97/8315d/dynamic-rows-config-result.webp 1730w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/webp"}),"\n          ",(0,i.mdx)("source",{parentName:"picture",srcSet:["/commerce-php/static/0bb77db834c5b2c9cfae2e03bb318e97/72799/dynamic-rows-config-result.png 320w","/commerce-php/static/0bb77db834c5b2c9cfae2e03bb318e97/6af66/dynamic-rows-config-result.png 640w","/commerce-php/static/0bb77db834c5b2c9cfae2e03bb318e97/21b4d/dynamic-rows-config-result.png 1280w","/commerce-php/static/0bb77db834c5b2c9cfae2e03bb318e97/27f8b/dynamic-rows-config-result.png 1730w"],sizes:"(max-width: 1280px) 100vw, 1280px",type:"image/png"}),"\n          ",(0,i.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/commerce-php/static/0bb77db834c5b2c9cfae2e03bb318e97/21b4d/dynamic-rows-config-result.png",alt:"Dynamic Rows System Config",title:"Dynamic Rows System Config",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-tutorials-create-dynamic-row-configuration-md-17a9eb73e614cfeb26a1.js.map