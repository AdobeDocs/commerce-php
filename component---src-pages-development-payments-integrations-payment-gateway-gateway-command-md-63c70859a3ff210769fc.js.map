{"version":3,"file":"component---src-pages-development-payments-integrations-payment-gateway-gateway-command-md-63c70859a3ff210769fc.js","mappings":"yRASaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAI5E,SAAC,UAAD,CAAMA,QAAQ,UACd,eACE,GAAM,mBADR,oBAGA,0GAA2F,cAAGC,WAAW,IACrG,KAAQ,uBAD+E,WAA3F,4GAGA,iJACA,eACE,GAAM,aADR,cAGA,+DAAgD,cAAGA,WAAW,IAC1D,KAAQ,uGACP,uBAAYA,WAAW,KAAvB,kDAFL,wBAE0H,cAAGA,WAAW,IACpI,KAAQ,qFAD8G,0BAF1H,MAKA,eACE,GAAM,wBADR,yBAGA,0BAAW,uBAAYA,WAAW,KAAvB,wDAAX,0BAAqI,uBAAYA,WAAW,KAAvB,oBAArI,oFAAqR,cAAGA,WAAW,IAC/R,KAAQ,uBADyQ,6BAArR,MAGA,eACE,GAAM,2BADR,4BAGA,iIAAkH,cAAGA,WAAW,IAC5H,KAAQ,4CADsG,6BAAlH,oBAGA,mDAAoC,uBAAYA,WAAW,KAAvB,6BAApC,oHAA6N,cAAGA,WAAW,IACvO,KAAQ,uFACP,uBAAYA,WAAW,KAAvB,0CAFL,OAGA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,41BAaL,+MACA,yFACA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,uBAAYA,WAAW,KAAvB,kBAAnB,MAAmF,cAAGA,WAAW,IAC7F,KAAQ,sBADuE,mBAAnF,mFAIF,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,uBAAYA,WAAW,KAAvB,mBAAnB,MAAoF,cAAGA,WAAW,IAC9F,KAAQ,sCADwE,oBAApF,4GAIF,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,uBAAYA,WAAW,KAAvB,UAAnB,MAA2E,cAAGA,WAAW,IACrF,KAAQ,qBAD+D,kBAA3E,6FAKJ,2CACA,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,uBAAYA,WAAW,KAAvB,WAAnB,MAA4E,cAAGA,WAAW,IACtF,KAAQ,uBADgE,oBAA5E,wFAIF,eAAIA,WAAW,OACb,cAAGA,WAAW,OAAK,uBAAYA,WAAW,KAAvB,aAAnB,MAA8E,cAAGA,WAAW,IACxF,KAAQ,yBADkE,sBAA9E,wCAOP,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/payments-integrations/payment-gateway/gateway-command.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nimport Docs from '/src/pages/_includes/braintree-note.md';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Docs mdxType=\"Docs\" />\n    <h1 {...{\n      \"id\": \"gateway-command\"\n    }}>{`Gateway Command`}</h1>\n    <p>{`Gateway Command is a component of the Adobe Commerce payment gateway that takes the `}<a parentName=\"p\" {...{\n        \"href\": \"index.md#terms-used\"\n      }}>{`payload`}</a>{` required for a particular payment provider and sends, receives, and processes the provider's response.`}</p>\n    <p>{`For each operation (authorization, capture and so on) of a certain payment provider - a separate gateway command is added.`}</p>\n    <h2 {...{\n      \"id\": \"interface\"\n    }}>{`Interface`}</h2>\n    <p>{`Basic interface for a gateway command is `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/tree/2.4/app/code/Magento/Payment/Gateway/CommandInterface.php\"\n      }}><inlineCode parentName=\"a\">{`\\\\Magento\\\\Payment\\\\Gateway\\\\CommandInterface`}</inlineCode></a>{`. It implements the `}<a parentName=\"p\" {...{\n        \"href\": \"https://designpatternsphp.readthedocs.io/en/latest/Behavioral/Command/README.html\"\n      }}>{`Command design pattern`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"basic-implementation\"\n    }}>{`Basic implementation`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Payment\\\\Gateway\\\\Command\\\\GatewayCommand`}</inlineCode>{` class is the default `}<inlineCode parentName=\"p\">{`CommandInterface`}</inlineCode>{` implementation. It allows performing most of the operations implemented in the `}<a parentName=\"p\" {...{\n        \"href\": \"index.md#terms-used\"\n      }}>{`Commerce sales management`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"adding-gateway-commands\"\n    }}>{`Adding gateway commands`}</h2>\n    <p>{`For each particular integration with a payment provider, gateway commands are added using virtual types in `}<a parentName=\"p\" {...{\n        \"href\": \"../../components/dependency-injection.md\"\n      }}>{`dependency injection (DI)`}</a>{` configuration.`}</p>\n    <p>{`In the following example the `}<inlineCode parentName=\"p\">{`BraintreeAuthorizeCommand`}</inlineCode>{` gateway command is added. The command implements the \"authorize\" operation for the Braintree payment provider (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/tree/2.3/app/code/Magento/Braintree/etc/di.xml\"\n      }}><inlineCode parentName=\"a\">{`app/code/Magento/Braintree/etc/di.xml`}</inlineCode></a>{`):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<virtualType name=\"BraintreeAuthorizeCommand\" type=\"Magento\\\\Payment\\\\Gateway\\\\Command\\\\GatewayCommand\">\n    <arguments>\n        <argument name=\"requestBuilder\" xsi:type=\"object\">BraintreeAuthorizeRequest</argument>\n        <argument name=\"transferFactory\" xsi:type=\"object\">Magento\\\\Braintree\\\\Gateway\\\\Http\\\\TransferFactory</argument>\n        <argument name=\"client\" xsi:type=\"object\">Magento\\\\Braintree\\\\Gateway\\\\Http\\\\Client\\\\TransactionSale</argument>\n        <argument name=\"handler\" xsi:type=\"object\">BraintreeAuthorizationHandler</argument>\n        <argument name=\"validator\" xsi:type=\"object\">Magento\\\\Braintree\\\\Gateway\\\\Validator\\\\ResponseValidator</argument>\n        <argument name=\"errorMessageMapper\" xsi:type=\"object\">Magento\\\\Braintree\\\\Gateway\\\\ErrorMapper\\\\VirtualErrorMessageMapper</argument>\n    </arguments>\n</virtualType>\n`}</code></pre>\n    <p>{`(The code sample is from Magento Open Source v2.2. Although the payment provider gateway was added in v2.0, the particular default implementation using the gateway were added in v2.1.)`}</p>\n    <p>{`A gateway command must be configured with the following arguments:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`requestBuilder`}</inlineCode>{`: `}<a parentName=\"p\" {...{\n            \"href\": \"request-builder.md\"\n          }}>{`request builder`}</a>{`, builds an array of provider-specific arguments using the order information.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`transferFactory`}</inlineCode>{`: `}<a parentName=\"p\" {...{\n            \"href\": \"gateway-client.md#transfer-factory\"\n          }}>{`transfer factory`}</a>{`, creates transfer object from request data, which will be used by Gateway Client to process requests.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`client`}</inlineCode>{`: `}<a parentName=\"p\" {...{\n            \"href\": \"gateway-client.md\"\n          }}>{`gateway client`}</a>{`, takes the provider-specific arguments and performs a low-level call to the provider.`}</p>\n      </li>\n    </ul>\n    <p>{`Optional arguments :`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`handler`}</inlineCode>{`: `}<a parentName=\"p\" {...{\n            \"href\": \"response-handler.md\"\n          }}>{`response handler`}</a>{`, changes the order and payment status depending on the payment provider response.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`validator`}</inlineCode>{`: `}<a parentName=\"p\" {...{\n            \"href\": \"response-validator.md\"\n          }}>{`response validator`}</a>{`, validates the provider response.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}