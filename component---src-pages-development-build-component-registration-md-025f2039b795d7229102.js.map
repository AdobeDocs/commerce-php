{"version":3,"file":"component---src-pages-development-build-component-registration-md-025f2039b795d7229102.js","mappings":"oRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,wBACH,yBACL,kBAAK,+GAA6G,uBAAYC,WAAW,KAAM,sBAAmC,YAClL,kBAAK,2CAAyC,uBAAYA,WAAW,KAAM,oBAAiC,qDAAmD,uBAAYA,WAAW,KAAM,oBAAiC,wBAAsB,cAAGA,WAAW,IAC7P,KAAQ,oGACL,4BAAgC,4EAA0E,uBAAYA,WAAW,KAAM,oBAAiC,iCAC/K,eACE,GAAM,WACH,YACL,kBAAK,2BACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,qGAEP,kBAAK,SAAO,uBAAYA,WAAW,KAAM,gBAA6B,yDAAuD,uBAAYA,WAAW,KAAM,gBAA6B,gCACvL,kBAAK,6DAA2D,qBAAQ,eAAsB,mEAC9F,eACE,GAAM,WACH,YACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,iKAIP,eACE,GAAM,UACH,WACL,kBAAK,0BACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,yGAEP,kBAAK,SAAO,uBAAYA,WAAW,KAAM,UAAuB,8EAA4E,uBAAYA,WAAW,KAAM,YAAyB,yDAAuD,uBAAYA,WAAW,KAAM,gBAA6B,+BACnT,eACE,GAAM,aACH,YACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,4JAIP,eACE,GAAM,qBACH,sBACL,kBAAK,qCACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,0GAEP,kBAAK,SAAO,uBAAYA,WAAW,KAAM,gBAA6B,0DAAwD,uBAAYA,WAAW,KAAM,iBAA8B,iCACzL,eACE,GAAM,aACH,YACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,uJAIP,eACE,GAAM,aACH,cACL,kBAAK,yCACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,sGAEP,kBAAK,SAAO,uBAAYA,WAAW,KAAM,YAAyB,uDAAqD,uBAAYA,WAAW,KAAM,kBAA+B,0BACnL,eACE,GAAM,aACH,YACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,0JAIP,eACE,GAAM,2BACH,4BACL,kBAAK,0BAAwB,uBAAYA,WAAW,KAAM,oBAAiC,+BAA6B,cAAGA,WAAW,IAClI,KAAQ,2BACL,uCAA2C,kBAAgB,uBAAYA,WAAW,KAAM,oBAAiC,iBAAe,uBAAYA,WAAW,KAAM,YAAyB,gBAAc,uBAAYA,WAAW,KAAM,iBAA8B,MAC9Q,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,oKAQP,eACE,GAAM,+BACH,WAAS,uBAAYA,WAAW,MAAO,oBAAiC,UAC7E,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,gKAMV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/build/component-registration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"register-a-component\"\n    }}>{`Register a component`}</h1>\n    <p>{`Components, including modules, themes, and language packages, must be registered in the system through the `}<inlineCode parentName=\"p\">{`ComponentRegistrar`}</inlineCode>{` class.`}</p>\n    <p>{`Each component must have a file called `}<inlineCode parentName=\"p\">{`registration.php`}</inlineCode>{` in its root directory. For example, here is the `}<inlineCode parentName=\"p\">{`registration.php`}</inlineCode>{` file for Magento's `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/AdminNotification/registration.php\"\n      }}>{`AdminNotification module`}</a>{`. Depending on the type of component, registration is performed through `}<inlineCode parentName=\"p\">{`registration.php`}</inlineCode>{` by adding to it as follows:`}</p>\n    <h2 {...{\n      \"id\": \"modules\"\n    }}>{`Modules`}</h2>\n    <p>{`Register modules with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`ComponentRegistrar::register(ComponentRegistrar::MODULE, '<VendorName_ModuleName>', __DIR__);\n`}</code></pre>\n    <p>{`Here `}<inlineCode parentName=\"p\">{`<VendorName>`}</inlineCode>{` is the name of the company providing the module and `}<inlineCode parentName=\"p\">{`<ModuleName>`}</inlineCode>{` is the name of the module.`}</p>\n    <p>{`Avoid using \"Ui\" for your custom module name because the `}<code>{`%Vendor%_Ui`}</code>{` notation, required when specifying paths, might cause issues.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Magento\\\\Framework\\\\Component\\\\ComponentRegistrar;\n\nComponentRegistrar::register(ComponentRegistrar::MODULE, 'Magento_AdminNotification', __DIR__);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"themes\"\n    }}>{`Themes`}</h2>\n    <p>{`Register themes with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`ComponentRegistrar::register(ComponentRegistrar::THEME, '<area>/<vendor>/<theme name>', __DIR__);\n`}</code></pre>\n    <p>{`Here `}<inlineCode parentName=\"p\">{`<area>`}</inlineCode>{` is the functional area of the module (frontend, controller, and so on.), `}<inlineCode parentName=\"p\">{`<vendor>`}</inlineCode>{` is the name of the company providing the theme, and `}<inlineCode parentName=\"p\">{`<theme name>`}</inlineCode>{` is the name of the theme.`}</p>\n    <h3 {...{\n      \"id\": \"example-1\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Magento\\\\Framework\\\\Component\\\\ComponentRegistrar;\n\nComponentRegistrar::register(ComponentRegistrar::THEME, 'frontend/Magento/luma', __DIR__);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"language-packages\"\n    }}>{`Language packages`}</h2>\n    <p>{`Register language packages with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`ComponentRegistrar::register(ComponentRegistrar::LANGUAGE, '<VendorName>_<packageName>', __DIR__);\n`}</code></pre>\n    <p>{`Here `}<inlineCode parentName=\"p\">{`<VendorName>`}</inlineCode>{` is the name of the company providing the package and `}<inlineCode parentName=\"p\">{`<packageName>`}</inlineCode>{` is the name of the package.`}</p>\n    <h3 {...{\n      \"id\": \"example-2\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Magento\\\\Framework\\\\Component\\\\ComponentRegistrar;\n\nComponentRegistrar::register(ComponentRegistrar::LANGUAGE, 'magento_de_de', __DIR__);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"libraries\"\n    }}>{`Libraries`}</h2>\n    <p>{`Libraries should be registered using`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`ComponentRegistrar::register(ComponentRegistrar::LIBRARY, '<vendor>/<library_name>', __DIR__);\n`}</code></pre>\n    <p>{`Here `}<inlineCode parentName=\"p\">{`<vendor>`}</inlineCode>{` is the name of the company providing the library. `}<inlineCode parentName=\"p\">{`<library_name>`}</inlineCode>{` is the library name.`}</p>\n    <h3 {...{\n      \"id\": \"example-3\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Magento\\\\Framework\\\\Component\\\\ComponentRegistrar;\n\nComponentRegistrar::register(ComponentRegistrar::LIBRARY, 'magento/framework', __DIR__);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"integrate-with-composer\"\n    }}>{`Integrate with Composer`}</h2>\n    <p>{`After you create your `}<inlineCode parentName=\"p\">{`registration.php`}</inlineCode>{` file and you are creating `}<a parentName=\"p\" {...{\n        \"href\": \"composer-integration.md\"\n      }}>{`your component's composer.json file`}</a>{`, invoke your `}<inlineCode parentName=\"p\">{`registration.php`}</inlineCode>{` file in the `}<inlineCode parentName=\"p\">{`autoload`}</inlineCode>{` section of `}<inlineCode parentName=\"p\">{`composer.json`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n \"name\": \"Acme-vendor/bar-component\",\n \"autoload\": {\n    \"psr-4\": { \"AcmeVendor\\\\\\\\BarComponent\\\\\\\\\": \"\" },\n    \"files\": [ \"registration.php\" ]\n }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"sample-registrationphp-file\"\n    }}>{`Sample `}<inlineCode parentName=\"h3\">{`registration.php`}</inlineCode>{` file`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Magento\\\\Framework\\\\Component\\\\ComponentRegistrar;\n\nComponentRegistrar::register(ComponentRegistrar::MODULE, 'Magento_AdminNotification', __DIR__);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}