{"version":3,"file":"component---src-pages-development-components-message-queues-async-configuration-md-24b26968e0d2cf42a0ef.js","mappings":"8QAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,8BADR,+BAGA,gHACA,oBACE,eAAIC,WAAW,MAAf,sBACA,eAAIA,WAAW,MAAf,uBACA,eAAIA,WAAW,MAAf,uBACA,eAAIA,WAAW,MAAf,yBAEF,uDAAwC,cAAGA,WAAW,IAClD,KAAQ,oBAD4B,4BAAxC,MAGA,wPACA,oBACE,eAAIA,WAAW,MAAf,sBACA,eAAIA,WAAW,MAAf,yBAEF,uCAAwB,uBAAYA,WAAW,KAAvB,sBAAxB,SAA+F,uBAAYA,WAAW,KAAvB,sBAA/F,sBAAmL,uBAAYA,WAAW,KAAvB,uBAAnL,aACA,eACE,GAAM,oBADR,sBAGA,+DAAgD,uBAAYA,WAAW,KAAvB,qBAAhD,qBAAkI,cAAGA,WAAW,IAC5I,KAAQ,mBADsH,gCAGlI,eACE,GAAM,sBADR,wBAGA,0BAAW,uBAAYA,WAAW,KAAvB,uBAAX,8BAAwG,uBAAYA,WAAW,KAAvB,mFAAxG,6BAAgQ,uBAAYA,WAAW,KAAvB,iDAAhQ,8BAAuX,uBAAYA,WAAW,KAAvB,0EAAvX,sCAA+gB,uBAAYA,WAAW,KAAvB,UAA/gB,WACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,kYAWL,8JAA+I,uBAAYA,WAAW,KAAvB,uBAA/I,SAAuN,uBAAYA,WAAW,KAAvB,WAAvN,MACA,mBAAG,uBAAYA,WAAW,KAAvB,2FAAH,WAAiJ,uBAAYA,WAAW,KAAvB,4EAAjJ,yHAA8X,uBAAYA,WAAW,KAAvB,QAA9X,yBAAuc,uBAAYA,WAAW,KAAvB,WAAvc,oCACA,eACE,GAAM,qBADR,uBAGA,8HACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,qLAKL,eACE,GAAM,qBADR,uBAGA,gHAAiG,uBAAYA,WAAW,KAAvB,UAAjG,YAA+J,uBAAYA,WAAW,KAAvB,WAA/J,0CAA4P,uBAAYA,WAAW,KAAvB,wBAA5P,0CACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,kMAUTJ,EAAWK,gBAAiB","sources":["webpack://commerce-php/./src/pages/development/components/message-queues/async-configuration.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"asynchronous-configuration\"\n    }}>{`Asynchronous configuration`}</h1>\n    <p>{`When using the message queue, four configuration files in your component must be updated:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`communication.xml`}</li>\n      <li parentName=\"ul\">{`queue_consumer.xml`}</li>\n      <li parentName=\"ul\">{`queue_topology.xml`}</li>\n      <li parentName=\"ul\">{`queue_publisher.xml`}</li>\n    </ul>\n    <p>{`More information can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"configuration.md\"\n      }}>{`Configure message queues`}</a>{`.`}</p>\n    <p>{`Asynchronous and Bulk APIs are built on top of the usual REST API and use the Message Queue Framework for processing messages. To ease development efforts, the Asynchronous API pre-generates the following configuration files:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`communication.xml`}</li>\n      <li parentName=\"ul\">{`queue_publisher.xml`}</li>\n    </ul>\n    <p>{`and provides the `}<inlineCode parentName=\"p\">{`queue_topology.xml`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`queue_consumer.xml`}</inlineCode>{` files within the `}<inlineCode parentName=\"p\">{`Magento/WebapiAsync`}</inlineCode>{` module.`}</p>\n    <h2 {...{\n      \"id\": \"communicationxml\"\n    }}>{`communication.xml`}</h2>\n    <p>{`Information about the auto-generation of `}<inlineCode parentName=\"p\">{`communication.xml`}</inlineCode>{` can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"async-topics.md\"\n      }}>{`Topics in Asynchronous API`}</a></p>\n    <h2 {...{\n      \"id\": \"queue_publisherxml\"\n    }}>{`queue_publisher.xml`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`queue_publisher.xml`}</inlineCode>{` file is generated by the `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\WebapiAsync\\\\Code\\\\Generator\\\\Config\\\\RemoteServiceReader\\\\Publisher`}</inlineCode>{` class, which implements `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\Config\\\\ReaderInterface`}</inlineCode>{` and is injected into the `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\MessageQueue\\\\Publisher\\\\Config\\\\CompositeReader`}</inlineCode>{` constructor argument in the main `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<type name=\"Magento\\\\Framework\\\\MessageQueue\\\\Publisher\\\\Config\\\\CompositeReader\">\n    <arguments>\n        <argument name=\"readers\" xsi:type=\"array\">\n            <item name=\"asyncServiceReader\" xsi:type=\"object\" sortOrder=\"0\">Magento\\\\WebapiAsync\\\\Code\\\\Generator\\\\Config\\\\RemoteServiceReader\\\\Publisher</item>\n            ...\n        </argument>\n    </arguments>\n</type>\n`}</code></pre>\n    <p>{`The sort order is set to 0 and allows developers to change some aspects of the generated configuration in configuration readers such as `}<inlineCode parentName=\"p\">{`queue_publisher.xml`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`env.php`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`\\\\Magento\\\\WebapiAsync\\\\Code\\\\Generator\\\\Config\\\\RemoteServiceReader\\\\Publisher::read()`}</inlineCode>{` calls `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\AsynchronousOperations\\\\Model\\\\ConfigInterface::getServices()`}</inlineCode>{` to get an array of all REST API routes which can be executed asynchronously. Then it defines the connection name as `}<inlineCode parentName=\"p\">{`amqp`}</inlineCode>{` and the exchange as `}<inlineCode parentName=\"p\">{`magento`}</inlineCode>{` for each generated topic name.`}</p>\n    <h2 {...{\n      \"id\": \"queue_consumerxml\"\n    }}>{`queue_consumer.xml`}</h2>\n    <p>{`The asynchronous/bulk API has one defined consumer which processes all asynchronous/bulk APIs messages.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<consumer name=\"async.operations.all\" queue=\"async.operations.all\" connection=\"amqp\"\n              consumerInstance=\"Magento\\\\AsynchronousOperations\\\\Model\\\\MassConsumer\"/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"queue_topologyxml\"\n    }}>{`queue_topology.xml`}</h2>\n    <p>{`The message queue topology configuration links all auto-generated topic names with prefix `}<inlineCode parentName=\"p\">{`async.`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`magento`}</inlineCode>{` exchange and defines the queue named `}<inlineCode parentName=\"p\">{`async.operations.all`}</inlineCode>{` as the destination for all messages.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<exchange name=\"magento\" type=\"topic\" connection=\"amqp\">\n    <binding id=\"async.operations.all\" topic=\"async.#\" destinationType=\"queue\" destination=\"async.operations.all\"/>\n</exchange>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}