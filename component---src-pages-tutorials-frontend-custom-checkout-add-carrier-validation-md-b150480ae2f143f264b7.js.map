{"version":3,"file":"component---src-pages-tutorials-frontend-custom-checkout-add-carrier-validation-md-b150480ae2f143f264b7.js","mappings":"oRAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,2CACH,4CACL,kBAAK,+MACL,kBAAK,+EACL,oBACE,eAAIC,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,mCACL,2BAA+B,MACtC,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,4BACL,oBAAwB,MAC/B,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,+DACL,uDAA2D,MAClE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,qDACL,uDAA2D,OAEpE,SAACX,EAAD,CAAaY,QAAQ,OAAOC,MAAM,OAAOH,QAAQ,iBACjD,kBAAK,qOACL,eACE,GAAM,kCACH,oCACL,kBAAK,iMAA+L,cAAGC,WAAW,IAC9M,KAAQ,4BACL,aAAiB,MACxB,kBAAK,qOACL,kBAAK,kPAAgP,cAAGA,WAAW,IAC/P,KAAQ,sDACL,UAAc,YAAU,uBAAYA,WAAW,KAAM,oBAAiC,aAC7F,kBAAK,eAAa,uBAAYA,WAAW,KAAM,MAAmB,0CAAwC,uBAAYA,WAAW,KAAM,eAA4B,mEACnK,kBAAK,YAAU,uBAAYA,WAAW,KAAM,gDAA6D,yBAAuB,uBAAYA,WAAW,KAAM,OAAoB,6CACjL,kBAAK,kCAAgC,uBAAYA,WAAW,KAAM,cAA2B,aAC7F,kBAAK,0GAAwG,mBAAQA,WAAW,KAAM,WAAoB,MAAI,mBAAQA,WAAW,KAAM,YAAqB,SAAO,mBAAQA,WAAW,KAAM,QAAiB,uDAC7P,4BACE,cAAGA,WAAW,eAAa,eAAIA,WAAW,KAAM,wFAElD,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,ufAsBP,kBAAK,yMACL,eACE,GAAM,2BACH,6BACL,kBAAK,yBAAuB,uBAAYA,WAAW,KAAM,OAAoB,oHAAkH,uBAAYA,WAAW,KAAM,gDAA6D,gBACzR,kBAAK,uCACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,i0BA2BP,kBAAK,gHAA8G,uBAAYA,WAAW,KAAM,qCAAkD,kCAClM,eACE,GAAM,8DACH,gEACL,kBAAK,sFAAoF,uBAAYA,WAAW,KAAM,+CAA4D,4BAA0B,uBAAYA,WAAW,KAAM,wBAAqC,0DAAwD,uBAAYA,WAAW,KAAM,oBAAiC,SAAO,uBAAYA,WAAW,KAAM,2BAAwC,wBAChd,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,8tBAsBP,eACE,GAAM,oDACH,sDACL,kBAAK,yGACL,kBAAK,kDAAgD,uBAAYA,WAAW,KAAM,mEAAgF,WAClK,kBAAK,qCACL,kBAAK,iBAAe,uBAAYA,WAAW,KAAM,0BAAuC,UAAQ,uBAAYA,WAAW,KAAM,8BAA2C,2DACxK,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,qqEAoCP,eACE,GAAM,oDACH,sDACL,oBACE,eAAIA,WAAW,MAAO,4BAExB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,+CAEP,oBACE,eAAIA,WAAW,MAAO,sBAExB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,8BAIV,CAEDH,EAAWM,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/tutorials/frontend/custom-checkout/add-carrier-validation.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-custom-shipping-carrier-validations\"\n    }}>{`Add custom shipping carrier validations`}</h1>\n    <p>{`This topic describes how to add shipping address validations for a custom shipping carrier to the checkout. This is an essential part of the bigger task of adding a custom shipping method to your store.`}</p>\n    <p>{`To add new shipping carrier validations to the checkout, do the following:`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-1-create-validation-rules\"\n        }}>{`Create validation rules`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-2-create-validator\"\n        }}>{`Create validator`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-3-register-validator-and-rules-in-the-validators-pool\"\n        }}>{`Register validator and rules in the validators pool`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-4-add-the-validation-to-the-checkout-layout\"\n        }}>{`Add the validators and rules to the checkout layout`}</a>{`.`}</li>\n    </ol>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`During checkout, when a customer fills the shipping address form, shipping carrier validations trigger the shipping rates request. That is why adding shipping carrier validations for your custom shipping method is mandatory.`}</p>\n    <h2 {...{\n      \"id\": \"step-1-create-validation-rules\"\n    }}>{`Step 1: Create validation rules`}</h2>\n    <p>{`Shipping carrier validation rules declare which fields of the shipping address are required for the corresponding shipping method to be available. The validation itself is performed by the `}<a parentName=\"p\" {...{\n        \"href\": \"#step-2-create-validator\"\n      }}>{`validator`}</a>{`.`}</p>\n    <p>{`During checkout, if the shipping address fields declared in the rules are filled, the further validation of fields' values is carried on the server side. For example, whether a carrier is available for the specified country.`}</p>\n    <p>{`For the sake of compatibility, upgradability, and easy maintenance, do not edit the default application code, add your customization in a separate module. For your checkout customization to be applied correctly, your custom module should `}<a parentName=\"p\" {...{\n        \"href\": \"../../../development/build/composer-integration.md\"\n      }}>{`depend`}</a>{` on the `}<inlineCode parentName=\"p\">{`Magento_Checkout`}</inlineCode>{` module.`}</p>\n    <p>{`Do not use `}<inlineCode parentName=\"p\">{`Ui`}</inlineCode>{` for your custom module name, because `}<inlineCode parentName=\"p\">{`%Vendor%_Ui`}</inlineCode>{` notation, required when specifying paths, might cause issues.`}</p>\n    <p>{`In your `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/web/js/model`}</inlineCode>{` directory, create a `}<inlineCode parentName=\"p\">{`.js`}</inlineCode>{` file implementing the validation rules.`}</p>\n    <p>{`The script must implement the `}<inlineCode parentName=\"p\">{`getRules()`}</inlineCode>{` method.`}</p>\n    <p>{`For example, the FedEx shipping method requires only two fields of the shipping address to be filled: `}<strong parentName=\"p\">{`Country`}</strong>{`, `}<strong parentName=\"p\">{`Zip Code`}</strong>{` and `}<strong parentName=\"p\">{`City`}</strong>{`. This is how the validation rules for FedEx look:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`<Magento_Fedex_dir>/view/frontend/web/js/model/shipping-rates-validation-rules.js`}</em></p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`define(\n    [],\n    function () {\n        'use strict';\n        return {\n            getRules: function() {\n                return {\n                    'postcode': {\n                        'required': true\n                    },\n                    'country_id': {\n                        'required': true\n                    },\n                    'city': {\n                        'required': true\n                    }\n                };\n            }\n        };\n    }\n)\n`}</code></pre>\n    <p>{`Triggering the shipping rates request correlates directly with the fields you specify in the validation rules: the request is triggered once all these fields are populated and pass the validation.`}</p>\n    <h2 {...{\n      \"id\": \"step-2-create-validator\"\n    }}>{`Step 2: Create validator`}</h2>\n    <p>{`Create the validator `}<inlineCode parentName=\"p\">{`.js`}</inlineCode>{` script that checks if the fields defined by the validation rules are filled. The script must be located in the `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/web/js/model`}</inlineCode>{` directory.`}</p>\n    <p>{`A sample validator script follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`define(\n    [\n        'jquery',\n        'mageUtils',\n\n        './shipping-rates-validation-rules',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        'use strict';\n        return {\n            validationErrors: [],\n            validate: function(address) {\n                var self = this;\n                this.validationErrors = [];\n                $.each(validationRules.getRules(), function(field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n                        self.validationErrors.push(message);\n                    }\n                });\n                return !Boolean(this.validationErrors.length);\n            }\n        };\n    }\n);\n`}</code></pre>\n    <p>{`You can use this sample for your validator, but you need to specify your validation rules script instead of `}<inlineCode parentName=\"p\">{`./shipping-rates-validation-rules`}</inlineCode>{` in the list of used modules.`}</p>\n    <h2 {...{\n      \"id\": \"step-3-register-validator-and-rules-in-the-validators-pool\"\n    }}>{`Step 3: Register validator and rules in the validators pool`}</h2>\n    <p>{`Your custom validator must be added to the pool of validators. To do this, in the `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/web/js/view`}</inlineCode>{` directory create a new `}<inlineCode parentName=\"p\">{`<your-validation>.js`}</inlineCode>{` file with the following content (having replaced the `}<inlineCode parentName=\"p\">{`<your_validator>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<your_validation_rules>`}</inlineCode>{` with your values):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`define(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        '../model/<your_validator>',\n        '../model/<your_validation_rules>'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        shippingRatesValidator,\n        shippingRatesValidationRules\n    ) {\n        'use strict';\n        defaultShippingRatesValidator.registerValidator('carrierName', shippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('carrierName', shippingRatesValidationRules);\n        return Component;\n    }\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-4-add-the-validation-to-the-checkout-layout\"\n    }}>{`Step 4: Add the validation to the checkout layout`}</h2>\n    <p>{`The last step is specifying the script you created on the previous step in the checkout page layout.`}</p>\n    <p>{`In your custom module directory, create a new `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/layout/checkout_index_index.xml`}</inlineCode>{` file.`}</p>\n    <p>{`In this file, add the following:`}</p>\n    <p>{`You must add `}<inlineCode parentName=\"p\">{`<your-validation-name>`}</inlineCode>{` like `}<inlineCode parentName=\"p\">{`%carrier%-rates-validation`}</inlineCode>{` - where carrier has to match the actual carrier code.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n    <body>\n        <referenceBlock name=\"checkout.root\">\n            <arguments>\n                <argument name=\"jsLayout\" xsi:type=\"array\">\n                    <item name=\"components\" xsi:type=\"array\">\n                        <item name=\"checkout\" xsi:type=\"array\">\n                            <item name=\"children\" xsi:type=\"array\">\n                                <item name=\"steps\" xsi:type=\"array\">\n                                    <item name=\"children\" xsi:type=\"array\">\n                                        <item name=\"shipping-step\" xsi:type=\"array\">\n                                            <item name=\"children\" xsi:type=\"array\">\n                                                <item name=\"step-config\" xsi:type=\"array\">\n                                                    <item name=\"children\" xsi:type=\"array\">\n                                                        <item name=\"shipping-rates-validation\" xsi:type=\"array\">\n                                                            <item name=\"children\" xsi:type=\"array\">\n                                                                <item name=\"<your-validation-name>\" xsi:type=\"array\">\n                                                                    <item name=\"component\" xsi:type=\"string\">%your_module%/js/view/%your-validation%</item>\n                                                                </item>\n                                                            </item>\n                                                        </item>\n                                                    </item>\n                                                </item>\n                                            </item>\n                                        </item>\n                                    </item>\n                                </item>\n                            </item>\n                        </item>\n                    </item>\n                </argument>\n            </arguments>\n        </referenceBlock>\n    </body>\n</page>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-5-deploy-static-content-and-clear-the-cache\"\n    }}>{`Step 5: Deploy static content and clear the cache`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Deploy static content:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento setup:static-content:deploy\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`Clean the cache:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`bin/magento cache:clean\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","variant","slots","isMDXComponent"],"sourceRoot":""}