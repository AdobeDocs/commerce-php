{"version":3,"file":"component---src-pages-development-components-message-queues-async-topics-md-da51460f74a88eac046b.js","mappings":"qRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,8BACH,+BACL,kBAAK,qHAAmH,cAAGC,WAAW,IAClI,KAAQ,wDACL,QAAY,MACnB,kBAAK,oCAAkC,uBAAYA,WAAW,KAAM,qBAAkC,6BAA2B,cAAGA,WAAW,IAC3I,KAAQ,qCACL,8BACP,eACE,GAAM,kCACH,oCACL,kBAAK,MAAI,uBAAYA,WAAW,KAAM,qBAAkC,2CAAyC,uBAAYA,WAAW,KAAM,eAA4B,qHAAmH,uBAAYA,WAAW,KAAM,uFAAoG,6BAA2B,uBAAYA,WAAW,KAAM,iDAA8D,0BAAwB,uBAAYA,WAAW,KAAM,gEAA6E,2CAAyC,uBAAYA,WAAW,KAAM,UAAuB,WACnvB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,+jBAaP,kBAAK,sJAAoJ,uBAAYA,WAAW,KAAM,qBAAkC,MAAI,uBAAYA,WAAW,KAAM,WAAwB,MACjR,mBAAG,uBAAYA,WAAW,KAAM,wEAAqF,gHACrH,kBAAK,+FAA6F,uBAAYA,WAAW,KAAM,WAAwB,0BAAwB,uBAAYA,WAAW,KAAM,eAA4B,UAAQ,uBAAYA,WAAW,KAAM,YAAyB,kEAAgE,uBAAYA,WAAW,KAAM,eAA4B,sCAAoC,uBAAYA,WAAW,KAAM,gBAA6B,SAAO,uBAAYA,WAAW,KAAM,YAAyB,gGAC1jB,eACE,GAAM,qBACH,sBACL,kBAAK,qLAAmL,uBAAYA,WAAW,KAAM,qBAAkC,6BAA2B,uBAAYA,WAAW,KAAM,wDAAqE,wFAAsF,uBAAYA,WAAW,KAAM,cAA2B,kFAClgB,mBAAG,uBAAYA,WAAW,KAAM,gFAA6F,2IAC7H,kBAAK,qCAAmC,uBAAYA,WAAW,KAAM,cAA2B,MAChG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,2OAOP,kBAAK,4CACL,mBAAG,uBAAYA,WAAW,KAAM,kEAA+E,MAC/G,kBAAK,oCACL,oBACE,eAAIA,WAAW,MAAO,yBACtB,eAAIA,WAAW,MAAO,8BACtB,eAAIA,WAAW,MAAO,+BACtB,eAAIA,WAAW,MAAO,6BAExB,kBAAK,wNAGR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/components/message-queues/async-topics.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"topics-in-asynchronous-api\"\n    }}>{`Topics in asynchronous API`}</h1>\n    <p>{`The message queue system uses \"topic exchange\" for managing messages. More information about topics can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.rabbitmq.com/tutorials/tutorial-five-php\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`Topics are usually defined in a `}<inlineCode parentName=\"p\">{`communication.xml`}</inlineCode>{` configuration file. See `}<a parentName=\"p\" {...{\n        \"href\": \"configuration.md#communicationxml\"\n      }}>{`Configure message queues`}</a></p>\n    <h2 {...{\n      \"id\": \"generating-of-communicationxml\"\n    }}>{`Generating of communication.xml`}</h2>\n    <p>{`A `}<inlineCode parentName=\"p\">{`communication.xml`}</inlineCode>{` is pre-generated automatically by the `}<inlineCode parentName=\"p\">{`WebapiAsync`}</inlineCode>{` module. This module also generates topic names for asynchronous processes. Generated files are processed by the `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\WebapiAsync\\\\Code\\\\Generator\\\\Config\\\\RemoteServiceReader\\\\Communication`}</inlineCode>{` class, which implements `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\Config\\\\ReaderInterface`}</inlineCode>{` and is injected into `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\Communication\\\\Config\\\\CompositeReader`}</inlineCode>{` as a constructor argument of the main `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<type name=\"Magento\\\\Framework\\\\Communication\\\\Config\\\\CompositeReader\">\n    <arguments>\n        <argument name=\"readers\" xsi:type=\"array\">\n            <item name=\"asyncServiceReader\" xsi:type=\"array\">\n                <item name=\"reader\" xsi:type=\"object\">Magento\\\\WebapiAsync\\\\Code\\\\Generator\\\\Config\\\\RemoteServiceReader\\\\Communication</item>\n                <item name=\"sortOrder\" xsi:type=\"string\">0</item>\n            </item>\n            <item name=\"xmlReader\" xsi:type=\"array\"> ... </item>\n            ...\n        </argument>\n    </arguments>\n</type>\n`}</code></pre>\n    <p>{`Sort order is set to 0 by default. This allows developers to change some aspects of the generated configuration in configuration readers, such as `}<inlineCode parentName=\"p\">{`communication.xml`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`env.php`}</inlineCode>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`\\\\Magento\\\\Framework\\\\Communication\\\\Config\\\\CompositeReader::read()`}</inlineCode>{` collects configuration records from defined readers and merges these records into a single configurataion.`}</p>\n    <p>{`Because the generation of thge topics configuration is based on schema type, the generated `}<inlineCode parentName=\"p\">{`<topic>`}</inlineCode>{` XML is returned with `}<inlineCode parentName=\"p\">{`\"sync\"=true`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`response`}</inlineCode>{` attribut is based on the service response definition. So the `}<inlineCode parentName=\"p\">{`WebapiAsync`}</inlineCode>{` module changes those settings to `}<inlineCode parentName=\"p\">{`\"sync\"=false`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`response`}</inlineCode>{` is set to null. These changes will allow the application to execute topics asynchronously.`}</p>\n    <h2 {...{\n      \"id\": \"topics-generation\"\n    }}>{`Topics generation`}</h2>\n    <p>{`Asynchronous and Bulk APIs are built on top of the standard Rest API. Topics for message processing fo asynchronous and bulk APIs are generated automatically, together with the `}<inlineCode parentName=\"p\">{`communication.xml`}</inlineCode>{` schema. This is done by `}<inlineCode parentName=\"p\">{`\\\\Magento\\\\WebapiAsync\\\\Model\\\\Config::getServices()`}</inlineCode>{`. The current method is responsible for retrieving all service contracts defined in `}<inlineCode parentName=\"p\">{`webapi.xml`}</inlineCode>{` files and generates topic names for the corresponding asynchronous requests.`}</p>\n    <p><inlineCode parentName=\"p\">{`generateTopicNameFromService($serviceInterface, $serviceMethod, $httpMethod)`}</inlineCode>{` is responsible for generating a topic name based on the service contract interface, the service contract method, and the HTTP method.`}</p>\n    <p>{`As example, the route defined in `}<inlineCode parentName=\"p\">{`webapi.xml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<route url=\"/V1/products\" method=\"POST\">\n    <service class=\"Magento\\\\Catalog\\\\Api\\\\ProductRepositoryInterface\" method=\"save\"/>\n    <resources>\n        <resource ref=\"Magento_Catalog::products\" />\n    </resources>\n</route>\n`}</code></pre>\n    <p>{`will generate the following topic name:`}</p>\n    <p><inlineCode parentName=\"p\">{`async.magento.catalog.api.productrepositoryinterface.save.post`}</inlineCode>{`.`}</p>\n    <p>{`It consists of following parts:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`\"async.\" as a prefix`}</li>\n      <li parentName=\"ul\">{`lower cased service class`}</li>\n      <li parentName=\"ul\">{`lower cased service method`}</li>\n      <li parentName=\"ul\">{`lover cased http method`}</li>\n    </ul>\n    <p>{`Unfortunately, there are no easy way to get a list of all generated topic names, but knowing this pattern, developers can find the required topic name and use it for executing service contracts in asynchronously.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}