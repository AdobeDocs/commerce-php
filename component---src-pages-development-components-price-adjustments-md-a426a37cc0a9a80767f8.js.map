{"version":3,"file":"component---src-pages-development-components-price-adjustments-md-a426a37cc0a9a80767f8.js","mappings":"oRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,qBACH,sBACL,kBAAK,gGACL,kBAAK,iCAA+B,uBAAYC,WAAW,KAAM,QAAqB,4BACtF,kBAAK,yEAAuE,uBAAYA,WAAW,KAAM,4BAAyC,MAClJ,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,yqBAkBP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,wCAAqD,4BAC7F,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,yhEAyFP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,mBAAgC,wEAAsE,uBAAYA,WAAW,KAAM,uDAAoE,iBAC/O,kBAAK,2CAAyC,uBAAYA,WAAW,KAAM,qBAAkC,SAAO,uBAAYA,WAAW,KAAM,mBAAgC,gBACjL,kBAAK,wDACL,kBAAK,sBAAoB,mBAAQA,WAAW,KAAM,YAAqB,0HACvE,eACE,GAAM,yCACH,0CACL,kBAAK,6EACL,kBAAK,yBAAuB,uBAAYA,WAAW,KAAM,+BAA4C,MACrG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,sYASP,kBAAK,YAAU,uBAAYA,WAAW,KAAM,2CAAwD,MACpG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,uqFAkGP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,uBAAoC,2FAAyF,uBAAYA,WAAW,KAAM,gEAA6E,mBAAiB,uBAAYA,WAAW,KAAM,gEAA6E,MAC1Y,eACE,GAAM,kDACH,mDACL,kBAAK,yFACL,kBAAK,8BACL,mBAAG,uBAAYA,WAAW,KAAM,8DAA2E,MAC3G,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,syCAyBP,kBAAK,kCAAgC,uBAAYA,WAAW,KAAM,+CAA4D,MAC9H,mBAAG,uBAAYA,WAAW,KAAM,oEAAiF,MACjH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBACV,o9CA6DP,kBAAK,6BAA2B,uBAAYA,WAAW,KAAM,mCAAgD,MAC7G,mBAAG,uBAAYA,WAAW,KAAM,mEAAgF,MAChH,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBACV,sVAWP,eACE,GAAM,qDACH,sDACL,kBAAK,4EAA0E,uBAAYA,WAAW,KAAM,UAAuB,gBACnI,mBAAG,uBAAYA,WAAW,KAAM,+DAA4E,MAC5G,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,muEAqCP,kBAAK,QAAM,uBAAYA,WAAW,KAAM,+CAA4D,mDACpG,kBAAK,0GACL,eACE,GAAM,4DACH,6DACL,kBAAK,sIAAoI,uBAAYA,WAAW,KAAM,gBAA6B,YACnM,mBAAG,uBAAYA,WAAW,KAAM,4DAAyE,MACzG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,6kBAaP,kBAAK,iCAA+B,uBAAYA,WAAW,KAAM,aAA0B,YAAU,uBAAYA,WAAW,KAAM,sBAAmC,gEACrK,kBAAK,QAAM,uBAAYA,WAAW,KAAM,gBAA6B,wBAAsB,uBAAYA,WAAW,KAAM,gBAA6B,kCACrJ,kBAAK,sCACL,mBAAG,uBAAYA,WAAW,KAAM,oDAAiE,MACjG,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,o0DAkEP,kBAAK,wIAGR,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/components/price-adjustments.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"price-adjustments\"\n    }}>{`Price adjustments`}</h1>\n    <p>{`Price adjustments adjust the product price as it is displayed on category or product pages.`}</p>\n    <p>{`In this example, we will add `}<inlineCode parentName=\"p\">{`1.79`}</inlineCode>{` to each product price.`}</p>\n    <p>{`To create a price adjustment, add the following code to the module's `}<inlineCode parentName=\"p\">{`VENDOR/MODULE/etc/di.xml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<type name=\"Magento\\\\Framework\\\\Pricing\\\\Adjustment\\\\Collection\">\n  <arguments>\n    <argument name=\"adjustments\" xsi:type=\"array\">\n      <item name=\"devadj\" xsi:type=\"const\">VENDOR\\\\MODULE\\\\Pricing\\\\Adjustment::ADJUSTMENT_CODE</item>\n    </argument>\n  </arguments>\n</type>\n<type name=\"Magento\\\\Framework\\\\Pricing\\\\Adjustment\\\\Pool\">\n  <arguments>\n     <argument name=\"adjustments\" xsi:type=\"array\">\n        <item name=\"devadj\" xsi:type=\"array\">\n           <item name=\"className\" xsi:type=\"string\">VENDOR\\\\MODULE\\\\Pricing\\\\Adjustment</item>\n           <item name=\"sortOrder\" xsi:type=\"string\">10</item>\n        </item>\n     </argument>\n  </arguments>\n</type>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`VENDOR/MODULE/Pricing/Adjustment.php`}</inlineCode>{` file should look like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`namespace VENDOR\\\\MODULE\\\\Pricing;\n\nuse Magento\\\\Framework\\\\Pricing\\\\Adjustment\\\\AdjustmentInterface;\nuse Magento\\\\Framework\\\\Pricing\\\\SaleableInterface;\n\nclass Adjustment implements AdjustmentInterface\n{\n\n    const ADJUSTMENT_CODE = 'devadj';\n    const ADJUSTMENT_VALUE = 1.79;\n\n    /**\n     * Get adjustment code\n     *\n     * @return string\n     */\n    public function getAdjustmentCode()\n    {\n        return self::ADJUSTMENT_CODE;\n    }\n\n    /**\n     * Define if adjustment is included in base price\n     *\n     * @return bool\n     */\n    public function isIncludedInBasePrice()\n    {\n        return true;\n    }\n\n    /**\n     * Define if adjustment is included in display price\n     *\n     * @return bool\n     */\n    public function isIncludedInDisplayPrice()\n    {\n        return true;\n    }\n\n    /**\n     * Extract adjustment amount from the given amount value\n     *\n     * @param float $amount\n     * @param SaleableInterface $saleableItem\n     * @param null|array $context\n     * @return float\n     */\n    public function extractAdjustment($amount, SaleableInterface $saleableItem, $context = [])\n    {\n        return $amount - self::ADJUSTMENT_VALUE;\n    }\n\n    /**\n     * Apply adjustment amount and return result value\n     *\n     * @param float $amount\n     * @param SaleableInterface $saleableItem\n     * @param null|array $context\n     * @return float\n     */\n    public function applyAdjustment($amount, SaleableInterface $saleableItem, $context = [])\n    {\n        return $amount + self::ADJUSTMENT_VALUE;\n    }\n\n    /**\n     * Check if adjustment should be excluded from calculations along with the given adjustment\n     *\n     * @param string $adjustmentCode\n     * @return bool\n     */\n    public function isExcludedWith($adjustmentCode)\n    {\n        return $this->getAdjustmentCode() === $adjustmentCode;\n    }\n\n    /**\n     * Return sort order position\n     *\n     * @return int\n     */\n    public function getSortOrder()\n    {\n        return 21;\n    }\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ADJUSTMENT_CODE`}</inlineCode>{` constant is a unique code for the adjustment which is added to the `}<inlineCode parentName=\"p\">{`Magento\\\\Framework\\\\Pricing\\\\Adjustment\\\\Collection`}</inlineCode>{` collection.`}</p>\n    <p>{`The adjustment logic is defined in the `}<inlineCode parentName=\"p\">{`extractAdjustment`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`applyAdjustment`}</inlineCode>{` functions.`}</p>\n    <p>{`Price adjustments affect storefront product prices.`}</p>\n    <p>{`Price adjustments `}<strong parentName=\"p\">{`will not`}</strong>{` affect quote item prices, so when a product is added to the cart, any price adjustments defined above are discarded.`}</p>\n    <h2 {...{\n      \"id\": \"add-price-adjustments-for-quote-items\"\n    }}>{`Add price adjustments for quote items`}</h2>\n    <p>{`To add price adjustments for quote items, a custom quote total is added:`}</p>\n    <p>{`Add the following to `}<inlineCode parentName=\"p\">{`VENDOR/MODULE/etc/sales.xml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Sales:etc/sales.xsd\">\n    <section name=\"quote\">\n        <group name=\"totals\">\n            <item name=\"custom-surcharge\" instance=\"VENDOR\\\\MODULE\\\\Model\\\\Quote\\\\Surcharge\" sort_order=\"1000\"/>\n        </group>\n    </section>\n</config>\n`}</code></pre>\n    <p>{`Then in `}<inlineCode parentName=\"p\">{`VENDOR/MODULE/Model/Quote/Surcharge.php`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`namespace VENDOR\\\\MODULE\\\\Model\\\\Quote;\n\nuse Magento\\\\Quote\\\\Api\\\\Data\\\\ShippingAssignmentInterface;\nuse Magento\\\\Quote\\\\Model\\\\Quote\\\\Address\\\\Total;\nuse Magento\\\\Quote\\\\Model\\\\Quote;\n\nclass Surcharge extends \\\\Magento\\\\Quote\\\\Model\\\\Quote\\\\Address\\\\Total\\\\AbstractTotal\n{\n\n   const COLLECTOR_TYPE_CODE = 'custom-surcharge';\n\n   /**\n    * Surcharge constructor.\n    */\n   public function __construct()\n   {\n       $this->setCode(self::COLLECTOR_TYPE_CODE);\n   }\n\n   /**\n    * Collect totals including custom surcharge.\n    *\n    * @param Quote $quote\n    * @param ShippingAssignmentInterface $shippingAssignment\n    * @param Total $total\n    * @return $this\n    */\n   public function collect(\n        Quote $quote,\n        ShippingAssignmentInterface $shippingAssignment,\n        Total $total\n   ) {\n        parent::collect($quote, $shippingAssignment, $total);\n\n        $items = $shippingAssignment->getItems();\n        if (!count($items)) {\n            return $this;\n        }\n\n        $amount = 0;\n        foreach($quote->getItemsCollection() as $_quoteItem){\n            $amount += $_quoteItem->getQty() * \\\\VENDOR\\\\MODULE\\\\Pricing\\\\Adjustment::ADJUSTMENT_VALUE;\n        }\n\n        $total->setTotalAmount(self::COLLECTOR_TYPE_CODE, $amount);\n        $total->setBaseTotalAmount(self::COLLECTOR_TYPE_CODE, $amount);\n        $total->setCustomAmount($amount);\n        $total->setBaseCustomAmount($amount);\n        $total->setGrandTotal($total->getGrandTotal() + $amount);\n        $total->setBaseGrandTotal($total->getBaseGrandTotal() + $amount);\n        return $this;\n   }\n\n  /**\n    * @param Total $total\n    */\n   protected function clearValues(Total $total)\n   {\n       $total->setTotalAmount('subtotal', 0);\n       $total->setBaseTotalAmount('subtotal', 0);\n       $total->setTotalAmount(self::COLLECTOR_TYPE_CODE, 0);\n       $total->setBaseTotalAmount(self::COLLECTOR_TYPE_CODE, 0);\n       $total->setSubtotalInclTax(0);\n       $total->setBaseSubtotalInclTax(0);\n   }\n\n   /**\n    * @param Quote $quote\n    * @param Total $total\n    * @return array\n    */\n   public function fetch(\n       Quote $quote,\n       Total $total\n   ) {\n\n       $amount = 0;\n\n       foreach ($quote->getItemsCollection() as $_quoteItem) {\n            $amount += $_quoteItem->getQty() * \\\\VENDOR\\\\MODULE\\\\Pricing\\\\Adjustment::ADJUSTMENT_VALUE;\n       }\n\n       return [\n           'code' => $this->getCode(),\n           'title' => __('Custom Surcharge Total'),\n           'value' => $amount\n       ];\n   }\n\n   /**\n    * @return \\\\Magento\\\\Framework\\\\Phrase\n    */\n   public function getLabel()\n   {\n       return __('Custom Surcharge');\n   }\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`COLLECTOR_TYPE_CODE`}</inlineCode>{` constant is a unique name of the custom total. The custom total can be retrieved with `}<inlineCode parentName=\"p\">{`Magento\\\\Quote\\\\Model\\\\Quote\\\\Address\\\\Total::getTotalAmount`}</inlineCode>{`, and set with `}<inlineCode parentName=\"p\">{`Magento\\\\Quote\\\\Model\\\\Quote\\\\Address\\\\Total::setTotalAmount`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"display-price-adjusted-totals-on-the-cart-page\"\n    }}>{`Display price-adjusted totals on the cart page`}</h3>\n    <p>{`To display the price-adjusted total on the cart page, we need to create a few files.`}</p>\n    <p>{`First, add the new total:`}</p>\n    <p><inlineCode parentName=\"p\">{`VENDOR/MODULE/view/frontend/layout/checkout_cart_index.xml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n    <body>\n        <referenceBlock name=\"checkout.cart.totals\">\n            <arguments>\n                <argument name=\"jsLayout\" xsi:type=\"array\">\n                    <item name=\"components\" xsi:type=\"array\">\n                        <item name=\"block-totals\" xsi:type=\"array\">\n                            <item name=\"children\" xsi:type=\"array\">\n                                <item name=\"custom-surcharge\" xsi:type=\"array\">\n                                    <item name=\"component\" xsi:type=\"string\">VENDOR_MODULE/js/view/cart/totals/surcharge</item>\n                                    <item name=\"sortOrder\" xsi:type=\"string\">25</item>\n                                    <item name=\"config\" xsi:type=\"array\">\n                                        <item name=\"title\" xsi:type=\"string\" translate=\"true\">Custom Surcharge</item>\n                                    </item>\n                                </item>\n                            </item>\n                        </item>\n                    </item>\n                </argument>\n            </arguments>\n        </referenceBlock>\n    </body>\n</page>\n`}</code></pre>\n    <p>{`Then, define a new component: `}<inlineCode parentName=\"p\">{`VENDOR_MODULE/js/view/cart/totals/surcharge`}</inlineCode>{`:`}</p>\n    <p><inlineCode parentName=\"p\">{`VENDOR/MODULE/view/frontend/web/js/view/cart/totals/surcharge.js`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`define([\n    'Magento_Checkout/js/view/summary/abstract-total',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/model/totals',\n    'mage/translate'\n], function (Component, quote, totals, $t) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'VENDOR_MODULE/summary/surcharge'\n        },\n        totals: quote.getTotals(),\n\n        /**\n         * @return {*|Boolean}\n         */\n        isDisplayed: function () {\n            return this.isFullMode() && this.getPureValue() != 0;\n        },\n\n        /**\n         * Get surcharge title\n         *\n         * @returns {null|String}\n         */\n        getTitle: function () {\n            if (!this.totals()) {\n                return null;\n            }\n\n            return $t('Custom Surcharge');\n        },\n\n        /**\n         * @return {Number}\n         */\n        getPureValue: function () {\n            let amount = 0,\n                customSurchargeTotal;\n\n            if (this.totals()) {\n                customSurchargeTotal = totals.getSegment('custom-surcharge');\n\n                if (customSurchargeTotal) {\n                    amount = customSurchargeTotal.value;\n                }\n            }\n\n            return amount;\n        },\n\n        /**\n         * @return {*|String}\n         */\n        getValue: function () {\n            return this.getFormattedPrice(this.getPureValue());\n        }\n    });\n});\n`}</code></pre>\n    <p>{`Then create the template `}<inlineCode parentName=\"p\">{`VENDOR_MODULE/summary/surcharge`}</inlineCode>{`:`}</p>\n    <p><inlineCode parentName=\"p\">{`VENDOR/MODULE/view/frontend/web/template/summary/surcharge.html`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!-- ko if: isDisplayed() -->\n<tr class=\"totals surcharge\">\n    <th class=\"mark\" scope=\"row\">\n        <span class=\"title\" data-bind=\"text: getTitle()\"></span>\n    </th>\n    <td class=\"amount\">\n        <span class=\"price\" data-bind=\"text: getValue(), attr: {'data-th': name}\"></span>\n    </td>\n</tr>\n<!-- /ko -->\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"display-price-adjusted-total-on-the-checkout-page\"\n    }}>{`Display price-adjusted total on the checkout page`}</h3>\n    <p>{`To display the price-adjusted total on the checkout page, add it to the `}<inlineCode parentName=\"p\">{`totals`}</inlineCode>{` component.`}</p>\n    <p><inlineCode parentName=\"p\">{`VENDOR/MODULE/view/frontend/layout/checkout_index_index.xml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n    <body>\n        <referenceBlock name=\"checkout.root\">\n            <arguments>\n                <argument name=\"jsLayout\" xsi:type=\"array\">\n                    <item name=\"components\" xsi:type=\"array\">\n                        <item name=\"checkout\" xsi:type=\"array\">\n                            <item name=\"children\" xsi:type=\"array\">\n                                <item name=\"sidebar\" xsi:type=\"array\">\n                                    <item name=\"children\" xsi:type=\"array\">\n                                        <item name=\"summary\" xsi:type=\"array\">\n                                            <item name=\"children\" xsi:type=\"array\">\n                                                <item name=\"totals\" xsi:type=\"array\">\n                                                    <item name=\"children\" xsi:type=\"array\">\n                                                        <item name=\"custom-surcharge\" xsi:type=\"array\">\n                                                            <item name=\"component\" xsi:type=\"string\">VENDOR_MODULE/js/view/cart/totals/surcharge</item>\n                                                            <item name=\"sortOrder\" xsi:type=\"string\">25</item>\n                                                            <item name=\"config\" xsi:type=\"array\">\n                                                                <item name=\"title\" xsi:type=\"string\" translate=\"true\">Custom Surcharge</item>\n                                                            </item>\n                                                        </item>\n                                                    </item>\n                                                </item>\n                                            </item>\n                                        </item>\n                                    </item>\n                                </item>\n                            </item>\n                        </item>\n                    </item>\n                </argument>\n            </arguments>\n        </referenceBlock>\n    </body>\n</page>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`VENDOR_MODULE/js/view/cart/totals/surcharge`}</inlineCode>{` component was defined earlier in the article.`}</p>\n    <p>{`If all has gone smoothly, when run, you should see the adjusted price reflected in the shopping cart.`}</p>\n    <h3 {...{\n      \"id\": \"display-price-adjustment-in-order-totals-in-the-admin-ui\"\n    }}>{`Display price adjustment in order totals in the admin UI`}</h3>\n    <p>{`To display the price adjustment as a separate row in the order totals on the order detail page within the admin UI, add it to the `}<inlineCode parentName=\"p\">{`order_totals`}</inlineCode>{` block.`}</p>\n    <p><inlineCode parentName=\"p\">{`VENDOR/MODULE/view/adminhtml/layout/sales_order_view.xml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n    <body>\n        <referenceBlock name=\"order_totals\">\n            <block class=\"VENDOR\\\\MODULE\\\\Block\\\\Adminhtml\\\\Sales\\\\Order\\\\Totals\" name=\"custom_surcharge_total\">\n                <action method=\"setBeforeCondition\">\n                    <argument name=\"condition\" xsi:type=\"string\">tax</argument>\n                </action>\n            </block>\n        </referenceBlock>\n    </body>\n</page>\n`}</code></pre>\n    <p>{`You can adjust the value for `}<inlineCode parentName=\"p\">{`condition`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`setBeforeCondition`}</inlineCode>{` action to change before which row the adjustment is added.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`order_totals`}</inlineCode>{` block triggers the `}<inlineCode parentName=\"p\">{`initTotals()`}</inlineCode>{` method for each child block.`}</p>\n    <p>{`Next we need to define our block.`}</p>\n    <p><inlineCode parentName=\"p\">{`VENDOR/MODULE/Block/Adminhtml/Sales/Order/Totals`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`namespace VENDOR\\\\MODULE\\\\Block\\\\Adminhtml\\\\Sales\\\\Order;\n\nuse Magento\\\\Framework\\\\DataObject;\nuse Magento\\\\Framework\\\\View\\\\Element\\\\Template;\nuse Magento\\\\Framework\\\\View\\\\Element\\\\Template\\\\Context;\nuse Magento\\\\Sales\\\\Model\\\\Order;\nuse VENDOR\\\\MODULE\\\\Pricing\\\\Adjustment;\nuse VENDOR\\\\MODULE\\\\Model\\\\Quote\\\\Surcharge;\n\nclass Totals extends Template\n{\n\n    /**\n     * @var Surcharge\n     */\n    private Surcharge $surcharge;\n\n    /**\n     * @param Context $context\n     * @param Surcharge $surcharge\n     * @param array $data\n     */\n    public function __construct(\n        Context $context,\n        Surcharge $surcharge,\n        array $data = []\n    ) {\n        parent::__construct($context, $data);\n        $this->surcharge = $surcharge;\n    }\n\n    /**\n     * @return $this\n     */\n    public function initTotals()\n    {\n        $adjustmentValue = 0;\n        $items = $this->getParentBlock()->getSource()->getAllItems();\n\n        foreach ($items as $item) {\n            $adjustmentValue += $item->getQtyOrdered() * Adjustment::ADJUSTMENT_VALUE;\n        }\n        \n        if ($adjustmentValue) {\n            $totals = $this->getParentBlock()->getTotals();\n            $total = new DataObject(\n                [\n                    'code' => Surcharge::COLLECTOR_TYPE_CODE,\n                    'label' => $this->surcharge->getLabel(),\n                    'value' => $adjustmentValue,\n                    'base_value' => $adjustmentValue\n                ]\n            );\n\n            if (isset($totals['grand_total_incl'])) {\n                $this->getParentBlock()->addTotalBefore($total, 'grand_total');\n            } else {\n                $this->getParentBlock()->addTotalBefore($total, $this->getBeforeCondition());\n            }\n        }\n        \n        return $this;\n    }\n}\n\n`}</code></pre>\n    <p>{`If all went well you should now see a new row as part of the order totals in the admin UI whenever your price adjustment is applied.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}