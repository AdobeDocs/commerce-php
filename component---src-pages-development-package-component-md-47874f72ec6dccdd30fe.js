"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[76193],{10393:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return d},default:function(){return x}});var t=n(58168),o=n(80045),r=(n(88763),n(15680)),i=n(83407),m=n(58041);const p=["components"],d={},s=(l="InlineAlert",function(e){return console.warn("Component "+l+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)});var l;const c={_frontmatter:d},u=i.A;function x(e){let{components:a}=e,n=(0,o.A)(e,p);return(0,r.mdx)(u,(0,t.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"package-a-component"},"Package a component"),(0,r.mdx)("p",null,"The Adobe Commerce and Magento Open Source applications use Composer packages to distribute, install, and upgrade components in an application instance."),(0,r.mdx)("p",null,"To package a component, you must:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Create a Composer file (",(0,r.mdx)("inlineCode",{parentName:"li"},"composer.json"),")."),(0,r.mdx)("li",{parentName:"ul"},"Register the component using ",(0,r.mdx)("inlineCode",{parentName:"li"},"registration.php")),(0,r.mdx)("li",{parentName:"ul"},"Package and publish your component.")),(0,r.mdx)("h2",{id:"create-a-composer-file"},"Create a Composer file"),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"composer.json")," file defines the name, requirements, version, and other basic information about the component. This file must be placed in the root directory of the module."),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"composer.json")," uses ",(0,r.mdx)("a",{parentName:"p",href:"https://getcomposer.org/doc/04-schema.md"},"Composer's generic schema"),", with the following restrictions:"),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Element"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"name")),(0,r.mdx)("td",{parentName:"tr",align:null},"A fully-qualified component name, in the format ",(0,r.mdx)("inlineCode",{parentName:"td"},"<vendor-name>/<component-name>"),". All letters must be in lowercase. Use dashes in the ",(0,r.mdx)("inlineCode",{parentName:"td"},"<component-name>")," to separate words. Themes must use the format ",(0,r.mdx)("inlineCode",{parentName:"td"},"<vendor-name>/theme-<area>-<theme-name>"),".")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"type")),(0,r.mdx)("td",{parentName:"tr",align:null},"For modules, this value must be set to ",(0,r.mdx)("inlineCode",{parentName:"td"},"magento2-module"),". Other possible types are ",(0,r.mdx)("inlineCode",{parentName:"td"},"metapackage"),", ",(0,r.mdx)("inlineCode",{parentName:"td"},"magento2-theme"),", and ",(0,r.mdx)("inlineCode",{parentName:"td"},"magento2-language"),".")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"autoload")),(0,r.mdx)("td",{parentName:"tr",align:null},"Specify necessary information to be loaded, such as ",(0,r.mdx)("a",{parentName:"td",href:"../build/component-registration.md"},"registration.php"),". For more information, see ",(0,r.mdx)("a",{parentName:"td",href:"https://getcomposer.org/doc/01-basic-usage.md#autoloading"},"Autoloading")," from Composer.")))),(0,r.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"The Commerce Marketplace does not support the Composer ",(0,r.mdx)("inlineCode",{parentName:"p"},"source")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"dist")," properties. All extensions distributed via the Marketplace are installed from the Commerce package repository. If your ",(0,r.mdx)("inlineCode",{parentName:"p"},"composer.json")," contains ",(0,r.mdx)("inlineCode",{parentName:"p"},"source")," or ",(0,r.mdx)("inlineCode",{parentName:"p"},"dist")," properties, it will cause failures in the EQP automation."),(0,r.mdx)(m.A,{mdxType:"Docs"}),(0,r.mdx)("h3",{id:"using-metapackages"},"Using metapackages"),(0,r.mdx)("p",null,"Metapackages allow you to group an extension that consists of multiple packages into a cohesive unit. This works exactly as described in standard ",(0,r.mdx)("a",{parentName:"p",href:"https://getcomposer.org/doc/04-schema.md#type"},"composer.json documentation"),". If you have an extension that uses more than one package you must use a metapackage as the ",(0,r.mdx)("em",{parentName:"p"},"root package"),". Otherwise you should not use metapackage. A metapackage that you submit to Commerce Marketplace should be a .zip file containing only the metapackage ",(0,r.mdx)("inlineCode",{parentName:"p"},"composer.json")," file."),(0,r.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"We recommend metapackages refer to specific component versions. Do not use wildcards to represent version ranges."),(0,r.mdx)("h4",{id:"metapackage-example"},"Metapackage example"),(0,r.mdx)("p",null,"The following example is a ",(0,r.mdx)("inlineCode",{parentName:"p"},"composer.json")," for a metapackage:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'\n{\n    "name": "magento/product-community-edition",\n    "description": "A sample metapackage",\n    "version": "2.0.0",\n    "type": "metapackage",\n    "require": {\n        "php": "~7.2.0||~7.3.0",\n        "zendframework/zend-stdlib": "~2.4.6",\n        "zendframework/zend-code": "~2.4.6",\n        "zendframework/zend-server": "~2.4.6",\n        "zendframework/zend-soap": "~2.4.6",\n        "zendframework/zend-uri": "~2.4.6",\n        "zendframework/zend-validator": "~2.4.6",\n        "zendframework/zend-crypt": "~2.4.6",\n        "zendframework/zend-console": "~2.4.6",\n        "zendframework/zend-modulemanager": "~2.4.6",\n        "zendframework/zend-mvc": "~2.4.6",\n        "zendframework/zend-text": "~2.4.6",\n        "zendframework/zend-i18n": "~2.4.6",\n        "ext-ctype": "*",\n        "ext-gd": "*",\n        "ext-spl": "*",\n        "ext-dom": "*",\n        "ext-simplexml": "*",\n        "ext-mcrypt": "*",\n        "ext-hash": "*",\n        "ext-curl": "*",\n        "ext-iconv": "*",\n        "ext-intl": "*",\n        "ext-xsl": "*",\n        "ext-mbstring": "*",\n        "ext-openssl": "*"\n        },\n    "license": [\n        "OSL-3.0",\n        "AFL-3.0"\n    ]\n}\n\n')),(0,r.mdx)("h3",{id:"sample-composerjson-file"},"Sample composer.json file"),(0,r.mdx)("p",null,"The following example is a ",(0,r.mdx)("inlineCode",{parentName:"p"},"composer.json")," file for a module:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "magento/sample-module-newpage",\n  "description": "A module that creates a new page",\n  "type": "magento2-module",\n  "version": "1.0.0",\n  "license": [\n    "OSL-3.0",\n    "AFL-3.0"\n  ],\n  "require": {\n    "php": "~7.2.0||~7.3.0",\n    "magento/framework": "~100.0.4"\n  },\n  "autoload": {\n    "files": [ "registration.php" ],\n    "psr-4": {\n      "Magento\\\\SampleNewPage\\\\": ""\n    }\n  }\n}\n\n')),(0,r.mdx)("h2",{id:"package-and-publish-your-extension"},"Package and publish your extension"),(0,r.mdx)("p",null,"Create a package of your extension by performing a zip operation on the directory with your extension (excluding unnecessary directories). For example:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-bash"},"zip -r vendor-name_package-name-1.0.0.zip package-path/ -x 'package-path/.git/*'\n")),(0,r.mdx)("p",null,"Use alphanumeric characters for the package filename with dashes to separate words. Do not use whitespaces."),(0,r.mdx)("p",null,"The application can retrieve your extension package from any valid GitHub URL."),(0,r.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"Third-party repositories are supported."),(0,r.mdx)("h3",{id:"hosting-on-github-and-packagist"},"Hosting on GitHub and Packagist"),(0,r.mdx)("p",null,"Prerequisite: Git must be set up on your machine."),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Navigate to your component directory, with the ",(0,r.mdx)("inlineCode",{parentName:"p"},"composer.json")," file in the root, and make it a new Git repository. See the ",(0,r.mdx)("a",{parentName:"p",href:"https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/"},"GitHub documentation")," for details.")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"When you have committed and pushed your component to your GitHub repository, you can either:"),(0,r.mdx)("ul",{parentName:"li"},(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("p",{parentName:"li"},"Use ",(0,r.mdx)("a",{parentName:"p",href:"https://getcomposer.org/doc/05-repositories.md#vcs"},"Composer to refer to it directly"),", or")),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("p",{parentName:"li"},"Use the following steps to refer to the package through Packagist."),(0,r.mdx)("ol",{parentName:"li"},(0,r.mdx)("li",{parentName:"ol"},"Register an account at ",(0,r.mdx)("a",{parentName:"li",href:"https://packagist.org/"},"packagist.org"),"."),(0,r.mdx)("li",{parentName:"ol"},"Click the Submit Package button and paste your GitHub repository link. Packagist automatically gathers the information from the component's ",(0,r.mdx)("inlineCode",{parentName:"li"},"composer.json")," file and link it to the GitHub repository, allowing you to reference the package as ",(0,r.mdx)("inlineCode",{parentName:"li"},"vendor/module")," without any additional repository information, because this is required solely using GitHub.")))))),(0,r.mdx)("h3",{id:"hosting-on-a-private-repository"},"Hosting on a private repository"),(0,r.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"A private repository can be used for development or private code but installation must be done with a command line interface (you can install a package that specifies a private repository only with a command line installation)."),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Set up your own Composer packaging repository using a system such as ",(0,r.mdx)("a",{parentName:"p",href:"https://getcomposer.org/doc/articles/handling-private-packages-with-satis.md"},"Satis")," or ",(0,r.mdx)("a",{parentName:"p",href:"https://packagist.com/"},"Private Packagist"),".")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Create the package in a way similar to the described above.")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Submit/register the package on your own repository. For example, it can be hosted as a reference to a code repository or submitted as a zip-archive.")),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"To use the private packaging repository in a project, add the following to your ",(0,r.mdx)("inlineCode",{parentName:"p"},"composer.json")," file:"),(0,r.mdx)("pre",{parentName:"li"},(0,r.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "repositories": [\n        {\n            "type": "composer",\n            "url": [repository url here]\n        }\n    ]\n}\n')))),(0,r.mdx)("p",null,"All packages on the private repository can now be referenced within the ",(0,r.mdx)("inlineCode",{parentName:"p"},"require")," field."),(0,r.mdx)("p",null,"Refer to the ",(0,r.mdx)("a",{parentName:"p",href:"https://packagist.com/features/private-vcs-packages"},"official documentation")," for more details on how to configure your project to use Private Packagist."))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-development-package-component-md-47874f72ec6dccdd30fe.js.map