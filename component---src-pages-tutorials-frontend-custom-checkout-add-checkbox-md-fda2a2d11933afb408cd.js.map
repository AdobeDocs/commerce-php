{"version":3,"file":"component---src-pages-tutorials-frontend-custom-checkout-add-checkbox-md-fda2a2d11933afb408cd.js","mappings":"qRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,0DACH,2DACL,kBAAK,sGACL,kBAAK,oOACL,kBAAK,4DACL,oBACE,eAAIC,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,mEACL,0CAA8C,YAAU,uBAAYA,WAAW,MAAO,oEAAiF,YAC9K,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,mCACL,wCAAsC,uBAAYA,WAAW,KAAM,WAA2B,MACrG,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,kDACL,4DAAgE,OAEzE,eACE,GAAM,kEACH,oCAAkC,uBAAYA,WAAW,MAAO,mBAAgC,sBACrG,kBAAK,oEAAkE,uBAAYA,WAAW,KAAM,sDAAmE,uKACvK,qBAAK,iBAAMA,WAAW,MAClB,UAAa,+BACV,klIAsGP,kBAAK,kDAAgD,cAAGA,WAAW,IAC/D,KAAQ,8CACL,0BAA8B,MACrC,eACE,GAAM,kCACH,qCACL,kBAAK,OAAK,uBAAYA,WAAW,KAAM,yCAAsD,6GAA2G,uBAAYA,WAAW,KAAM,+BAA4C,MACjR,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,gXAOP,eACE,GAAM,iDACH,mDACL,kBAAK,oEAAkE,uBAAYA,WAAW,KAAM,6DAA0E,iFAA+E,uBAAYA,WAAW,KAAM,iDAA8D,UAAQ,uBAAYA,WAAW,KAAM,oBAAiC,uHAC9Z,qBAAK,iBAAMA,WAAW,MAClB,UAAa,eACV,owDAyDP,eACE,GAAM,gDACH,kDACL,oBACE,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,sBACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,qCAGT,eAAIA,WAAW,OACb,cAAGA,WAAW,MAAO,2BACrB,gBAAKA,WAAW,OAAK,iBAAMA,WAAW,MAClC,UAAa,iBACV,gDAMd,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/tutorials/frontend/custom-checkout/add-checkbox.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-custom-fields-that-influence-other-checkout-fields\"\n    }}>{`Add custom fields that influence other checkout fields`}</h1>\n    <p>{`This topic describes how to add a custom field that influences other fields on the checkout page.`}</p>\n    <p>{`Let's consider a case where you need to add a checkbox whose state (selected or cleared) changes the state of other fields: when the checkbox is selected, the Shipping Address fields get prepopulated with a certain address.`}</p>\n    <p>{`To implement such a checkbox, take the following steps:`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-1-create-a-plugin-for-the-layoutprocessors-process-method\"\n        }}>{`Create a plugin for the process method`}</a>{` of the `}<inlineCode parentName=\"li\">{`<Magento_Checkout_module_dir>/Block/Checkout/LayoutProcessor.php`}</inlineCode>{` class.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-2-declare-plugin-in-dixml\"\n        }}>{`Declare the plugin in your module's `}<inlineCode parentName=\"a\">{`di.xml`}</inlineCode></a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-3-create-a-js-component-for-the-checkbox\"\n        }}>{`Create a JS component for the checkbox with custom logic`}</a>{`.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"step-1-create-a-plugin-for-the-layoutprocessors-process-method\"\n    }}>{`Step 1: Create a plugin for the `}<inlineCode parentName=\"h2\">{`LayoutProcessor`}</inlineCode>{`'s process method`}</h2>\n    <p>{`In your custom module directory, create the following new file: `}<inlineCode parentName=\"p\">{`<your_module_dir>/Block/Checkout/SomeProcessor.php`}</inlineCode>{`. In this file, add the following code sample. This is a plugin that adds a checkbox, makes the street labels trackable, and assigns dependencies to the checkbox.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php?start_inline=1\"\n      }}>{`namespace Magento\\\\Checkout\\\\Block\\\\Checkout;\n\nclass SomeProcessor\n{\n    /**\n     * Checkout LayoutProcessor after process plugin.\n     *\n     * @param \\\\Magento\\\\Checkout\\\\Block\\\\Checkout\\\\LayoutProcessor $processor\n     * @param array $jsLayout\n     * @return array\n     */\n    public function afterProcess(\\\\Magento\\\\Checkout\\\\Block\\\\Checkout\\\\LayoutProcessor $processor, $jsLayout)\n    {\n        $shippingConfiguration = &$jsLayout['components']['checkout']['children']['steps']['children']['shipping-step']\n            ['children']['shippingAddress']['children']['shipping-address-fieldset']['children'];\n        $billingConfiguration = &$jsLayout['components']['checkout']['children']['steps']['children']['billing-step']\n        ['children']['payment']['children']['payments-list']['children'];\n\n        //Checks if shipping step available.\n        if (isset($shippingConfiguration)) {\n            $shippingConfiguration = $this->processAddress(\n                $shippingConfiguration,\n                'shippingAddress',\n                [\n                    'checkoutProvider',\n                    'checkout.steps.shipping-step.shippingAddress.shipping-address-fieldset.street',\n                    'checkout.steps.shipping-step.shippingAddress.shipping-address-fieldset.city',\n                    'checkout.steps.shipping-step.shippingAddress.shipping-address-fieldset.country_id'\n                ]\n            );\n        }\n\n        //Checks if billing step available.\n        if (isset($billingConfiguration)) {\n            //Iterate over billing forms.\n            foreach($billingConfiguration as $key => &$billingForm) {\n                //Exclude not billing forms\n                if (!strpos($key, '-form')) {\n                    continue;\n                }\n\n                $billingForm['children']['form-fields']['children'] = $this->processAddress(\n                    $billingForm['children']['form-fields']['children'],\n                    $billingForm['dataScopePrefix'],\n                    [\n                        'checkoutProvider',\n                        'checkout.steps.billing-step.payment.payments-list.' . $key . '.form-fields.street',\n                        'checkout.steps.billing-step.payment.payments-list.' . $key . '.form-fields.city',\n                        'checkout.steps.billing-step.payment.payments-list.' . $key . '.form-fields.country_id'\n                    ]\n                );\n            }\n        }\n\n        return $jsLayout;\n    }\n\n    /**\n     * Process provided address to contains checkbox and have trackable address fields.\n     *\n     * @param $addressFieldset - Address fieldset config.\n     * @param $dataScope - data scope\n     * @param $deps - list of dependencies\n     * @return array\n     */\n    private function processAddress($addressFieldset, $dataScope, $deps)\n    {\n        //Creates checkbox.\n        $addressFieldset['custom_checkbox'] = [\n            'component' => 'Magento_Checkout/js/single-checkbox',\n            'config' => [\n                'customScope' => $dataScope,\n                'template' => 'ui/form/field',\n                'prefer' => 'checkbox'\n            ],\n            'dataScope' => $dataScope . '.custom_checkbox',\n            'deps' => $deps,\n            'label' => __('Army Address'),\n            'provider' => 'checkoutProvider',\n            'visible' => true,\n            'initialValue' => false,\n            'sortOrder' => 10,\n            'valueMap' => [\n                'true' => true,\n                'false' => false\n            ]\n        ];\n\n        //Makes each address field label trackable.\n        if (isset($addressFieldset['street']['children'])) {\n            foreach($addressFieldset['street']['children'] as $key => $street) {\n                $street['tracks']['label'] = true;\n                //Remove .additional class. Can be removed, but style fix provided instead.\n                $street['additionalClasses'] = '';\n                $addressFieldset['street']['children'][$key] = $street;\n            }\n        }\n\n        return $addressFieldset;\n    }\n}\n`}</code></pre>\n    <p>{`For more information on creating plugins, see `}<a parentName=\"p\" {...{\n        \"href\": \"../../../development/components/plugins.md\"\n      }}>{`Plugins (Interceptors)`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"step-2-declare-plugin-in-dixml\"\n    }}>{`Step 2: Declare plugin in di.xml`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`<your_module_dir>/etc/frontend/di.xml`}</inlineCode>{`, declare the plugin you created on the previous step. The plugin name is arbitrary, in our example it's `}<inlineCode parentName=\"p\">{`ProcessAddressConfiguration`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n    <type name=\"Magento\\\\Checkout\\\\Block\\\\Checkout\\\\LayoutProcessor\">\n        <plugin name=\"ProcessAddressConfiguration\" type=\"Magento\\\\Checkout\\\\Block\\\\Checkout\\\\SomeProcessor\"/>\n    </type>\n</config>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-3-create-a-js-component-for-the-checkbox\"\n    }}>{`Step 3: Create a JS component for the checkbox`}</h2>\n    <p>{`In your custom module directory, create the following new file: `}<inlineCode parentName=\"p\">{`<your_module_dir>/view/frontend/web/js/single-checkbox.js`}</inlineCode>{`. In this file, add the following code. This is  a JS component that extends `}<inlineCode parentName=\"p\">{`Magento_Ui/js/form/element/single-checkbox.js`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`onCheckedChanged`}</inlineCode>{` method calls the methods that update street labels, change the city and country values, and disable these fields:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`define([\n    'Magento_Ui/js/form/element/single-checkbox',\n    'mage/translate'\n], function (AbstractField, $t) {\n    'use strict';\n\n    return AbstractField.extend({\n        defaults: {\n            streetLabels: [$t('Company / Section / Unit'), $t('Post Sector Type'), $t('Post Sector')],\n            modules: {\n                street: '\\${ $.parentName }.street',\n                city: '\\${ $.parentName }.city',\n                country: '\\${ $.parentName }.country_id'\n            }\n        },\n\n        updateStreetLabels: function () {\n            if (this.value()) {\n                this.street().elems.each(function (street, key) {\n                    this.street().elems()[key].set('label', this.streetLabels[key]);\n                }.bind(this));\n            } else {\n                this.street().elems.each(function (street, key) {\n                    this.street().elems()[key].set('label', '');\n                }.bind(this));\n            }\n        },\n\n        updateCity: function () {\n            if (this.value()) {\n                this.city().value('Kyiv');\n                this.city().disabled(true);\n            } else {\n                this.city().value('');\n                this.city().disabled(false);\n            }\n        },\n\n        updateCountry: function () {\n            if (this.value()) {\n                this.country().value('UA');\n                this.country().disabled(true);\n            } else {\n                this.country().value('');\n                this.country().disabled(false);\n            }\n        },\n\n        onCheckedChanged: function () {\n            this._super();\n            this.updateStreetLabels();\n            this.updateCity();\n            this.updateCountry();\n        }\n    });\n});\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-4-compile-and-deploy-the-static-content\"\n    }}>{`Step 4: Compile and deploy the static content`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Compile the code:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento setup:di:compile\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Deploy static content:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento setup:static-content:deploy\n`}</code></pre>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}