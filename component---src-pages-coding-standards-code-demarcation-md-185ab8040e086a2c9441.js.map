{"version":3,"file":"component---src-pages-coding-standards-code-demarcation-md-185ab8040e086a2c9441.js","mappings":"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","sources":["webpack://commerce-php/./src/pages/coding-standards/code-demarcation.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"code-demarcation-standard\"\n    }}>{`Code demarcation standard`}</h1>\n    <p>{`Core developers must follow the code demarcation standard.`}</p>\n    <p>{`This standard is recommended for third-party `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/extension\"\n      }}>{`extension`}</a>{` developers.`}</p>\n    <p>{`Some parts of code might not comply with the standard, but we are working to gradually improve this.`}</p>\n    <p>{`The standard was developed in the scope of our efforts to ensure the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Decouple visual (CSS) layer from the functional (JavaScript) layer.`}</li>\n      <li parentName=\"ul\">{`Decouple functional (JavaScript) layer from the `}<a parentName=\"li\" {...{\n          \"href\": \"https://glossary.magento.com/markup\"\n        }}>{`markup`}</a>{` (HTML).`}</li>\n      <li parentName=\"ul\">{`Reinstate emphasis on using of `}<a parentName=\"li\" {...{\n          \"href\": \"https://glossary.magento.com/jquery\"\n        }}>{`jQuery`}</a>{` templates.`}</li>\n      <li parentName=\"ul\">{`Reinstate emphasis on decoupling HTML, `}<a parentName=\"li\" {...{\n          \"href\": \"https://glossary.magento.com/css\"\n        }}>{`CSS`}</a>{` and JS from `}<a parentName=\"li\" {...{\n          \"href\": \"https://glossary.magento.com/php\"\n        }}>{`PHP`}</a>{` classes.`}</li>\n    </ul>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.ietf.org/rfc/rfc2119.txt\"\n      }}>{`RFC 2119`}</a>{` to interpret the \"MUST,\" \"MUST NOT,\" \"REQUIRED,\" \"SHALL,\" \"SHALL NOT,\" \"SHOULD,\" \"SHOULD NOT,\" \"RECOMMENDED,\" \"MAY,\" and \"OPTIONAL\" keywords.`}</p>\n    <h2 {...{\n      \"id\": \"semantics\"\n    }}>{`Semantics`}</h2>\n    <h3 {...{\n      \"id\": \"attribute-names-and-values\"\n    }}>{`Attribute names and values`}</h3>\n    <p>{`For attribute names and values you must use meaningful unabbreviated lowercase words comprised of Latin characters concatenated with a hyphen (`}<inlineCode parentName=\"p\">{`-`}</inlineCode>{`)`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Helps simplify and unify naming conventions that are used to apply visual styles to page elements.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Acceptable:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<section id=\"information-dialog-tree\">\n   <p> ... </p>\n   <p> ... </p>\n</section>\n<a href=\"#information-dialog-tree\">Scroll to text</a>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<section id=\"some_id\">\n   <p> ... </p>\n   <p> ... </p>\n</section>\n<section id=\"some_id\">\n   <p> ... </p>\n   <p> ... </p>\n</section>\n<a href=\"#some_id\">Scroll to text</a>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"attribute-ids\"\n    }}>{`Attribute IDs`}</h3>\n    <p>{`Semantic representation may rely on ID attribute`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Forces engineers to think about reusable page components instead of unique singleton components.`}</li>\n      <li parentName=\"ul\">{`Reduces long-term maintenance efforts.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Acceptable `}<a parentName=\"strong\" {...{\n          \"href\": \"https://glossary.magento.com/phtml\"\n        }}>{`PHTML`}</a>{` template:`}</strong></p>\n    <p>{`The following acceptable example is terse and uses an Accessible Rich Internet Applications (ARIA) approach.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<ul>\n   <li class=\"first\" type=\"button\" aria-pressed=\"false\" aria-controls=\"some-id\">button 1</li>\n   <li type=\"button\" aria-pressed=\"false\" aria-controls=\"some-id\">button 2</li>\n   <li type=\"button\" aria-pressed=\"true\" aria-controls=\"some-id\">button 3</li>\n</ul>\n<div>\n   <label for=\"some-id\">Enter text</label>\n   <textarea id=\"some-id\"></textarea>\n</div>\n<a href=\"#some-id\">Scroll to text</a>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable combination of PHTML, JavaScript, and CSS files:`}</strong></p>\n    <p>{`The following unacceptable example replaces a single PHTML file with a combination of a PHTML, JavaScript, and CSS files.`}</p>\n    <p><strong parentName=\"p\">{`PHTML file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<ul id=\"my-special-menu\">\n   <li id=\"buttonId1\" class=\"first\" type=\"button\">button 1</li>\n   <li id=\"buttonId2\" type=\"button\">button 2</li>\n   <li id=\"buttonId3\" type=\"button\">button 3</li>\n</ul>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`JavaScript file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`$('#my-special-menu').on('click','li[id^=\"button\"]', function() { ... })\n`}</code></pre>\n    <p><strong parentName=\"p\">{`CSS file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`#my-special-menu { ... }\n#my-special-menu > li { ... }\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"presentation-and-content\"\n    }}>{`Presentation and content`}</h3>\n    <p>{`You must follow the separation of presentation and content methodology`}</p>\n    <p>{`The following list will help you make a distinction between the actual meaning of a document, and how this meaning is presented to its readers:`}</p>\n    <p><strong parentName=\"p\">{`Content (Semantics)`}</strong>{` includes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`logic`}</li>\n      <li parentName=\"ul\">{`information`}</li>\n      <li parentName=\"ul\">{`data`}</li>\n      <li parentName=\"ul\">{`model`}</li>\n      <li parentName=\"ul\">{`outline`}</li>\n      <li parentName=\"ul\">{`message`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Presentation`}</strong>{` includes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`aesthetic`}</li>\n      <li parentName=\"ul\">{`graphics`}</li>\n      <li parentName=\"ul\">{`design`}</li>\n      <li parentName=\"ul\">{`style`}</li>\n      <li parentName=\"ul\">{`visualization`}</li>\n      <li parentName=\"ul\">{`view`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"html-markup\"\n    }}>{`HTML markup`}</h3>\n    <p>{`You must use semantic HTML markup only, and must not use presentation markup`}</p>\n    <p><strong parentName=\"p\">{`Acceptable:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<p>HTML has been created to <strong>semantically</strong> represent documents.</p>\n<p><strong>Warning:</strong> Following the procedure described below may irreparably damage your equipment.</p>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<p>HTML has been created to <b>semantically</b> represent documents.</p>\n<p><b>Warning:</b> Following the procedure described below may irreparably damage your equipment.</p>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"code-demarcation\"\n    }}>{`Code demarcation`}</h2>\n    <h3 {...{\n      \"id\": \"visual-representation\"\n    }}>{`Visual representation`}</h3>\n    <p>{`Visual representation must rely only on HTML `}<inlineCode parentName=\"p\">{`class`}</inlineCode>{` attributes, CSS pseudo-classes and pseudo-elements, HTML tags, and form element's type attribute and form elements state attributes (example: `}<inlineCode parentName=\"p\">{`disabled`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`checked`}</inlineCode>{`).`}</p>\n    <p>{`As the first option, you are required to use `}<a parentName=\"p\" {...{\n        \"href\": \"https://glossary.magento.com/html\"\n      }}>{`HTML`}</a>{` class attributes. In case this option is not applicable then it is recommended to use HTML tags and form element's type attribute.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Enforces clean, strict separation between visual and business logic layers.`}</li>\n      <li parentName=\"ul\">{`Allows `}<a parentName=\"li\" {...{\n          \"href\": \"https://glossary.magento.com/frontend\"\n        }}>{`frontend`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"https://glossary.magento.com/backend\"\n        }}>{`backend`}</a>{` teams to work independently.`}</li>\n      <li parentName=\"ul\">{`Allows changing look and feel without affecting business functionality, and vice versa.`}</li>\n      <li parentName=\"ul\">{`Enables frontend teams to clean up old styles quickly and easily when refactoring.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Acceptable CSS selectors:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.notices-wrapper { ... }\n.page-header:after { ... }\n.payment-list:first-child { ... }\n.caution { ... }\n.caution.link { ... }\nform input[type=\"password\"] { ... }\n.control-text:focus { ... }\na:hover { ... }\nnav li._active { ... }\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable CSS selectors:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`#header { ... }\n[data-action=\"delete\"] { ... }\nform input[name=\"password\"] { ... }\nsection[role=\"main\"] { ... }\n[role=\"menu] [role=\"menuitem\"] { ... }\n[role=\"menu] [role=\"menuitem\"].active { ... }\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"hard-coded-css-styles\"\n    }}>{`Hard-coded CSS styles`}</h3>\n    <p>{`You must not hard-code CSS styles in JavaScript files`}</p>\n    <p>{`Exception: CSS attributes where values must be calculated beyond the css-topics/LESS code.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Simplifies change of the default look and feel by adding CSS classes to and removing them from elements.`}</li>\n      <li parentName=\"ul\">{`Improves style extensibility.`}</li>\n      <li parentName=\"ul\">{`Reduces long-term maintenance efforts by containing CSS styles in a single place.'`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Acceptable `}<a parentName=\"strong\" {...{\n          \"href\": \"https://glossary.magento.com/javascript\"\n        }}>{`JavaScript`}</a>{` `}<a parentName=\"strong\" {...{\n          \"href\": \"https://glossary.magento.com/widget\"\n        }}>{`widget`}</a>{` file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`...\n   options: {\n      hOffset: 0,\n      myCustomElement: '[data-container=\"my-custom-element\"]',\n hiddenClass: '_hidden'\n  }\n...\n   this.element.toggleClass(this.options.hiddenClass);\n...\n   this.options.hOffset = /* calculation based on dimensions of some DOM elements within a widget */\n   this.element.find(this.options.myCustomElement).css({'margin-top', this.options.hOffset + 'px'});\n...\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable JavaScript file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`this.element.on('click', function() {\n   if ($(this).is(':visible')) {\n      $(this).css({ visibility: 'hidden' });\n   } else {\n      $(this).css({ visibility: 'visible' });\n   }\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"inline-css-styles\"\n    }}>{`Inline CSS styles`}</h3>\n    <p>{`You must not use inline CSS styles inside HTML tags`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Improves style extensibility allowing engineers to overload styles easier by toggling classes.`}</li>\n      <li parentName=\"ul\">{`Enforces clean, strict separation between visual presentation and markup.`}</li>\n      <li parentName=\"ul\">{`Enables frontend teams quickly and easily clean up old styles.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Acceptable PHTML template:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<div class=\"no-display\"> ... </div>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable PHTML template:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<div style=\"display: none;\"> ... </div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"business-logic-and-javascript\"\n    }}>{`Business logic and JavaScript`}</h2>\n    <p>{`Business logic must rely on only the form, form element name attributes, or data attributes`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Enforces clean, strict separation between visual and business logic layers.`}</li>\n      <li parentName=\"ul\">{`Allows frontend and backend teams to work independently.`}</li>\n      <li parentName=\"ul\">{`Allows changing business logic without affecting styling and vice versa.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Acceptable PHTML template:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<div data-action=\"delete\" data-mage-init=\"{myWidget: [option1: 'string']}\"></div>\n<div data-role=\"tooltip\">More details</div>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Acceptable JavaScript file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`options {\n deleteAction:  '[data-action=\"delete\"]',\n tooltip: '[data-role=\"tooltip\"]'\n}\n...\nthis.element.find(this.options.deleteAction).on( ... );\nthis.element.on('click', this.options.deleteAction , function() { ... });\n...\n// Globally initialized widgets\n$( this.options.tooltip).tooltip();  // Globally for ALL tooltip elements\n...\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable PHTML file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div id=\"my-widget\"></div>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable JavaScript file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`$('#my-widget').doSomething();\n$('.parent').on('click', '.button', function() { ... });\n$('form').validate();\n$('[role=\"menu\"]').navigation();\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"html-helper-classes\"\n    }}>{`HTML helper classes`}</h3>\n    <p>{`You must assign HTML helper classes in JavaScript to modify presentation layer`}</p>\n    <p>{`HTML helper class names added in JavaScript REQUIRE underscore symbol (\"_\") at the beginning and must be written in lowercase.`}</p>\n    <p><strong parentName=\"p\">{`Acceptable:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"tab-element _active\">Content</div>\n<div class=\"sales-transactions _open\">Content</div>\n<div class=\"billing-agreement _expanded\">Content</div>\n<div class=\"sales-report _hidden\">Content</div>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"tab-element active\">Content</div>\n<div class=\"sales-transactions open\">Content</div>\n<div class=\"billing-agreement expanded\">Content</div>\n<div class=\"sales-report hidden\">Content</div>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"dom-elements\"\n    }}>{`DOM elements`}</h3>\n    <p>{`You must not select DOM elements based on HTML structure`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Allows frontend teams to modify markup and themes without affecting business logic.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Acceptable JavaScript file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`this.element.find('[data-action=\"edit\"]');\nthis.elements.closest('[data-container]');\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable JavaScript file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`this.element.children().children().html('hello world');\nthis.element.parent().find('[data-action=\"edit\"]').data('entity_id');\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"jquery-templates\"\n    }}>{`jQuery templates`}</h3>\n    <p>{`You must use jQuery templates to insert recurring markup into DOM structure`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Reinstates emphasis on jQuery templates. For more information, see JavaScript Coding Best Practices.`}</li>\n      <li parentName=\"ul\">{`Reduces long-term maintenance efforts by having markup code stored in one place.`}</li>\n      <li parentName=\"ul\">{`Simplifies frontend debugging efforts.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"phtml-templates-and-php-files\"\n    }}>{`PHTML templates and PHP files`}</h2>\n    <h3 {...{\n      \"id\": \"hard-coded-css-styles-1\"\n    }}>{`Hard-coded CSS styles`}</h3>\n    <p>{`You must not hard-code inline CSS styles in PHP classes`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Reduces long-term maintenance efforts by having styles stored in one place.`}</li>\n      <li parentName=\"ul\">{`Simplifies debugging and reduces number of files to be modified.`}</li>\n      <li parentName=\"ul\">{`Makes styles more extensible and easier to override when needed.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Acceptable PHP file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`...\n$fieldset->addField('new_category_parent', 'text', [\n    'label'    => __('Parent Category'),\n    'title'    => __('Parent Category'),\n    'required' => true,\n    'class'    => 'parent category',\n]);\n...\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable PHP file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`...\n$fieldset->addField('new_category_parent', 'text', [\n    'label'    => __('Parent Category'),\n    'title'    => __('Parent Category'),\n    'required' => true,\n    'style'    => 'border: 1px solid #ccc;',\n]);\n...\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"inline-javascript\"\n    }}>{`Inline JavaScript`}</h3>\n    <p>{`You must not hard-code inline JavaScript in PHP classes`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Reduces long term maintenance by having frontend business logic stored in one place.`}</li>\n      <li parentName=\"ul\">{`Reduces the number of files to be modified.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Acceptable PHP file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`...\npublic function getSelectorOptions()\n{\n    return $selectorOptions;\n}\n...\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Acceptable PHTML template:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`...\n<div data-mage-init=\"{treeSuggest: [<?php echo $this->getSelectorOptions(); ?>]}\"></div>\n...\n`}</code></pre>\n    <p>{`or`}</p>\n    <p><strong parentName=\"p\">{`Acceptable PHTML template:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`...\n<div data-role=\"treeSuggest\"></div>\n<script type=\"text/x-magento-init\">\n{\n    \"[data-role='treeSuggest']\": {\n        \"treeSuggest\": <?php echo $this->getSelectorOptions(); ?>\n    }\n}\n</script>\n...\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable PHP file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`...\npublic function getAfterElementHtml()\n{\n    return <<<HTML\n<script>\njQuery('#{$htmlId}-suggest').treeSuggest({$selectorOptions});\n</script>\n...\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable PHTML template:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php echo $this->getAfterElementHtml(); ?>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"html-markup-1\"\n    }}>{`HTML markup`}</h3>\n    <p>{`You must not hard-code HTML markup (used in the `}<inlineCode parentName=\"p\">{`<body>`}</inlineCode>{` tag) in PHP classes`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Reduces long-term maintenance efforts by having markup stored in one place.`}</li>\n      <li parentName=\"ul\">{`Reduces the number of files to be modified.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Acceptable PHP file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`...\npublic function getAttributeName($element)\n{\n    return ($element->getExtType() === 'multiple') ? $element->getId() . '_checkbox' : NULL;\n}\n\npublic function getAttributeId($element)\n{\n    return $element->getId();\n}\n...\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Acceptable PHTML template:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<span class=\"attribute-change-checkbox\">\n<label>\n   <input type=\"checkbox\"\n      <?php echo ($this->getAttributeName($element)) ? ' name=\"' . $this->getAttributeName($element) . '\"' : NULL; ?>\n      data-mage-init=\"{customToggleWidget: [elementSelector: \"input[name='someCustomName']\"]}\" />\n   <?php echo __('Change'); ?>\n</label>\n</span>\n<!-- jQuery.hide() code can be either located in the widget itself OR can ask PHP Block class whether or not 'weight_and_type_switcher' should be visible. Based on this condition CSS can be applied to hide/show those elements. -->\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable PHP file:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`...\npublic function getCheckbox($elementName){\n    $elementNameTag = $this->getAttributeName($elementName) ? 'name=\"' . $this->getAttributeName($elementName) . '\"' : NULL;\n    $tpl = \"<input type=\\\\\"checkbox\\\\\" {$elementNameTag} data-mage-init=\\\\\"{customToggleWidget: [elementSelector: \\\\\"input[name='someCustomName']\\\\\"]}\\\\\" />\";\n    return $tpl;\n}\n...\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Unacceptable PHTML template:`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<span class=\"attribute-change-checkbox\">\n   <label>\n      <?php echo $this->getCheckbox($element)?>\n      <?php echo __('Change'); ?>\n   </label>\n</span>\n<!-- jQuery.hide() code can be either located in the widget itself OR can ask PHP Block class whether or not 'weight_and_type_switcher' should be visible. Based on this condition CSS can be applied to hide/show those elements. -->\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}