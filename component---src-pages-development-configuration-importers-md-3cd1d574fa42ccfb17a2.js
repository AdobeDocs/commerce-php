"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[77100],{64900:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return d},default:function(){return c}});var a,r=t(87462),o=t(63366),m=(t(15007),t(64983)),i=t(91515),p=["components"],d={},l=(a="InlineAlert",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,m.mdx)("div",e)}),s={_frontmatter:d},u=i.Z;function c(e){var n=e.components,t=(0,o.Z)(e,p);return(0,m.mdx)(u,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,m.mdx)("h1",{id:"configuration-importers"},"Configuration importers"),(0,m.mdx)("p",null,"A configuration importer provides consistent configurations across multiple systems (such as development, staging, and production).\nThis is useful for deployment strategies such as ",(0,m.mdx)("a",{parentName:"p",href:"https://devdocs.magento.com/guides/v2.4/config-guide/deployment/pipeline/"},"pipeline deployment"),"."),(0,m.mdx)("p",null,"Adobe Commerce and Magento Open Source use configuration importers to import configuration data from the shared configuration file, ",(0,m.mdx)("inlineCode",{parentName:"p"},"config.php"),", to the appropriate storage, such as a database."),(0,m.mdx)("p",null,"Use the ",(0,m.mdx)("a",{parentName:"p",href:"https://devdocs.magento.com/guides/v2.4/config-guide/cli/config-cli-subcommands-config-mgmt-import.html"},(0,m.mdx)("inlineCode",{parentName:"a"},"magento app:config:import")," command")," to import the configuration from the command line."),(0,m.mdx)("p",null,"Currently, the application has the following importers:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"Magento\\Config\\Model\\Config\\Importer")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"Magento\\Store\\Model\\Config\\Importer")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("inlineCode",{parentName:"li"},"Magento\\Theme\\Model\\Config\\Importer"))),(0,m.mdx)("h2",{id:"importerinterface"},(0,m.mdx)("inlineCode",{parentName:"h2"},"ImporterInterface")),(0,m.mdx)("p",null,"All importers implement the interface ",(0,m.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/App/DeploymentConfig/ImporterInterface.php"},(0,m.mdx)("inlineCode",{parentName:"a"},"Magento\\Framework\\App\\DeploymentConfig\\ImporterInterface"))," and define the following methods:"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},(0,m.mdx)("inlineCode",{parentName:"p"},"import(array $data)")," - The argument ",(0,m.mdx)("inlineCode",{parentName:"p"},"$data")," is the configuration array from ",(0,m.mdx)("inlineCode",{parentName:"p"},"config.php"),"."),(0,m.mdx)("p",{parentName:"li"},"This method should return the array of messages generated during the import process.")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("p",{parentName:"li"},(0,m.mdx)("inlineCode",{parentName:"p"},"getWarningMessages(array $data)")," - Generates and returns the array of warning messages that contain information about what will be changed in the system."),(0,m.mdx)("p",{parentName:"li"},"The ",(0,m.mdx)("inlineCode",{parentName:"p"},"$data")," argument is the same as for the method ",(0,m.mdx)("inlineCode",{parentName:"p"},"import"),"."),(0,m.mdx)("p",{parentName:"li"},"If this method returns an empty array, the import proceeds without interaction."),(0,m.mdx)("p",{parentName:"li"},"You can also provide a message such as ",(0,m.mdx)("inlineCode",{parentName:"p"},"Do you want to continue [yes/no]?")),(0,m.mdx)("p",{parentName:"li"},"If the user enters ",(0,m.mdx)("inlineCode",{parentName:"p"},"no"),", import is canceled; otherwise, if the user enters ",(0,m.mdx)("inlineCode",{parentName:"p"},"yes"),", the import is processed."))),(0,m.mdx)("h3",{id:"implement-your-own-importer"},"Implement your own importer"),(0,m.mdx)("ol",null,(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Create an ",(0,m.mdx)("inlineCode",{parentName:"p"},"Importer")," class that implements ",(0,m.mdx)("a",{parentName:"p",href:"https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/App/DeploymentConfig/ImporterInterface.php"},(0,m.mdx)("inlineCode",{parentName:"a"},"Magento\\Framework\\App\\DeploymentConfig\\ImporterInterface")),".")),(0,m.mdx)("li",{parentName:"ol"},(0,m.mdx)("p",{parentName:"li"},"Register your importer in your module's ",(0,m.mdx)("a",{parentName:"p",href:"../components/dependency-injection.md"},(0,m.mdx)("inlineCode",{parentName:"a"},"di.xml")),":"),(0,m.mdx)("pre",{parentName:"li"},(0,m.mdx)("code",{parentName:"pre",className:"language-xml"},'<type name="Magento\\Deploy\\Model\\DeploymentConfig\\ImporterPool">\n    <arguments>\n        <argument name="importers" xsi:type="array">\n            <item name="i18n" xsi:type="array">\n                <item name="class" xsi:type="string">Vendor\\Module\\Model\\Config\\Importer</item>\n                <item name="sortOrder" xsi:type="number">110</item>\n            </item>\n        </argument>\n    </arguments>\n</type>\n')))),(0,m.mdx)("p",null,"The sample code in the preceding example registers the importer ",(0,m.mdx)("inlineCode",{parentName:"p"},"Vendor\\Module\\Model\\Config\\Importer")," for the ",(0,m.mdx)("inlineCode",{parentName:"p"},"i18n")," array in ",(0,m.mdx)("inlineCode",{parentName:"p"},"config.php"),"."),(0,m.mdx)("p",null,"The ",(0,m.mdx)("inlineCode",{parentName:"p"},"i18n")," array has a queue order of 110, which means this importer runs after importers that have value of sort order less than 110 has and if values in the section ",(0,m.mdx)("inlineCode",{parentName:"p"},"i18n")," were changed."),(0,m.mdx)(l,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,m.mdx)("p",null,"An array cannot be imported by more than one importer."),(0,m.mdx)("h2",{id:"more-information"},"More information"),(0,m.mdx)("ul",null,(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"sensitive-environment-settings.md"},"Sensitive and system-specific settings")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"https://devdocs.magento.com/guides/v2.4/config-guide/prod/config-reference-configphp.html"},"config.php reference")),(0,m.mdx)("li",{parentName:"ul"},(0,m.mdx)("a",{parentName:"li",href:"https://devdocs.magento.com/guides/v2.4/config-guide/prod/config-reference-envphp.html"},"env.php reference"))))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-development-configuration-importers-md-3cd1d574fa42ccfb17a2.js.map