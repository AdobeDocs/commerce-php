"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[83089],{65867:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return s},default:function(){return d}});var o=a(87462),m=a(63366),t=(a(15007),a(64983)),i=a(91515),r=["components"],s={},u={_frontmatter:s},l=i.Z;function d(e){var n=e.components,a=(0,m.Z)(e,r);return(0,t.mdx)(l,(0,o.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,t.mdx)("h1",{id:"asynchronous-configuration"},"Asynchronous configuration"),(0,t.mdx)("p",null,"When using the message queue, four configuration files in your component must be updated:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},"communication.xml"),(0,t.mdx)("li",{parentName:"ul"},"queue_consumer.xml"),(0,t.mdx)("li",{parentName:"ul"},"queue_topology.xml"),(0,t.mdx)("li",{parentName:"ul"},"queue_publisher.xml")),(0,t.mdx)("p",null,"More information can be found in ",(0,t.mdx)("a",{parentName:"p",href:"configuration.md"},"Configure message queues"),"."),(0,t.mdx)("p",null,"Asynchronous and Bulk APIs are built on top of the usual REST API and use the Message Queue Framework for processing messages. To ease development efforts, the Asynchronous API pre-generates the following configuration files:"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},"communication.xml"),(0,t.mdx)("li",{parentName:"ul"},"queue_publisher.xml")),(0,t.mdx)("p",null,"and provides the ",(0,t.mdx)("inlineCode",{parentName:"p"},"queue_topology.xml")," and ",(0,t.mdx)("inlineCode",{parentName:"p"},"queue_consumer.xml")," files within the ",(0,t.mdx)("inlineCode",{parentName:"p"},"Magento/WebapiAsync")," module."),(0,t.mdx)("h2",{id:"communicationxml"},"communication.xml"),(0,t.mdx)("p",null,"Information about the auto-generation of ",(0,t.mdx)("inlineCode",{parentName:"p"},"communication.xml")," can be found in ",(0,t.mdx)("a",{parentName:"p",href:"async-topics.md"},"Topics in Asynchronous API")),(0,t.mdx)("h2",{id:"queue_publisherxml"},"queue_publisher.xml"),(0,t.mdx)("p",null,"The ",(0,t.mdx)("inlineCode",{parentName:"p"},"queue_publisher.xml")," file is generated by the ",(0,t.mdx)("inlineCode",{parentName:"p"},"\\Magento\\WebapiAsync\\Code\\Generator\\Config\\RemoteServiceReader\\Publisher")," class, which implements ",(0,t.mdx)("inlineCode",{parentName:"p"},"\\Magento\\Framework\\Config\\ReaderInterface")," and is injected into the ",(0,t.mdx)("inlineCode",{parentName:"p"},"\\Magento\\Framework\\MessageQueue\\Publisher\\Config\\CompositeReader")," constructor argument in the main ",(0,t.mdx)("inlineCode",{parentName:"p"},"di.xml")," file."),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-xml"},'<type name="Magento\\Framework\\MessageQueue\\Publisher\\Config\\CompositeReader">\n    <arguments>\n        <argument name="readers" xsi:type="array">\n            <item name="asyncServiceReader" xsi:type="object" sortOrder="0">Magento\\WebapiAsync\\Code\\Generator\\Config\\RemoteServiceReader\\Publisher</item>\n            ...\n        </argument>\n    </arguments>\n</type>\n')),(0,t.mdx)("p",null,"The sort order is set to 0 and allows developers to change some aspects of the generated configuration in configuration readers such as ",(0,t.mdx)("inlineCode",{parentName:"p"},"queue_publisher.xml")," and ",(0,t.mdx)("inlineCode",{parentName:"p"},"env.php"),"."),(0,t.mdx)("p",null,(0,t.mdx)("inlineCode",{parentName:"p"},"\\Magento\\WebapiAsync\\Code\\Generator\\Config\\RemoteServiceReader\\Publisher::read()")," calls ",(0,t.mdx)("inlineCode",{parentName:"p"},"\\Magento\\AsynchronousOperations\\Model\\ConfigInterface::getServices()")," to get an array of all REST API routes which can be executed asynchronously. Then it defines the connection name as ",(0,t.mdx)("inlineCode",{parentName:"p"},"amqp")," and the exchange as ",(0,t.mdx)("inlineCode",{parentName:"p"},"magento")," for each generated topic name."),(0,t.mdx)("h2",{id:"queue_consumerxml"},"queue_consumer.xml"),(0,t.mdx)("p",null,"The asynchronous/bulk API has one defined consumer which processes all asynchronous/bulk APIs messages."),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-xml"},'<consumer name="async.operations.all" queue="async.operations.all" connection="amqp"\n              consumerInstance="Magento\\AsynchronousOperations\\Model\\MassConsumer"/>\n')),(0,t.mdx)("h2",{id:"queue_topologyxml"},"queue_topology.xml"),(0,t.mdx)("p",null,"The message queue topology configuration links all auto-generated topic names with prefix ",(0,t.mdx)("inlineCode",{parentName:"p"},"async.")," to the ",(0,t.mdx)("inlineCode",{parentName:"p"},"magento")," exchange and defines the queue named ",(0,t.mdx)("inlineCode",{parentName:"p"},"async.operations.all")," as the destination for all messages."),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-xml"},'<exchange name="magento" type="topic" connection="amqp">\n    <binding id="async.operations.all" topic="async.#" destinationType="queue" destination="async.operations.all"/>\n</exchange>\n')))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-development-components-message-queues-async-configuration-md-ca84ed1b56cd65292ef3.js.map