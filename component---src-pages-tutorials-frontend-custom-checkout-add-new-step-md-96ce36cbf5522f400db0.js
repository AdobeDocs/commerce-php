"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[27329],{75789:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return m},default:function(){return u}});var o,a=n(87462),i=n(63366),r=(n(15007),n(64983)),d=n(91515),p=["components"],m={},s=(o="InlineAlert",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.mdx)("div",e)}),l={_frontmatter:m},c=d.Z;function u(e){var t=e.components,n=(0,i.Z)(e,p);return(0,r.mdx)(c,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"add-a-new-checkout-step"},"Add a new checkout step"),(0,r.mdx)("p",null,"This topic describes how to create the frontend part of the component, implementing a checkout step, and how to add it to the checkout flow."),(0,r.mdx)("p",null,"The default Checkout consists of two steps:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"Shipping Information"),(0,r.mdx)("li",{parentName:"ul"},"Review and Payments Information")),(0,r.mdx)("p",null,"You can add a custom checkout step, it should be implemented as a UI component. For the sake of compatibility, upgradability and easy maintenance, do not edit the default application code, add your customizations in a separate module."),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("a",{parentName:"li",href:"#step-1-create-the-view-part-of-the-checkout-step-component"},"Create the view part of the checkout step component"),"."),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("a",{parentName:"li",href:"#step-2-add-your-step-to-the-checkout-page-layout"},"Add your step to the Checkout page layout"),"."),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("a",{parentName:"li",href:"#step-3-create-mixins-for-payment-and-shipping-steps-optional"},"Create mixins for payment and shipping steps (optional)"),".")),(0,r.mdx)("h2",{id:"step-1-create-the-view-part-of-the-checkout-step-component"},"Step 1: Create the view part of the checkout step component"),(0,r.mdx)("p",null,"To create the view part of the new checkout step:"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},"Add a module directory (not covered in this topic). See ",(0,r.mdx)("a",{parentName:"li",href:"../../../development/build/index.md"},"Build your module")," for details). All custom files must be stored there. For your checkout customization to be applied correctly, your custom module should depend on the ",(0,r.mdx)("inlineCode",{parentName:"li"},"Magento_Checkout")," module. Do not use ",(0,r.mdx)("inlineCode",{parentName:"li"},"Ui")," for your custom module name, because ",(0,r.mdx)("inlineCode",{parentName:"li"},"%Vendor%_Ui")," notation, required when specifying paths, might cause issues."),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("a",{parentName:"li",href:"#add-the-javascript-file-implementing-the-new-step"},"Create the ",(0,r.mdx)("inlineCode",{parentName:"a"},".js")," file implementing the view model"),"."),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("a",{parentName:"li",href:"#add-the-html-template"},"Create a ",(0,r.mdx)("inlineCode",{parentName:"a"},".html")," template for the component"),".")),(0,r.mdx)("h3",{id:"add-the-javascript-file-implementing-the-new-step"},"Add the JavaScript file implementing the new step"),(0,r.mdx)("p",null,"A new checkout step must be implemented as UI component. That is, its JavaScript implementation must be a JavaScript module."),(0,r.mdx)("p",null,"The file must be stored under the ",(0,r.mdx)("inlineCode",{parentName:"p"},"<your_module_dir>/view/frontend/web/js/view")," directory."),(0,r.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"<your_module_dir>")," notation stands for the path to your module directory from the root directory. Usually it will be one of the following: ",(0,r.mdx)("inlineCode",{parentName:"p"},"app/code/<YourVendor>/<YourModule>")," or ",(0,r.mdx)("inlineCode",{parentName:"p"},"vendor/<yourvendor>/module-<module>-<name>"),". For more details see ",(0,r.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/frontend-core/guide/conventions/"},"Conventional notations for paths to modules and themes")),(0,r.mdx)("p",null,"A sample ",(0,r.mdx)("inlineCode",{parentName:"p"},"my-step-view.js")," with comments follows:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-js"},"define([\n    'ko',\n    'uiComponent',\n    'underscore',\n    'Magento_Checkout/js/model/step-navigator'\n], function (ko, Component, _, stepNavigator) {\n    'use strict';\n\n    /**\n     * mystep - is the name of the component's .html template,\n     * <Vendor>_<Module>  - is the name of your module directory.\n     */\n    return Component.extend({\n        defaults: {\n            template: '<Vendor>_<Module>/mystep'\n        },\n\n        // add here your logic to display step,\n        isVisible: ko.observable(true),\n\n        /**\n         * @returns {*}\n         */\n        initialize: function () {\n            this._super();\n\n            // register your step\n            stepNavigator.registerStep(\n                // step code will be used as step content id in the component template\n                'step_code',\n                // step alias\n                null,\n                // step title value\n                'Step Title',\n                // observable property with logic when display step or hide step\n                this.isVisible,\n\n                _.bind(this.navigate, this),\n\n                /**\n                 * sort order value\n                 * 'sort order value' < 10: step displays before shipping step;\n                 * 10 < 'sort order value' < 20 : step displays between shipping and payment step\n                 * 'sort order value' > 20 : step displays after payment step\n                 */\n                15\n            );\n\n            return this;\n        },\n\n        /**\n         * The navigate() method is responsible for navigation between checkout steps\n         * during checkout. You can add custom logic, for example some conditions\n         * for switching to your custom step\n         * When the user navigates to the custom step via url anchor or back button we_must show step manually here\n         */\n        navigate: function () {\n            this.isVisible(true);\n        },\n\n        /**\n         * @returns void\n         */\n        navigateToNextStep: function () {\n            stepNavigator.next();\n        }\n    });\n});\n")),(0,r.mdx)("h3",{id:"add-the-html-template"},"Add the .html template"),(0,r.mdx)("p",null,"In the module directory, add the ",(0,r.mdx)("inlineCode",{parentName:"p"},".html")," template for the component. It must be located under the ",(0,r.mdx)("inlineCode",{parentName:"p"},"<your_module_dir>/view/frontend/web/template")," directory."),(0,r.mdx)("p",null,"A sample ",(0,r.mdx)("inlineCode",{parentName:"p"},"mystep.html")," follows:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-html"},'\x3c!--The \'step_code\' value from the .js file should be used--\x3e\n<li id="step_code" data-bind="fadeVisible: isVisible">\n    <div class="step-title" data-bind="i18n: \'Step Title\'" data-role="title"></div>\n    <div id="checkout-step-title"\n         class="step-content"\n         data-role="content">\n\n        <form data-bind="submit: navigateToNextStep" novalidate="novalidate">\n            <div class="actions-toolbar">\n                <div class="primary">\n                    <button data-role="opc-continue" type="submit" class="button action continue primary">\n                        <span>\x3c!-- ko i18n: \'Next\'--\x3e\x3c!-- /ko --\x3e</span>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</li>\n')),(0,r.mdx)("h2",{id:"step-2-add-your-step-to-the-checkout-page-layout"},"Step 2: Add your step to the Checkout page layout"),(0,r.mdx)("p",null,"For the new step to be displayed on the page, you need to declare it in the Checkout page layout, which is defined in ",(0,r.mdx)("inlineCode",{parentName:"p"},"checkout_index_index.xml"),"."),(0,r.mdx)("p",null,"So you need to add an ",(0,r.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/frontend-core/guide/layouts/extend/"},"extending")," ",(0,r.mdx)("inlineCode",{parentName:"p"},"checkout_index_index.xml")," layout file in the following location: ",(0,r.mdx)("inlineCode",{parentName:"p"},"<your_module_dir>/view/frontend/layout/checkout_index_index.xml")),(0,r.mdx)("p",null,"A sample ",(0,r.mdx)("inlineCode",{parentName:"p"},"checkout_index_index.xml")," follows:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-xml"},'<page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" layout="1column" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">\n    <body>\n        <referenceBlock name="checkout.root">\n            <arguments>\n                <argument name="jsLayout" xsi:type="array">\n                    <item name="components" xsi:type="array">\n                        <item name="checkout" xsi:type="array">\n                            <item name="children" xsi:type="array">\n                                <item name="steps" xsi:type="array">\n                                    <item name="children" xsi:type="array">\n                                        \x3c!-- The new step you add --\x3e\n                                        <item name="my-new-step" xsi:type="array">\n                                            <item name="component" xsi:type="string">%Vendor%_%Module%/js/view/my-step-view</item>\n                                            \x3c!--To display step content before shipping step "sortOrder" value should be < 1--\x3e\n                                            \x3c!--To display step content between shipping step and payment step  1 < "sortOrder" < 2 --\x3e\n                                            \x3c!--To display step content after payment step "sortOrder" > 2 --\x3e\n                                            <item name="sortOrder" xsi:type="string">2</item>\n                                            <item name="children" xsi:type="array">\n                                                \x3c!--add here child component declaration for your step--\x3e\n                                            </item>\n                                        </item>\n                                    </item>\n                                </item>\n                            </item>\n                        </item>\n                    </item>\n                </argument>\n            </arguments>\n        </referenceBlock>\n    </body>\n</page>\n')),(0,r.mdx)("h2",{id:"step-3-create-mixins-for-payment-and-shipping-steps-optional"},"Step 3: Create mixins for payment and shipping steps (optional)"),(0,r.mdx)("p",null,"If your new step is the first step, you have to create mixins for the payment and shipping steps. Otherwise, two steps will be activated on the loading of the checkout."),(0,r.mdx)("p",null,"Create a mixin as follows:"),(0,r.mdx)("ol",null,(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Create a ",(0,r.mdx)("inlineCode",{parentName:"p"},"Vendor/Module/view/base/requirejs-config.js")," file with these contents;"),(0,r.mdx)("pre",{parentName:"li"},(0,r.mdx)("code",{parentName:"pre",className:"language-js"},"var config = {\n    'config': {\n        'mixins': {\n           'Magento_Checkout/js/view/shipping': {\n               'Vendor_Module/js/view/shipping-payment-mixin': true\n           },\n           'Magento_Checkout/js/view/payment': {\n               'Vendor_Module/js/view/shipping-payment-mixin': true\n           }\n       }\n    }\n}\n"))),(0,r.mdx)("li",{parentName:"ol"},(0,r.mdx)("p",{parentName:"li"},"Create the mixin. We'll use the same mixin for both payment and shipping:"),(0,r.mdx)("pre",{parentName:"li"},(0,r.mdx)("code",{parentName:"pre",className:"language-js"},"define([\n    'ko'\n], function (ko) {\n    'use strict';\n\n    var mixin = {\n\n        initialize: function () {\n            // set visible to be initially false to have your step show first\n            this.visible = ko.observable(false);\n            this._super();\n\n            return this;\n        }\n    };\n\n    return function (target) {\n        return target.extend(mixin);\n    };\n});\n")))),(0,r.mdx)(s,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,r.mdx)("p",null,"For your changes to be applied, you might need to ",(0,r.mdx)("a",{parentName:"p",href:"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/manage-cache.html"},"clean layout cache")," and ",(0,r.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/frontend-core/guide/caching/#clean-static-files-cache"},"static view file cache"),". For more info on mixins, see ",(0,r.mdx)("a",{parentName:"p",href:"https://developer.adobe.com/commerce/frontend-core/javascript/mixins/"},"JS Mixins"),"."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-tutorials-frontend-custom-checkout-add-new-step-md-96ce36cbf5522f400db0.js.map