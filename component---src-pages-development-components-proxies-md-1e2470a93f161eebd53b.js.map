{"version":3,"file":"component---src-pages-development-components-proxies-md-1e2470a93f161eebd53b.js","mappings":"oRAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,WACH,YACL,kBAAK,+CAA6C,cAAGC,WAAW,IAC5D,KAAQ,iDACL,iCAAqC,mTAC5C,kBAAK,wPAAsP,eAAIA,WAAW,KAAM,oBAAyB,iCAA+B,cAAGA,WAAW,IAClV,KAAQ,4GACL,aAAiB,OACxB,kBAAK,uDACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,2kBAkCP,kBAAK,sBAAoB,uBAAYA,WAAW,KAAM,eAA4B,oMAAkM,uBAAYA,WAAW,KAAM,eAA4B,iCAA+B,uBAAYA,WAAW,KAAM,eAA4B,+CAA6C,uBAAYA,WAAW,KAAM,eAA4B,yCAAuC,uBAAYA,WAAW,KAAM,gBAA6B,0FAAwF,uBAAYA,WAAW,KAAM,eAA4B,aAC7vB,eACE,GAAM,8BACH,+BACL,kBAAK,gEAA8D,cAAGA,WAAW,IAC7E,KAAQ,8CACL,WAAe,sYACtB,kBAAK,uFAAqF,cAAGA,WAAW,IACpG,KAAQ,sBACL,mBAAuB,iEAA+D,uBAAYA,WAAW,KAAM,kCAA+C,uDACzK,kBAAK,wJACL,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,mKAMP,kBAAK,oCAAkC,uBAAYA,WAAW,KAAM,eAA4B,UAAQ,uBAAYA,WAAW,KAAM,eAA4B,6HAA2H,uBAAYA,WAAW,KAAM,eAA4B,qCAAmC,uBAAYA,WAAW,KAAM,gBAA6B,wBAClb,kBAAK,iJAA+I,eAAIA,WAAW,KAAM,WAAgB,0CACzL,kBAAK,uDAAqD,cAAGA,WAAW,IACpE,KAAQ,8FACL,gBAAoB,sCAAoC,uBAAYA,WAAW,KAAM,gBAA6B,kBACzH,kBAAK,+DAA6D,uBAAYA,WAAW,KAAM,gBAA6B,gCAA8B,uBAAYA,WAAW,KAAM,0CAAuD,gBAAc,uBAAYA,WAAW,KAAM,yBAAsC,oDAAkD,uBAAYA,WAAW,KAAM,SAAsB,6CAA2C,uBAAYA,WAAW,KAAM,UAAuB,WACngB,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBACV,+NAQV,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/development/components/proxies.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"proxies\"\n    }}>{`Proxies`}</h1>\n    <p>{`The Adobe Commerce and Magento Open Source `}<a parentName=\"p\" {...{\n        \"href\": \"dependency-injection.md#constructor-injection\"\n      }}>{`constructor injection pattern`}</a>{` enables you to flexibly manage your class dependencies. However, constructor injection also means that a chain reaction of object instantiation is often the result when you create an object. (The original object has dependencies that have dependencies, and those objects have dependencies, and so on.)`}</p>\n    <p>{`If a class's constructor is particularly resource-intensive, this can lead to unnecessary performance impact when another class depends on it, if the expensive object does not end up being needed during a particular request. (You can display a `}<em parentName=\"p\">{`dependency graph`}</em>{` of such objects by enabling `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/setup/mage-profiler.html\"\n      }}>{`profiling`}</a>{`.)`}</p>\n    <p>{`As an example, consider the following two classes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`class SlowLoading\n{\n    public function __construct()\n    {\n        // ... Do something resource intensive\n    }\n\n    public function getValue()\n    {\n        return 'SlowLoading value';\n    }\n}\n\nclass FastLoading\n{\n    protected $slowLoading;\n\n    public function __construct(\n        SlowLoading $slowLoading\n    ){\n        $this->slowLoading = $slowLoading;\n    }\n\n    public function getFastValue()\n    {\n        return 'FastLoading value';\n    }\n\n    public function getSlowValue()\n    {\n        return $this->slowLoading->getValue();\n    }\n}\n`}</code></pre>\n    <p>{`Assume that class `}<inlineCode parentName=\"p\">{`SlowLoading`}</inlineCode>{` has a non-trivial performance impact when instantiated (perhaps due to a complex database query or a call to a third-party web API). Because of the dependency injection in the constructor of `}<inlineCode parentName=\"p\">{`FastLoading`}</inlineCode>{`, this impact is incurred if `}<inlineCode parentName=\"p\">{`FastLoading`}</inlineCode>{` is instantiated.  Note, however, that the `}<inlineCode parentName=\"p\">{`SlowLoading`}</inlineCode>{` instance is used only in the method `}<inlineCode parentName=\"p\">{`getSlowValue`}</inlineCode>{`, meaning that the resource cost is unnecessary if this method is never called on the `}<inlineCode parentName=\"p\">{`FastLoading`}</inlineCode>{` object.`}</p>\n    <h2 {...{\n      \"id\": \"proxies-are-generated-code\"\n    }}>{`Proxies are generated code`}</h2>\n    <p>{`The application has a solution for this situation: proxies. `}<a parentName=\"p\" {...{\n        \"href\": \"http://en.wikipedia.org/wiki/Proxy_pattern\"\n      }}>{`Proxies`}</a>{` extend other classes to become lazy-loaded versions of them. That is, a real instance of the class a proxy extends is created only after one of the class's methods is actually called. A proxy implements the same interface as the original class and so can be used as a dependency anywhere the original class can.  Unlike its parent, a proxy has only one dependency: the object manager.`}</p>\n    <p>{`Proxies are generated code and therefore do not need to be manually written.  (See `}<a parentName=\"p\" {...{\n        \"href\": \"code-generation.md\"\n      }}>{`Code generation`}</a>{` for more information.) Simply reference a class in the form `}<inlineCode parentName=\"p\">{`\\\\Original\\\\Class\\\\Name\\\\Proxy`}</inlineCode>{`, and the class is generated if it does not exist.`}</p>\n    <p>{`Using the preceding example, a proxy can be passed into the constructor arguments instead of the original class, using DI configuration as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<type name=\"FastLoading\">\n    <arguments>\n        <argument name=\"slowLoading\" xsi:type=\"object\">SlowLoading\\\\Proxy</argument>\n    </arguments>\n</type>\n`}</code></pre>\n    <p>{`With the proxy used in place of `}<inlineCode parentName=\"p\">{`SlowLoading`}</inlineCode>{`, the `}<inlineCode parentName=\"p\">{`SlowLoading`}</inlineCode>{` class will not be instantiated---and therefore, the resource intensive constructor operations not performed---until the `}<inlineCode parentName=\"p\">{`SlowLoading`}</inlineCode>{` object is used (that is, if the `}<inlineCode parentName=\"p\">{`getSlowValue`}</inlineCode>{` method is called).`}</p>\n    <p>{`Because DI configuration is used to inject a proxy, proxies can be dropped in to replace their corresponding classes - or proxy replacements `}<em parentName=\"p\">{`removed`}</em>{` - without touching application code.`}</p>\n    <p>{`As a practical example of a proxy, you can see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2/blob/2.4/app/code/Magento/Store/Model/StoreManager.php\"\n      }}>{`StoreManager`}</a>{` class and then see the generated `}<inlineCode parentName=\"p\">{`StoreManager`}</inlineCode>{` proxy class.`}</p>\n    <p>{`The following excerpt from the application code passes the `}<inlineCode parentName=\"p\">{`storeManager`}</inlineCode>{` argument as a proxy to the `}<inlineCode parentName=\"p\">{`Magento\\\\Store\\\\Model\\\\Resolver\\\\Store`}</inlineCode>{` class. The `}<inlineCode parentName=\"p\">{`StoreManagerInterface`}</inlineCode>{` model is defined as a proxy class by the added `}<inlineCode parentName=\"p\">{`Proxy`}</inlineCode>{` at the end of the original class in the `}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<type name=\"Magento\\\\Store\\\\Model\\\\Resolver\\\\Store\">\n    <arguments>\n        <argument name=\"storeManager\" xsi:type=\"object\">Magento\\\\Store\\\\Model\\\\StoreManagerInterface\\\\Proxy</argument>\n    </arguments>\n</type>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}