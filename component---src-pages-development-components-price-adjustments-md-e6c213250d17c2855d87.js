"use strict";(self.webpackChunkcommerce_php=self.webpackChunkcommerce_php||[]).push([[24857],{63489:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return i},default:function(){return c}});var a=t(87462),o=t(63366),r=(t(15007),t(64983)),s=t(91515),m=["components"],i={},u={_frontmatter:i},l=s.Z;function c(e){var n=e.components,t=(0,o.Z)(e,m);return(0,r.mdx)(l,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"price-adjustments"},"Price adjustments"),(0,r.mdx)("p",null,"Price adjustments adjust the product price as it is displayed on category or product pages."),(0,r.mdx)("p",null,"In this example, we will add ",(0,r.mdx)("inlineCode",{parentName:"p"},"1.79")," to each product price."),(0,r.mdx)("p",null,"To create a price adjustment, add the following code to the module's ",(0,r.mdx)("inlineCode",{parentName:"p"},"VENDOR/MODULE/etc/di.xml"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-xml"},'<type name="Magento\\Framework\\Pricing\\Adjustment\\Collection">\n  <arguments>\n    <argument name="adjustments" xsi:type="array">\n      <item name="devadj" xsi:type="const">VENDOR\\MODULE\\Pricing\\Adjustment::ADJUSTMENT_CODE</item>\n    </argument>\n  </arguments>\n</type>\n<type name="Magento\\Framework\\Pricing\\Adjustment\\Pool">\n  <arguments>\n     <argument name="adjustments" xsi:type="array">\n        <item name="devadj" xsi:type="array">\n           <item name="className" xsi:type="string">VENDOR\\MODULE\\Pricing\\Adjustment</item>\n           <item name="sortOrder" xsi:type="string">10</item>\n        </item>\n     </argument>\n  </arguments>\n</type>\n')),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"VENDOR/MODULE/Pricing/Adjustment.php")," file should look like:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-php"},"namespace VENDOR\\MODULE\\Pricing;\n\nuse Magento\\Framework\\Pricing\\Adjustment\\AdjustmentInterface;\nuse Magento\\Framework\\Pricing\\SaleableInterface;\n\nclass Adjustment implements AdjustmentInterface\n{\n\n    const ADJUSTMENT_CODE = 'devadj';\n    const ADJUSTMENT_VALUE = 1.79;\n\n    /**\n     * Get adjustment code\n     *\n     * @return string\n     */\n    public function getAdjustmentCode()\n    {\n        return self::ADJUSTMENT_CODE;\n    }\n\n    /**\n     * Define if adjustment is included in base price\n     *\n     * @return bool\n     */\n    public function isIncludedInBasePrice()\n    {\n        return true;\n    }\n\n    /**\n     * Define if adjustment is included in display price\n     *\n     * @return bool\n     */\n    public function isIncludedInDisplayPrice()\n    {\n        return true;\n    }\n\n    /**\n     * Extract adjustment amount from the given amount value\n     *\n     * @param float $amount\n     * @param SaleableInterface $saleableItem\n     * @param null|array $context\n     * @return float\n     */\n    public function extractAdjustment($amount, SaleableInterface $saleableItem, $context = [])\n    {\n        return $amount - self::ADJUSTMENT_VALUE;\n    }\n\n    /**\n     * Apply adjustment amount and return result value\n     *\n     * @param float $amount\n     * @param SaleableInterface $saleableItem\n     * @param null|array $context\n     * @return float\n     */\n    public function applyAdjustment($amount, SaleableInterface $saleableItem, $context = [])\n    {\n        return $amount + self::ADJUSTMENT_VALUE;\n    }\n\n    /**\n     * Check if adjustment should be excluded from calculations along with the given adjustment\n     *\n     * @param string $adjustmentCode\n     * @return bool\n     */\n    public function isExcludedWith($adjustmentCode)\n    {\n        return $this->getAdjustmentCode() === $adjustmentCode;\n    }\n\n    /**\n     * Return sort order position\n     *\n     * @return int\n     */\n    public function getSortOrder()\n    {\n        return 21;\n    }\n}\n")),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"ADJUSTMENT_CODE")," constant is a unique code for the adjustment which it gets added to the ",(0,r.mdx)("inlineCode",{parentName:"p"},"Magento\\Framework\\Pricing\\Adjustment\\Collection")," collection."),(0,r.mdx)("p",null,"The adjustment logic is defined in ",(0,r.mdx)("inlineCode",{parentName:"p"},"extractAdjustment")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"applyAdjustment")," functions."),(0,r.mdx)("p",null,"Price adjustments affect storefront product prices."),(0,r.mdx)("p",null,"Price adjustments ",(0,r.mdx)("strong",{parentName:"p"},"will not")," affect quote item prices, so when a product is added to the cart, any price adjustments defined above are discarded."),(0,r.mdx)("h2",{id:"add-price-adjustments-for-quote-items"},"Add price adjustments for quote items"),(0,r.mdx)("p",null,"To adjustments prices for quote items, a custom quote total is added:"),(0,r.mdx)("p",null,"Add the following to ",(0,r.mdx)("inlineCode",{parentName:"p"},"VENDOR/MODULE/etc/sales.xml"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:module:Magento_Sales:etc/sales.xsd">\n    <section name="quote">\n        <group name="totals">\n            <item name="custom-surcharge" instance="VENDOR\\MODULE\\Model\\Quote\\Surcharge" sort_order="1000"/>\n        </group>\n    </section>\n</config>\n')),(0,r.mdx)("p",null,"Then in ",(0,r.mdx)("inlineCode",{parentName:"p"},"VENDOR/MODULE/Model/Quote/Surcharge.php"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-php"},"namespace VENDOR\\MODULE\\Model\\Quote;\n\nuse Magento\\Quote\\Api\\Data\\ShippingAssignmentInterface;\nuse Magento\\Quote\\Model\\Quote\\Address\\Total;\nuse Magento\\Quote\\Model\\Quote;\n\nclass Surcharge extends \\Magento\\Quote\\Model\\Quote\\Address\\Total\\AbstractTotal\n{\n\n   const COLLECTOR_TYPE_CODE = 'custom-surcharge';\n\n   /**\n    * Custom constructor.\n    */\n   public function __construct()\n   {\n       $this->setCode(self::COLLECTOR_TYPE_CODE);\n   }\n\n   /**\n    * Collect address discount amount\n    *\n    * @param Quote $quote\n    * @param ShippingAssignmentInterface $shippingAssignment\n    * @param Total $total\n    * @return $this\n    */\n   public function collect(\n        Quote $quote,\n        ShippingAssignmentInterface $shippingAssignment,\n        Total $total\n   ) {\n        parent::collect($quote, $shippingAssignment, $total);\n\n        $items = $shippingAssignment->getItems();\n        if (!count($items)) {\n            return $this;\n        }\n\n        $amount = 0;\n        foreach($quote->getItemsCollection() as $_quoteItem){\n            $amount += $_quoteItem->getQty() * \\VENDOR\\MODULE\\Pricing\\Adjustment::ADJUSTMENT_VALUE;\n        }\n\n        $total->setTotalAmount(self::COLLECTOR_TYPE_CODE, $amount);\n        $total->setBaseTotalAmount(self::COLLECTOR_TYPE_CODE, $amount);\n        $total->setCustomAmount($amount);\n        $total->setBaseCustomAmount($amount);\n        $total->setGrandTotal($total->getGrandTotal() + $amount);\n        $total->setBaseGrandTotal($total->getBaseGrandTotal() + $amount);\n        return $this;\n   }\n\n  /**\n    * @param Total $total\n    */\n   protected function clearValues(Total $total)\n   {\n       $total->setTotalAmount('subtotal', 0);\n       $total->setBaseTotalAmount('subtotal', 0);\n       $total->setTotalAmount(self::COLLECTOR_TYPE_CODE, 0);\n       $total->setBaseTotalAmount(self::COLLECTOR_TYPE_CODE, 0);\n       $total->setSubtotalInclTax(0);\n       $total->setBaseSubtotalInclTax(0);\n   }\n\n   /**\n    * @param Quote $quote\n    * @param Total $total\n    * @return array\n    */\n   public function fetch(\n       Quote $quote,\n       Total $total\n   ) {\n\n       $amount = 0;\n\n       foreach ($quote->getItemsCollection() as $_quoteItem) {\n            $amount += $_quoteItem->getQty() * \\VENDOR\\MODULE\\Pricing\\Adjustment::ADJUSTMENT_VALUE;\n       }\n\n       return [\n           'code' => $this->getCode(),\n           'title' => __('Custom Total'),\n           'value' => $amount\n       ];\n   }\n\n   /**\n    * @return \\Magento\\Framework\\Phrase\n    */\n   public function getLabel()\n   {\n       return __('Custom Surchange');\n   }\n}\n")),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"COLLECTOR_TYPE_CODE")," constant is a unique name of the custom total. It can be accessed with ",(0,r.mdx)("inlineCode",{parentName:"p"},"Magento\\Quote\\Model\\Quote\\Address\\Total::getTotalAmount"),", and set with ",(0,r.mdx)("inlineCode",{parentName:"p"},"Magento\\Quote\\Model\\Quote\\Address\\Total::setTotalAmount"),"."),(0,r.mdx)("h3",{id:"display-price-adjusted-totals-on-the-cart-page"},"Display price-adjusted totals on the cart page"),(0,r.mdx)("p",null,"To display the price-adjusted total on the cart page, we need to create a few files."),(0,r.mdx)("p",null,"First, add the new total:"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"VENDOR/MODULE/view/frontend/layout/checkout_cart_index.xml"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">\n    <body>\n        <referenceBlock name="checkout.cart.totals">\n            <arguments>\n                <argument name="jsLayout" xsi:type="array">\n                    <item name="components" xsi:type="array">\n                        <item name="block-totals" xsi:type="array">\n                            <item name="children" xsi:type="array">\n                                <item name="custom-surcharge" xsi:type="array">\n                                    <item name="component" xsi:type="string">VENDOR_MODULE/js/view/cart/totals/surcharge</item>\n                                    <item name="config" xsi:type="array">\n                                        <item name="title" xsi:type="string" translate="true">Custom Surcharge</item>\n                                    </item>\n                                </item>\n                            </item>\n                        </item>\n                    </item>\n                </argument>\n            </arguments>\n        </referenceBlock>\n    </body>\n</page>\n')),(0,r.mdx)("p",null,"Then, define a new component: ",(0,r.mdx)("inlineCode",{parentName:"p"},"VENDOR_MODULE/js/view/cart/totals/surcharge"),":"),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"VENDOR/MODULE/view/frontend/web/js/view/cart/totals/surcharge.js"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-javascript"},"define([\n    'Magento_Checkout/js/view/summary/abstract-total',\n    'Magento_Checkout/js/model/quote'\n], function (Component, quote) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'VENDOR_MODULE/summary/surcharge'\n        },\n        totals: quote.getTotals(),\n\n        /**\n         * @return {*|Boolean}\n         */\n        isDisplayed: function () {\n            return this.isFullMode() && this.getPureValue() != 0;\n        },\n\n        /**\n         * Get surcharge title\n         *\n         * @returns {null|String}\n         */\n        getTitle: function () {\n            if (!this.totals()) {\n                return null;\n            }\n\n            return 'Custom Surcharge';\n        },\n\n        /**\n         * @return {Number}\n         */\n        getPureValue: function () {\n            var price = 0;\n            for (var i=0; i < window.checkoutConfig.quoteItemData.length; i++) {\n              price += window.checkoutConfig.quoteItemData[i].qty * 1.79;\n            }\n\n            return price;\n        },\n\n        /**\n         * @return {*|String}\n         */\n        getValue: function () {\n            return this.getFormattedPrice(this.getPureValue());\n        }\n    });\n});\n")),(0,r.mdx)("p",null,"Then create the template ",(0,r.mdx)("inlineCode",{parentName:"p"},"VENDOR_MODULE/summary/surcharge"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-html"},'\x3c!-- ko if: isDisplayed() --\x3e\n<tr class="totals surcharge">\n    <th class="mark" scope="row">\n        <span class="title" data-bind="text: getTitle()"></span>\n    </th>\n    <td class="amount">\n        <span class="price" data-bind="text: getValue(), attr: {\'data-th\': name}"></span>\n    </td>\n</tr>\n\x3c!-- /ko --\x3e\n')),(0,r.mdx)("h3",{id:"display-price-adjusted-total-on-the-checkout-page"},"Display price-adjusted total on the checkout page"),(0,r.mdx)("p",null,"To display the price-adjusted total on the checkout page, add it to the ",(0,r.mdx)("inlineCode",{parentName:"p"},"totals")," component."),(0,r.mdx)("p",null,(0,r.mdx)("inlineCode",{parentName:"p"},"VENDOR/MODULE/view/frontend/layout/checkout_index_index.xml"),":"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<page xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:View/Layout/etc/page_configuration.xsd">\n    <body>\n        <referenceBlock name="checkout.root">\n            <arguments>\n                <argument name="jsLayout" xsi:type="array">\n                    <item name="components" xsi:type="array">\n                        <item name="checkout" xsi:type="array">\n                            <item name="children" xsi:type="array">\n                                <item name="sidebar" xsi:type="array">\n                                    <item name="children" xsi:type="array">\n                                        <item name="summary" xsi:type="array">\n                                            <item name="children" xsi:type="array">\n                                                <item name="totals" xsi:type="array">\n                                                    <item name="children" xsi:type="array">\n                                                        <item name="discount" xsi:type="array">\n                                                            <item name="component" xsi:type="string">VENDOR_MODULE/js/view/cart/totals/surcharge</item>\n                                                            <item name="config" xsi:type="array">\n                                                                <item name="title" xsi:type="string" translate="true">Custom Surcharge</item>\n                                                            </item>\n                                                        </item>\n                                                    </item>\n                                                </item>\n                                            </item>\n                                        </item>\n                                    </item>\n                                </item>\n                            </item>\n                        </item>\n                    </item>\n                </argument>\n            </arguments>\n        </referenceBlock>\n    </body>\n</page>\n')),(0,r.mdx)("p",null,"The ",(0,r.mdx)("inlineCode",{parentName:"p"},"VENDOR_MODULE/js/view/cart/totals/surcharge")," component was defined earlier in the article."),(0,r.mdx)("p",null,"If all has gone smoothly, when run, you should see the adjusted price reflected in the shopping cart."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-development-components-price-adjustments-md-e6c213250d17c2855d87.js.map