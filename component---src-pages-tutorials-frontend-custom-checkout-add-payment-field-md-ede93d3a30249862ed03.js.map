{"version":3,"file":"component---src-pages-tutorials-frontend-custom-checkout-add-payment-field-md-ede93d3a30249862ed03.js","mappings":"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","sources":["webpack://commerce-php/./src/pages/tutorials/frontend/custom-checkout/add-payment-field.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-a-custom-field-for-an-offline-payment-method\"\n    }}>{`Add a custom field for an offline payment method`}</h1>\n    <p>{`This topic describes how to add a custom field to an offline payment method in the payment step of the checkout. The custom field allows the buyer to enter a comment about a purchase order.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`The `}<inlineCode parentName=\"p\">{`Purchase Order`}</inlineCode>{` payment method must be enabled in the storefront for this task. Ensure this payment method is enabled by navigating to `}<strong parentName=\"p\">{`Stores`}</strong>{` > `}<strong parentName=\"p\">{`Settings`}</strong>{` > `}<strong parentName=\"p\">{`Configuration`}</strong>{` > `}<strong parentName=\"p\">{`Sales`}</strong>{` > `}<strong parentName=\"p\">{`Payment Methods`}</strong>{` > `}<strong parentName=\"p\">{`Other Payment Methods`}</strong>{` > `}<strong parentName=\"p\">{`Purchase Order`}</strong>{` in the Admin.`}</p>\n    <p>{`You must perform following steps to add a custom field to an offline payment method:`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-1-create-a-new-module\"\n        }}>{`Create a new module`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-2-add-a-db_schemaxml-file\"\n        }}>{`Add a `}<inlineCode parentName=\"a\">{`db_schema.xml`}</inlineCode>{` file`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-3-add-a-requirejs-file-to-the-module\"\n        }}>{`Add a `}<inlineCode parentName=\"a\">{`requirejs`}</inlineCode>{` file to the module`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-4-override-the-vendor-files\"\n        }}>{`Override the vendor files`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-5-add-an-observer\"\n        }}>{`Add an Observer`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-6-compile-and-deploy-the-module\"\n        }}>{`Compile and deploy the module`}</a>{`.`}</li>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"#step-7-verify-that-the-module-works\"\n        }}>{`Verify that the module works`}</a>{`.`}</li>\n    </ol>\n    <p>{`Letâ€™s go through each step.`}</p>\n    <h2 {...{\n      \"id\": \"step-1-create-a-new-module\"\n    }}>{`Step 1: Create a new module`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-learn/tutorials/backend-development/create-module.html?lang=en\"\n      }}>{`Create a new module`}</a>{` named `}<inlineCode parentName=\"p\">{`Learning/CustomField`}</inlineCode>{` and register it.`}</p>\n    <h2 {...{\n      \"id\": \"step-2-add-a-db_schemaxml-file\"\n    }}>{`Step 2 Add a `}<inlineCode parentName=\"h2\">{`db_schema.xml`}</inlineCode>{` file`}</h2>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`paymentpocomment`}</inlineCode>{` column in the `}<inlineCode parentName=\"p\">{`quote_payment`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`sales_order_payment`}</inlineCode>{` tables using the `}<a parentName=\"p\" {...{\n        \"href\": \"../../../development/components/declarative-schema/configuration.md\"\n      }}>{`declarative schema`}</a>{` method.`}</p>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`app/code/Learning/CustomField/etc/db_schema.xml`}</inlineCode>{` and define the declarative schema as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<schema xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:framework:Setup/Declaration/Schema/etc/schema.xsd\">\n    <table name=\"quote_payment\" resource=\"checkout\" engine=\"innodb\" comment=\"Sales Flat Quote Payment\">\n        <column xsi:type=\"text\" name=\"paymentpocomment\" nullable=\"true\" comment=\"PO Comment\"/>\n    </table>\n    <table name=\"sales_order_payment\" resource=\"sales\" engine=\"innodb\" comment=\"Sales Flat Order Payment\">\n        <column xsi:type=\"text\" name=\"paymentpocomment\" nullable=\"true\" comment=\"PO Comment\"/>\n    </table>\n</schema>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-3-add-a-requirejs-file-to-the-module\"\n    }}>{`Step 3: Add a requirejs file to the module`}</h2>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`app/code/Learning/CustomField/view/frontend/requirejs-config.js`}</inlineCode>{` file and add the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{` var config = {\n    map: {\n        '*': {\n          'Magento_OfflinePayments/js/view/payment/offline-payments':'Learning_CustomField/js/view/payment/offline-payments',\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-4-override-the-vendor-files\"\n    }}>{`Step 4: Override the vendor files`}</h2>\n    <p>{`We must override the behavior of the following files to display the custom field:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#override-the-offline-paymentsjs\"\n        }}>{`Magento_OfflinePayments/view/frontend/web/js/view/payment/offline-payments.js`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#override-the-purchaseorder-methodjs\"\n        }}>{`Magento_OfflinePayments/view/frontend/web/js/view/payment/method-renderer/purchaseorder-method.js`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#override-the-purchaseorder-formhtml\"\n        }}>{`Magento_OfflinePayments/view/frontend/web/template/payment/purchaseorder-form.html`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"override-the-offline-paymentsjs\"\n    }}>{`Override the `}<inlineCode parentName=\"h3\">{`offline-payments.js`}</inlineCode></h3>\n    <p>{`Override the `}<inlineCode parentName=\"p\">{`Magento_OfflinePayments/view/frontend/web/js/view/payment/offline-payments.js`}</inlineCode>{` file to change the renderer of the Purchase Order payment method.`}</p>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`app/code/Learning/CustomField/view/frontend/web/js/view/payment/offline-payments.js`}</inlineCode>{` file and add the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`define(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/renderer-list'\n    ],\n    function (\n        Component,\n        rendererList\n    ) {\n        'use strict';\n        rendererList.push(\n            {\n                type: 'checkmo',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/checkmo-method'\n            },\n            {\n                type: 'banktransfer',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/banktransfer-method'\n            },\n            {\n                type: 'cashondelivery',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/cashondelivery-method'\n            },\n            {\n                type: 'purchaseorder',\n                component: 'Learning_CustomField/js/view/payment/method-renderer/purchaseorder-method'\n            }\n        );\n        /** Add view logic here if needed */\n        return Component.extend({});\n    }\n);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"override-the-purchaseorder-methodjs\"\n    }}>{`Override the `}<inlineCode parentName=\"h3\">{`purchaseorder-method.js`}</inlineCode></h3>\n    <p>{`It is also necessary to override the `}<inlineCode parentName=\"p\">{`Magento_OfflinePayments/view/frontend/web/js/view/payment/method-renderer/purchaseorder-method.js`}</inlineCode>{` file.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`template`}</inlineCode>{` path value used in this file must be altered to use the custom template. Also, the logic to get the `}<inlineCode parentName=\"p\">{`additional_data`}</inlineCode>{` is implemented in this file.`}</p>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`app/code/Learning/CustomField/view/frontend/web/js/view/payment/method-renderer/purchaseorder-method.js`}</inlineCode>{` file and add the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`define([\n    'Magento_Checkout/js/view/payment/default',\n    'jquery',\n    'mage/validation'\n], function (Component, $) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Learning_CustomField/payment/purchaseorder-form',\n            purchaseOrderNumber: ''\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            this._super()\n                .observe('purchaseOrderNumber');\n\n            return this;\n        },\n\n        /**\n         * @return {Object}\n         */\n        getData: function () {\n            return {\n                method: this.item.method,\n                'po_number': this.purchaseOrderNumber(),\n                'additional_data': {\n                    'po_number': $('#po_number').val(),\n                    'paymentpocomment': $('#purchaseorder_paymentpocomment').val(),\n                }\n            };\n        },\n\n        /**\n         * @return {jQuery}\n         */\n        validate: function () {\n            var form = 'form[data-role=purchaseorder-form]';\n\n            return $(form).validation() && $(form).validation('isValid');\n        }\n    });\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"override-the-purchaseorder-formhtml\"\n    }}>{`Override the `}<inlineCode parentName=\"h3\">{`purchaseorder-form.html`}</inlineCode></h3>\n    <p>{`We must override the `}<inlineCode parentName=\"p\">{`Magento_OfflinePayments/view/frontend/web/template/payment/purchaseorder-form.html`}</inlineCode>{` template file to add the custom input field (`}<strong parentName=\"p\">{`Purchase Order Comment`}</strong>{`).`}</p>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`app/code/Learning/CustomField/view/frontend/web/template/payment/purchaseorder-form.html`}</inlineCode>{` file and add the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<div class=\"payment-method\" data-bind=\"css: {'_active': (getCode() == isChecked())}\">\n    <div class=\"payment-method-title field choice\">\n        <input type=\"radio\"\n               name=\"payment[method]\"\n               class=\"radio\"\n               data-bind=\"attr: {'id': getCode()}, value: getCode(), checked: isChecked, click: selectPaymentMethod, visible: isRadioButtonVisible()\"/>\n        <label data-bind=\"attr: {'for': getCode()}\" class=\"label\">\n            <span data-bind=\"text: getTitle()\"></span>\n        </label>\n    </div>\n\n    <div class=\"payment-method-content\">\n        <!-- ko foreach: getRegion('messages') -->\n        <!-- ko template: getTemplate() --><!-- /ko -->\n        <!--/ko-->\n        <div class=\"payment-method-billing-address\">\n            <!-- ko foreach: $parent.getRegion(getBillingAddressFormName()) -->\n            <!-- ko template: getTemplate() --><!-- /ko -->\n            <!--/ko-->\n        </div>\n        <form id=\"purchaseorder-form\" class=\"form form-purchase-order\" data-role=\"purchaseorder-form\">\n            <fieldset class=\"fieldset payment method\" data-bind='attr: {id: \"payment_form_\" + getCode()}'>\n                <div class=\"field field-number required\">\n                    <label for=\"po_number\" class=\"label\">\n                    <span><!-- ko i18n: 'Purchase Order Number'--><!-- /ko --></span>\n                    </label>\n                    <div class=\"control\">\n                    <div class=\"name-info\">\n                    <input type=\"text\" id=\"po_number\" name=\"payment[po_number]\" placeholder=\"Purchase Order Number\" data-validate=\"{required:true}\"        data-bind='attr: {title: $t(\"Purchase Order Number\")},value: purchaseOrderNumber' class=\"input-text\"/>\n                    <input type=\"text\" id=\"purchaseorder_paymentpocomment\" name=\"payment[paymentpocomment]\" class=\"input-text\" placeholder=\"Purchase Order Comment\" value=\"\" data-bind=\"attr: {title: $t('Purchase Order Comment'),'data-container': getCode() + '-paymentpocomment'},valueUpdate: 'keyup'\"/>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n        </form>\n        <div class=\"checkout-agreements-block\">\n            <!-- ko foreach: $parent.getRegion('before-place-order') -->\n                <!-- ko template: getTemplate() --><!-- /ko -->\n            <!--/ko-->\n        </div>\n        <div class=\"actions-toolbar\" id=\"review-buttons-container\">\n            <div class=\"primary\">\n                <button class=\"action primary checkout\"\n                        type=\"submit\"\n                        data-bind=\"\n                        click: placeOrder,\n                        attr: {title: $t('Place Order')},\n                        enable: (getCode() == isChecked()),\n                        css: {disabled: !isPlaceOrderActionAllowed()}\n                        \"\n                        data-role=\"review-save\">\n                    <span data-bind=\"i18n: 'Place Order'\"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-5-add-an-observer\"\n    }}>{`Step 5: Add an Observer`}</h2>\n    <p>{`Create an Observer file to save the custom field data to the order. For the Observer file an `}<inlineCode parentName=\"p\">{`events.xml`}</inlineCode>{` file is required to call the observer for a particular event. For this example, the `}<inlineCode parentName=\"p\">{`checkout_onepage_controller_success_action`}</inlineCode>{` event is used.`}</p>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`app/code/Learning/CustomField/etc/frontend/events.xml`}</inlineCode>{` file and add the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:Event/etc/events.xsd\">\n    <event name=\"checkout_onepage_controller_success_action\">\n        <observer name=\"paymentfields_paymentfields_observer_frontend_sales_orderpaymentsavebefore\" instance=\"Learning\\\\CustomField\\\\Observer\\\\Frontend\\\\Sales\\\\OrderPaymentSaveBefore\" />\n    </event>\n</config>\n`}</code></pre>\n    <p>{`Then create the `}<inlineCode parentName=\"p\">{`app/code/Learning/CustomField/Observer/Frontend/Sales/OrderPaymentSaveBefore.php`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\n\nnamespace Learning\\\\CustomField\\\\Observer\\\\Frontend\\\\Sales;\n\nuse Magento\\\\Framework\\\\Event\\\\Observer as EventObserver;\nuse Magento\\\\Framework\\\\Event\\\\ObserverInterface;\nuse Magento\\\\OfflinePayments\\\\Model\\\\Purchaseorder;\nuse Magento\\\\Framework\\\\App\\\\Request\\\\DataPersistorInterface;\n\nclass OrderPaymentSaveBefore implements \\\\Magento\\\\Framework\\\\Event\\\\ObserverInterface\n{\n    protected $order;\n    protected $logger;\n    protected $_serialize;\n    protected $quoteRepository;\n\n    public function __construct(\n        \\\\Magento\\\\Sales\\\\Api\\\\Data\\\\OrderInterface $order,\n        \\\\Magento\\\\Quote\\\\Api\\\\CartRepositoryInterface $quoteRepository,\n        \\\\Psr\\\\Log\\\\LoggerInterface $logger,\n        \\\\Magento\\\\Framework\\\\Serialize\\\\Serializer\\\\Serialize $serialize\n    ) {\n        $this->order = $order;\n        $this->quoteRepository = $quoteRepository;\n        $this->logger = $logger;\n        $this->_serialize = $serialize;\n    }\n    /**\n     * Execute observer\n     *\n     * @param \\\\Magento\\\\Framework\\\\Event\\\\Observer $observer\n     * @return void\n     */\n    public function execute(\\\\Magento\\\\Framework\\\\Event\\\\Observer $observer)\n    {\n        $orderids = $observer->getEvent()->getOrderIds();\n        if(!$orderids){\n            foreach ($orderids as $orderid) {\n                $order = $this->_order->load($orderid);\n                $method = $order->getPayment()->getMethod();\n                if($method == 'purchaseorder') {\n                    $quote_id = $order->getQuoteId();\n                    $quote = $this->quoteRepository->get($quote_id);\n                    $paymentQuote = $quote->getPayment();\n                    $paymentOrder = $order->getPayment();\n                    $paymentOrder->setData('paymentpocomment',$paymentQuote->getPaymentpocomment());\n                    $paymentOrder->save();\n                }\n            }\n        }\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"step-6-compile-and-deploy-the-module\"\n    }}>{`Step 6: Compile and deploy the module`}</h2>\n    <p>{`Run the following sequence of commands to compile and deploy your custom module.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Enable the new module.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento module:enable Learning_CustomField\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install the new module.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento setup:upgrade\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Compile the code.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento setup:di:compile\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Deploy the static files.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`bin/magento setup:static-content:deploy\n`}</code></pre>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"step-7-verify-that-the-module-works\"\n    }}>{`Step 7: Verify that the module works`}</h2>\n    <p>{`Use the following steps to verify your changes work as expected.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Go to the storefront as a guest user and add a product to the cart.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Go to the checkout page and select the `}<strong parentName=\"p\">{`Purchase Order`}</strong>{` payment.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Verify that the `}<strong parentName=\"p\">{`Purchase Order Comment`}</strong>{` field is visible.`}</p>\n        <p parentName=\"li\"><span parentName=\"p\" {...{\n            \"className\": \"gatsby-resp-image-wrapper\",\n            \"style\": {\n              \"position\": \"relative\",\n              \"display\": \"block\",\n              \"marginLeft\": \"auto\",\n              \"marginRight\": \"auto\",\n              \"maxWidth\": \"1238px\"\n            }\n          }}>{`\n      `}<span parentName=\"span\" {...{\n              \"className\": \"gatsby-resp-image-background-image\",\n              \"style\": {\n                \"paddingBottom\": \"49.6875%\",\n                \"position\": \"relative\",\n                \"bottom\": \"0\",\n                \"left\": \"0\",\n                \"display\": \"block\",\n                \"transition\": \"opacity 0.5s 0.5s\",\n                \"pointerEvents\": \"none\"\n              }\n            }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n                \"srcSet\": [\"/commerce-php/static/3724567ea01f34b1dd9f6775d02fb473/5530d/custom_field_payment.webp 320w\", \"/commerce-php/static/3724567ea01f34b1dd9f6775d02fb473/0c8fb/custom_field_payment.webp 640w\", \"/commerce-php/static/3724567ea01f34b1dd9f6775d02fb473/1ca0c/custom_field_payment.webp 1238w\"],\n                \"sizes\": \"(max-width: 1238px) 100vw, 1238px\",\n                \"type\": \"image/webp\"\n              }}></source>{`\n          `}<source parentName=\"picture\" {...{\n                \"srcSet\": [\"/commerce-php/static/3724567ea01f34b1dd9f6775d02fb473/dd4a7/custom_field_payment.png 320w\", \"/commerce-php/static/3724567ea01f34b1dd9f6775d02fb473/0f09e/custom_field_payment.png 640w\", \"/commerce-php/static/3724567ea01f34b1dd9f6775d02fb473/74b07/custom_field_payment.png 1238w\"],\n                \"sizes\": \"(max-width: 1238px) 100vw, 1238px\",\n                \"type\": \"image/png\"\n              }}></source>{`\n          `}<img parentName=\"picture\" {...{\n                \"className\": \"gatsby-resp-image-image\",\n                \"src\": \"/commerce-php/static/3724567ea01f34b1dd9f6775d02fb473/74b07/custom_field_payment.png\",\n                \"alt\": \"Custom field in checkout page\",\n                \"title\": \"Custom field in checkout page\",\n                \"loading\": \"lazy\",\n                \"style\": {\n                  \"width\": \"100%\",\n                  \"height\": \"100%\",\n                  \"margin\": \"0\",\n                  \"verticalAlign\": \"middle\",\n                  \"position\": \"absolute\",\n                  \"opacity\": \"0\",\n                  \"transition\": \"opacity 0.5s\",\n                  \"color\": \"inherit\",\n                  \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n                  \"top\": \"0\",\n                  \"left\": \"0\"\n                }\n              }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Fill the purchase order comment field in the checkout and place an order.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Verify that the entered value is stored in the `}<inlineCode parentName=\"p\">{`paymentpocomment`}</inlineCode>{` column of the  `}<inlineCode parentName=\"p\">{`sales_order_payment`}</inlineCode>{` table.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"sourceRoot":""}