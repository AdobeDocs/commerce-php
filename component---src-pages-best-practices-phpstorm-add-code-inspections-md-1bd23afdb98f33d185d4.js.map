{"version":3,"file":"component---src-pages-best-practices-phpstorm-add-code-inspections-md-1bd23afdb98f33d185d4.js","mappings":"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","sources":["webpack://commerce-php/./src/pages/best-practices/phpstorm/add-code-inspections.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"add-code-inspections\"\n    }}>{`Add code inspections`}</h1>\n    <p>{`The IntelliJ Platform provides tools designed for static code analysis called code inspections, which help you maintain and clean up code without actually executing it.\nRead more in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://plugins.jetbrains.com/docs/intellij/code-inspections.html\"\n      }}>{`official documentation`}</a>{`.`}</p>\n    <p>{`you can find plugin inspections  in `}<inlineCode parentName=\"p\">{`Settings | Preferences... | Editor | Inspections`}</inlineCode>{`.\nUse a filter to find only the plugin inspections: `}<inlineCode parentName=\"p\">{`Magento 2`}</inlineCode>{`.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"56.56250000000001%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-php/static/48f25e50ee28605691a779129f6767e5/5530d/Intellij-idea-plugin-editor-local-inspections.webp 320w\", \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/0c8fb/Intellij-idea-plugin-editor-local-inspections.webp 640w\", \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/94b1e/Intellij-idea-plugin-editor-local-inspections.webp 1280w\", \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/0b34d/Intellij-idea-plugin-editor-local-inspections.webp 1920w\", \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/d5269/Intellij-idea-plugin-editor-local-inspections.webp 2560w\", \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/8c51d/Intellij-idea-plugin-editor-local-inspections.webp 2580w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-php/static/48f25e50ee28605691a779129f6767e5/dd4a7/Intellij-idea-plugin-editor-local-inspections.png 320w\", \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/0f09e/Intellij-idea-plugin-editor-local-inspections.png 640w\", \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/bbbf7/Intellij-idea-plugin-editor-local-inspections.png 1280w\", \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/ac7a9/Intellij-idea-plugin-editor-local-inspections.png 1920w\", \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/c7a69/Intellij-idea-plugin-editor-local-inspections.png 2560w\", \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/36d84/Intellij-idea-plugin-editor-local-inspections.png 2580w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-php/static/48f25e50ee28605691a779129f6767e5/bbbf7/Intellij-idea-plugin-editor-local-inspections.png\",\n            \"alt\": \"Image of the Magento 2 Group Inspections\",\n            \"title\": \"Image of the Magento 2 Group Inspections\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"https://jetbrains.design/intellij/text/inspections/\"\n      }}>{`Inspections topic`}</a>{` in the IntelliJ Platform UI Guidelines\nfor naming, writing descriptions, and messages for inspections to avoid basic naming convention issues before code review.`}</p>\n    <h2 {...{\n      \"id\": \"to-add-a-new-inspection\"\n    }}>{`To add a new inspection`}</h2>\n    <p>{`Adding a new code inspection includes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Declaring an inspection in the plugin configuration file`}</li>\n      <li parentName=\"ol\">{`Implementing a local inspection class to inspect code in the IntelliJ Platform-based IDE editor`}</li>\n      <li parentName=\"ol\">{`Creating a visitor to traverse the PSI tree of the file being edited and inspecting for problematic syntax`}</li>\n      <li parentName=\"ol\">{`Writing an HTML description of the inspection for display in the inspection preferences panel`}</li>\n      <li parentName=\"ol\">{`Create a unit test for the inspection`}</li>\n      <li parentName=\"ol\">{`Implementing a quick fix class to correct syntax problems by altering the PSI tree as needed`}</li>\n      <li parentName=\"ol\">{`Implementing an inspection preferences panel to display information about the inspection`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"declaring-an-inspection-in-the-plugin-configuration-file\"\n    }}>{`Declaring an inspection in the plugin configuration file`}</h2>\n    <p>{`You must declare all plugin inspections in the `}<inlineCode parentName=\"p\">{`<extensions defaultExtensionNs=\"com.intellij\">`}</inlineCode>{` XML node of the plugin configuration file.`}</p>\n    <p>{`For example, we will implement a local inspection tool for checking preference XML tag attributes (`}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{` file)\nif they are valid classes FQNs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<localInspection language=\"XML\" groupPath=\"XML\"\n                 shortName=\"InvalidDiTypeInspection\"\n                 bundle=\"magento2.inspection\" key=\"inspection.displayName.InvalidDiTypeInspection\"\n                 groupBundle=\"magento2.inspection\" groupKey=\"inspection.group.name\"\n                 enabledByDefault=\"true\" level=\"WARNING\"\n                 implementationClass=\"com.magento.idea.magento2plugin.inspections.xml.InvalidDependencyInjectionTypeInspection\"/>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<localInspection/>`}</inlineCode>{` tag attributes:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`language`}</inlineCode>{` - desired file language (ex.: XML, PHP, CSS, JavaScript, etc.)`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`groupPath`}</inlineCode>{` - the first level group in the inspection preferences panel`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`shortName`}</inlineCode>{` - local inspection identity`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`bundle`}</inlineCode>{` - which bundle to use to display name in the inspection preferences panel, constant value: `}<inlineCode parentName=\"li\">{`magento2.inspection`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`key`}</inlineCode>{` - which bundle message to use to display name in the inspection preferences panel`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`groupBundle`}</inlineCode>{` - the second level group bundle, constant value: `}<inlineCode parentName=\"li\">{`magento2.inspection`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`groupKey`}</inlineCode>{` - group bundle message, constant value: `}<inlineCode parentName=\"li\">{`inspection.group.name`}</inlineCode></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`enabledByDefault`}</inlineCode>{` - is it should be enabled by default`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`level`}</inlineCode>{` - inspection severity level`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`ImplementationClass`}</inlineCode>{` - inspection implementation class`}</li>\n    </ol>\n    <p>{`Add a new bundle message with key `}<inlineCode parentName=\"p\">{`inspection.displayName.InvalidDiTypeInspection`}</inlineCode>{` to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2-phpstorm-plugin/blob/4.0.0-develop/resources/magento2/inspection.properties\"\n      }}>{`InspectionBundleMessagesFile`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-properties\"\n      }}>{`inspection.displayName.InvalidDiTypeInspection=Invalid type configuration in the \\`etc/di.xml\\` file\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"implementing-a-local-inspection-class-to-inspect-code-in-the-intellij-platform-based-ide-editor\"\n    }}>{`Implementing a local inspection class to inspect code in the IntelliJ Platform-based IDE editor`}</h2>\n    <p>{`The base class for all local inspections is `}<inlineCode parentName=\"p\">{`com.intellij.codeInspection.LocalInspectionTool`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Plugin extension points:`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Language`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Example Implementation`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Extension Point Class`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`PHP`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://github.com/magento/magento2-phpstorm-plugin/blob/4.0.0-develop/src/com/magento/idea/magento2plugin/inspections/php/PluginInspection.java\"\n            }}>{`PluginInspection`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`com.jetbrains.php.lang.inspections.PhpInspection`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`XML`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://github.com/magento/magento2-phpstorm-plugin/blob/4.0.0-develop/src/com/magento/idea/magento2plugin/inspections/xml/ModuleDeclarationInModuleXmlInspection.java\"\n            }}>{`ModuleDeclarationInModuleXmlInspection`}</a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`com.intellij.codeInspection.XmlSuppressableInspectionTool`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Implement `}<inlineCode parentName=\"p\">{`InvalidDependencyInjectionTypeInspection`}</inlineCode>{` inspection that extends `}<inlineCode parentName=\"p\">{`XmlSuppressableInspectionTool`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`/*\n * Copyright &copy; Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\npackage com.magento.idea.magento2plugin.inspections.xml;\n\nimport com.intellij.codeInspection.ProblemsHolder;\nimport com.intellij.codeInspection.XmlSuppressableInspectionTool;\nimport com.intellij.psi.PsiElementVisitor;\nimport org.jetbrains.annotations.NotNull;\n\npublic class InvalidDependencyInjectionTypeInspection extends XmlSuppressableInspectionTool {\n\n    @Override\n    public @NotNull PsiElementVisitor buildVisitor(\n            final @NotNull ProblemsHolder holder,\n            final boolean isOnTheFly\n    ) {\n        // TODO: Implement visitor for InvalidDependencyInjectionTypeInspection type.\n        return super.buildVisitor(holder, isOnTheFly);\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"creating-a-visitor-to-traverse-the-psi-tree-of-the-file-being-edited-and-inspecting-for-problematic-syntax\"\n    }}>{`Creating a visitor to traverse the PSI tree of the file being edited and inspecting for problematic syntax`}</h2>\n    <p>{`All visitors should extend `}<inlineCode parentName=\"p\">{`com.intellij.psi.PsiElementVisitor`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Visitors implementations for different languages:`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Language`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Visitor Implementation Class`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`PHP`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`com.jetbrains.php.lang.psi.visitors.PhpElementVisitor`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`XML`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`com.intellij.psi.XmlElementVisitor`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`JSON`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`com.intellij.json.psi.JsonElementVisitor`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`JavaScript`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`com.intellij.psi.PsiElementVisitor`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Let's implement new `}<inlineCode parentName=\"p\">{`XmlElementVisitor`}</inlineCode>{` that overrides `}<inlineCode parentName=\"p\">{`visitXmlTag`}</inlineCode>{` method. That visitor will check all XML tags\nin all XML files. We should dedicate it to check only expected XML files (`}<inlineCode parentName=\"p\">{`di.xml`}</inlineCode>{`) and expected XML tags (`}<inlineCode parentName=\"p\">{`<type/>`}</inlineCode>{`).\nUse the following code to check only expected XML files:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final PsiFile file = xmlTag.getContainingFile();\n\nif (!file.getName().equals(ModuleDiXml.FILE_NAME)\n        || !xmlTag.getName().equals(ModuleDiXml.TYPE_TAG)) {\n    return;\n}\n`}</code></pre>\n    <p>{`Now we can access the `}<inlineCode parentName=\"p\">{`<type/>`}</inlineCode>{` tag's `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` attribute to check its value:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`final XmlAttribute nameAttribute = xmlTag.getAttribute(ModuleDiXml.NAME_ATTR);\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`XmlTag.getAttribute()`}</inlineCode>{` method returns `}<inlineCode parentName=\"p\">{`@Nullable`}</inlineCode>{` value. We should check if our attribute is accessible for working with it.\nAlso, later we will need to use the `}<inlineCode parentName=\"p\">{`XmlTag.getValueElement()`}</inlineCode>{` method to register problems using `}<inlineCode parentName=\"p\">{`ProblemsHolder`}</inlineCode>{` if they occur.\nThe `}<inlineCode parentName=\"p\">{`XmlTag.getValueElement()`}</inlineCode>{` method also returns `}<inlineCode parentName=\"p\">{`@Nullable`}</inlineCode>{` value. Let's use this code to skip checking incorrect XML attributes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`if (nameAttribute == null || nameAttribute.getValue() == null || nameAttribute.getValueElement() == null) {\n    return;\n}\n`}</code></pre>\n    <p>{`Now we can access attribute values. We can check if an attribute value is an existing class by using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2-phpstorm-plugin/blob/4.0.0-develop/src/com/magento/idea/magento2plugin/inspections/validator/PhpClassExistenceValidator.java\"\n      }}>{`PhpClassExistenceValidator`}</a>{` type instance.\nTo report problem with the `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` attribute value, you can use the following code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`problemsHolder.registerProblem(\n        nameAttribute.getValueElement(),\n        inspectionBundle.message(\n                \"inspection.error.idAttributeCanNotBeEmpty\",\n                nameAttribute.getName()\n        ),\n        ProblemHighlightType.ERROR\n);\n`}</code></pre>\n    <p>{`You cannot access the tag value of the `}<inlineCode parentName=\"p\">{`PsiElement`}</inlineCode>{` type.\nYou should report problems with the tag element similar to Intellij Idea inspections. For example: `}<inlineCode parentName=\"p\">{`com.intellij.xml.util.CheckEmptyTagInspection`}</inlineCode>{`.`}</p>\n    <p>{`So, there is a full example: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/magento/magento2-phpstorm-plugin/blob/4.0.0-develop/src/com/magento/idea/magento2plugin/inspections/xml/InvalidDependencyInjectionTypeInspection.java\"\n      }}>{`InvalidDependencyInjectionTypeInspection`}</a></p>\n    <h2 {...{\n      \"id\": \"writing-html-descriptions\"\n    }}>{`Writing HTML descriptions`}</h2>\n    <p>{`This section shows you how to display an HTML description of the inspection in the inspection preferences panel.`}</p>\n    <p>{`You must describe all inspections in the description file. To do this, you can add a new HTML file to the following path:\n`}<inlineCode parentName=\"p\">{`./resources/inspectionDescriptions/{shortName}.html`}</inlineCode>{`, where `}<inlineCode parentName=\"p\">{`{shortName}`}</inlineCode>{` is a `}<inlineCode parentName=\"p\">{`shortName`}</inlineCode>{` attribute value in the\nlocal inspection declaration. Or you can just use Intellij Idea automation to do this (preferred).\nAll inspection implementation classes have highlighted class names if they don't have description files. Here's a quick fix to create it:\n`}<span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"23.125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-php/static/bdd86de6e506af1f4b7d3bbcfac0eafb/5530d/Intellij-idea-plugin-create-inspection-description-quick-fix.webp 320w\", \"/commerce-php/static/bdd86de6e506af1f4b7d3bbcfac0eafb/0c8fb/Intellij-idea-plugin-create-inspection-description-quick-fix.webp 640w\", \"/commerce-php/static/bdd86de6e506af1f4b7d3bbcfac0eafb/94b1e/Intellij-idea-plugin-create-inspection-description-quick-fix.webp 1280w\", \"/commerce-php/static/bdd86de6e506af1f4b7d3bbcfac0eafb/6a898/Intellij-idea-plugin-create-inspection-description-quick-fix.webp 1542w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/commerce-php/static/bdd86de6e506af1f4b7d3bbcfac0eafb/dd4a7/Intellij-idea-plugin-create-inspection-description-quick-fix.png 320w\", \"/commerce-php/static/bdd86de6e506af1f4b7d3bbcfac0eafb/0f09e/Intellij-idea-plugin-create-inspection-description-quick-fix.png 640w\", \"/commerce-php/static/bdd86de6e506af1f4b7d3bbcfac0eafb/bbbf7/Intellij-idea-plugin-create-inspection-description-quick-fix.png 1280w\", \"/commerce-php/static/bdd86de6e506af1f4b7d3bbcfac0eafb/46352/Intellij-idea-plugin-create-inspection-description-quick-fix.png 1542w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/commerce-php/static/bdd86de6e506af1f4b7d3bbcfac0eafb/bbbf7/Intellij-idea-plugin-create-inspection-description-quick-fix.png\",\n            \"alt\": \"Create Inspection Description File Quick Fix\",\n            \"title\": \"Create Inspection Description File Quick Fix\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"https://jetbrains.design/intellij/text/inspections/\"\n      }}>{`Inspections topic`}</a>{` to write better descriptions for inspections using naming conventions.`}</p>\n    <h2 {...{\n      \"id\": \"create-a-unit-test-for-the-inspection\"\n    }}>{`Create a unit test for the inspection`}</h2>\n    <p>{`You must deliver each inspection with the unit test for it. The root folder for all inspections unit tests is `}<inlineCode parentName=\"p\">{`./tests/com/magento/idea/magento2plugin/inspections`}</inlineCode>{`. As base classes for your tests you should use predefined implementations based on languages.`}</p>\n    <p><strong parentName=\"p\">{`Base classes implementations for different languages:`}</strong></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Language`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Abstract Class`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`php`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`com.magento.idea.magento2plugin.inspections.php.InspectionPhpFixtureTestCase`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`xml`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`com.magento.idea.magento2plugin.inspections.xml.InspectionXmlFixtureTestCase`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`graphql`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`com.magento.idea.magento2plugin.inspections.graphqls.InspectionGraphqlsFixtureTestCase`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`If you cover new language area, please extend the `}<inlineCode parentName=\"p\">{`com.magento.idea.magento2plugin.inspections.BaseInspectionsTestCase`}</inlineCode>{` class and add a new abstract class for that area.\nAll test class names should have the suffix \"test\" and all testing methods should have the prefix \"test\" and detailed description in the annotation.\nAlso, you should enable testing inspection in the `}<inlineCode parentName=\"p\">{`setUp()`}</inlineCode>{` method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`public class TypeConfigurationTagTypesInspectionTest extends InspectionXmlFixtureTestCase {\n\n    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        myFixture.enableInspections(InvalidDependencyInjectionTypeInspection.class);\n    }\n\n    /**\n     * Test type doesn't exists highlighting: <type name=\"TestingType\"/>.\n     */\n    public void testNameAttributeValueTypeDoesNotExists() {\n        // TODO: write a test.\n    }\n}\n`}</code></pre>\n    <p>{`The root folder for your test data is: `}<inlineCode parentName=\"p\">{`./testData/inspections`}</inlineCode>{`. The internal folder structure is the same as for your test cases, accordingly to the testing file language.\nTo add data for your new test case use the next rule: create directory inside tested language folder that has the same name as your testing class `}<strong parentName=\"p\">{`without suffix Test`}</strong>{` (for the example above it is folder with the name: `}<inlineCode parentName=\"p\">{`TypeConfigurationTagTypesInspection`}</inlineCode>{`).\nFor each testing method create folder in it that has a name the same as method name `}<strong parentName=\"p\">{`without test prefix`}</strong>{` in the camel case format (for the example above it is folder with the name: `}<inlineCode parentName=\"p\">{`nameAttributeValueTypeDoesNotExists`}</inlineCode>{` inside the `}<inlineCode parentName=\"p\">{`TypeConfigurationTagTypesInspection`}</inlineCode>{` folder).`}</p>\n    <p>{`The sandbox for the tests is in the `}<inlineCode parentName=\"p\">{`./testData/project/magento2`}</inlineCode>{` folder.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}