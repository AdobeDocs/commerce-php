{"version":3,"file":"component---src-pages-module-reference-module-resource-connections-md-dc78f40e361faa675028.js","mappings":"qRAQaA,EAAe,CAAC,EAOvBC,GALgBC,EAKY,cALJ,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,eAASC,EACjB,GAHqBD,MAMtB,MAAMI,EAAc,CAClBN,gBAEIO,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAHgC,WACjCC,GAEC,EADEP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,kBAAK,iKAEL,kBAAK,ieAKL,qBAAK,iBAAMC,WAAW,MAClB,UAAa,gBACV,89BA+BP,kBAAK,oQAGL,kBAAK,+EACL,SAACX,EAAD,CAAaY,MAAM,OAAOF,QAAQ,gBA/C7B,yCAmDR,CAEDF,EAAWK,gBAAiB,C","sources":["webpack://commerce-php/./src/pages/module-reference/module-resource-connections.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-php/commerce-php/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Magento\\\\ResourceConnections module adds a mechanism to segregate database connections between master and slave\ndatabase servers based on the request type.`}</p>\n    <p>{`For each master database connection (except the indexer connection) that are configured in db/connection section\nof app/etc/env.php you can add one slave connection that can be configured in db/slave_connection.\nConfiguration format is the same as db/connection. Slave connection name must be the same as associated master\nconnection name. To enable slave connections for specific resources create a slave connection configuration\nby adding slave_connection node as below:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nreturn array (\n    //...\n    'db' =>\n        array (\n            'connection' =>\n                array (\n                    'default' =>\n                        array (\n                            'host' => 'default-master-host',\n                            'dbname' => 'magento',\n                            'username' => 'magento',\n                            'password' => 'magento',\n                            'active' => '1',\n                        ),\n                ),\n            'slave_connection' =>\n                array (\n                    'default' =>\n                        array (\n                            'host' => 'default-slave-host',\n                            'dbname' => 'magento',\n                            'username' => 'read_only',\n                            'password' => 'password',\n                            'active' => '1',\n                ),\n        ),\n        'table_prefix' => '',\n    ),\n    //.......\n`}</code></pre>\n    <p>{`To add slave connection for resources other than 'default' repeat the step and add to db/slave_connection\nnew element with same name and slave configuration for specified resource.\nConfig structure retains backward compatibility if module is turned off.`}</p>\n    <p>{`WARNING: 'indexer' connection is not designed to have slave configuration.`}</p>\n    <InlineAlert slots=\"text\" mdxType=\"InlineAlert\" />\nThe version of this module is 100.4.4.\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","InlineAlert","name","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","isMDXComponent"],"sourceRoot":""}